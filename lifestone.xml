<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.1" created="2014-10-08 10:42" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>LifeStone</title>
	<link>http://blog.as3er.com</link>
	<description>Try Your Best</description>
	<pubDate>Wed, 08 Oct 2014 10:42:25 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://blog.as3er.com</wp:base_site_url>
	<wp:base_blog_url>http://blog.as3er.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>vanCopper</wp:author_login><wp:author_email>vancopperm@gmail.com</wp:author_email><wp:author_display_name><![CDATA[vanCopper]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.5.1</generator>

	<item>
		<title>酷站推荐</title>
		<link>http://blog.as3er.com/?p=19</link>
		<pubDate>Tue, 30 Jun 2009 02:26:30 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=19</guid>
		<description></description>
		<content:encoded><![CDATA[这些网站基本上都很炫，很值得学习借鉴。不只是技术，还有就是创意。好的创意才是最有价值的。废话少说！

<strong>Site 1 </strong>

<strong>Intel- Intru3D</strong>

网址：<a href="http://www.meintru3d.com/">http://www.meintru3d.com/</a>

赏析重点：

Intel最近几个网站越来越酷了，这次是3D加上Flash3D的

并且还能客制化你的3D 玩偶，是个很好的运用Flash贴图的案例

<strong>Site2 </strong>

<strong>Watchman- 6 Minutes to midnight</strong><strong>电影网站</strong><strong></strong>

网址：<a href="http://www.6minutestomidnight.com/">http://www.6minutestomidnight.com/</a>

赏析重点：

在开始的时候打入名字，然后开始整个探索的过程

要猜出那些图形代表的意义，整个感觉还蛮适合博世今年的创意线感觉

好难猜的.....哈.....

<strong>Site 3 </strong>

<strong>H&amp;M- Spring Fashion09</strong>

网址：<a href="http://www.hm.com/gb/#/spring_fashion09/">http://www.hm.com/gb/#/spring_fashion09/</a>

赏析重点：

H&amp;M的网站一向很有创意,这次09年春季服饰的表现手法也很让人匪夷所思.

那个视频衣服的粒子十分的炫。

忽然想到炒得很热的 3D试衣间。好多人看好这个项目。但是我觉得每个人都身体比例都不同，能试有能怎样？买回来一样会有不合身的问题。

<strong>Site4 </strong>

<strong>试毒品</strong><strong>- Try Drugs</strong><strong>网站</strong><strong></strong>

网址：<a href="http://www.trydrugs.net/">http://www.trydrugs.net/</a>

<strong>Labuat</strong><strong>音乐</strong><strong> – Labuat</strong>

网址：<a href="http://soytuaire.labuat.com/">http://soytuaire.labuat.com/</a>

赏析重点：

1． 这两个网站属于体验型的网站,让你的浏览经验很难忘记.

第一个是模拟你吸毒后的反应,第二个是让你听音乐时同时创造画面,还可录制你创造的轨迹.

先放出这四个吧，如果大家觉得好。我再继续贴出。]]></content:encoded>
		<excerpt:encoded><![CDATA[酷站推荐]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2009-06-30 10:26:30</wp:post_date>
		<wp:post_date_gmt>2009-06-30 02:26:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e9%85%b7%e7%ab%99%e6%8e%a8%e8%8d%90</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[sniwe]]></wp:comment_author>
			<wp:comment_author_email>heazon614@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.228.227.115</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 11:35:18</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 03:35:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈~收藏了....沙发先 待会留完言再看文章]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.102.244</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 13:43:21</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 05:43:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这些网站打开都慢死了哦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.232.136.171</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 13:45:54</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 05:45:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[flash站 有几个不慢的...其次就是JJ的网速不行。偶这边打开速度还可以，网站都是国外的。自然会慢点！哈哈....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>16</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[A.shun]]></wp:comment_author>
			<wp:comment_author_email>a.shunyi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://a.shunyi@gmail.com</wp:comment_author_url>
			<wp:comment_author_IP>121.11.14.38</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 23:51:27</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 15:51:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[都很有趣，不过速度确实不理想，都是国外的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>220.234.98.80</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 23:55:02</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 15:55:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是啊。对网络要求比较高。我在公司浏览起来还算流畅！哈.....多谢捧场！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>经典游戏一款，看你能玩几关！</title>
		<link>http://blog.as3er.com/?p=23</link>
		<pubDate>Tue, 30 Jun 2009 16:33:02 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=23</guid>
		<description></description>
		<content:encoded><![CDATA[玩玩看吧~~~~ 尺寸没搞定。大家先凑合着玩！

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="660" height="596" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.life-stone.cn/blog/wp-content/xeno_tactic_v1.3_6_crack.swf" /><embed type="application/x-shockwave-flash" width="660" height="596" src="http://www.life-stone.cn/blog/wp-content/xeno_tactic_v1.3_6_crack.swf"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[经典游戏，看你能过几关！]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2009-07-01 00:33:02</wp:post_date>
		<wp:post_date_gmt>2009-06-30 16:33:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e7%bb%8f%e5%85%b8%e6%b8%b8%e6%88%8f%e4%b8%80%e6%ac%be%ef%bc%8c%e7%9c%8b%e4%bd%a0%e8%83%bd%e7%8e%a9%e5%87%a0%e5%85%b3%ef%bc%81</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="game"><![CDATA[game]]></category>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.212.99.79</wp:comment_author_IP>
			<wp:comment_date>2009-07-09 13:15:15</wp:comment_date>
			<wp:comment_date_gmt>2009-07-09 05:15:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嘿嘿，我老耍不过这个的，想不到那么多]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-09 15:53:07</wp:comment_date>
			<wp:comment_date_gmt>2009-07-09 07:53:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[偶也只能到第四关......囧........]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>23</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Y.Boy]]></wp:comment_author>
			<wp:comment_author_email>y_boy@126.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.riahome.cn</wp:comment_author_url>
			<wp:comment_author_IP>222.70.176.218</wp:comment_author_IP>
			<wp:comment_date>2009-07-10 13:11:19</wp:comment_date>
			<wp:comment_date_gmt>2009-07-10 05:11:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[其实想打通关很容易。那些敌人的行走是以最短路径来走的。你自己制造两个路口让它们通向终点。当快要走到第一个路口时，马上起个建筑封掉，它们会转头走向第二个路口。当快走到第二个路口时，拆了第一个路口的建筑然后封掉第二个路口...
这样，它们会走来走去，都不会走到终点的。除了会飞的东西。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Blog 出了点问题</title>
		<link>http://blog.as3er.com/?p=44</link>
		<pubDate>Wed, 08 Jul 2009 10:35:16 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Blog忽然不能完整发表文章了，很郁闷啊！找时间看看什么原因！</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2009-07-08 18:35:16</wp:post_date>
		<wp:post_date_gmt>2009-07-08 10:35:16</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>blog-%e5%87%ba%e4%ba%86%e7%82%b9%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<category domain="post_tag" nicename="%e9%97%ae%e9%a2%98"><![CDATA[问题]]></category>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[huaimao]]></wp:comment_author>
			<wp:comment_author_email>mail@huaimao.org</wp:comment_author_email>
			<wp:comment_author_url>http://huaimao.org</wp:comment_author_url>
			<wp:comment_author_IP>125.72.101.98</wp:comment_author_IP>
			<wp:comment_date>2009-08-04 10:25:42</wp:comment_date>
			<wp:comment_date_gmt>2009-08-04 02:25:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这也是一篇文章？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-08-04 10:29:01</wp:comment_date>
			<wp:comment_date_gmt>2009-08-04 02:29:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[当然是喽....哈哈.....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>54</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>劳累中.....</title>
		<link>http://blog.as3er.com/?p=47</link>
		<pubDate>Wed, 15 Jul 2009 07:56:20 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[已经连续好几天加班了！昨夜加班到凌晨3点，回家睡了个觉！早上起来拉肚子，真是背啊！想请假来着，唉！最终还是乖乖的上班来了！

昨天打的回家车上跟司机聊天，问他几点下班他说马上就下班回家了。问他是不是做一休一，他说他全天！这也太辛苦了点，他说：咱们中国人就是喜欢 年轻的时候拿健康挣钱，年龄大了就是拿钱买健康了！很有道理啊！身体重要的道理大家都懂，但没有几个人真正关心过自己的身体。前段时间公司组织体检，去的时候就想，这次铁定要查出点毛病出来了，最后结果是的确有毛病，偏瘦！很庆幸啊！其他同事多多少少都要些问题！遥想工作几年后我的身体会是怎么个状态啊！

碎碎念！]]></content:encoded>
		<excerpt:encoded><![CDATA[健康 感悟]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2009-07-15 15:56:20</wp:post_date>
		<wp:post_date_gmt>2009-07-15 07:56:20</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%8a%b3%e7%b4%af%e4%b8%ad</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.106.20</wp:comment_author_IP>
			<wp:comment_date>2009-07-15 16:30:15</wp:comment_date>
			<wp:comment_date_gmt>2009-07-15 08:30:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我的手腕现在都有毛病了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-15 16:32:48</wp:comment_date>
			<wp:comment_date_gmt>2009-07-15 08:32:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[JJ还是多多锻炼身体的好！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>26</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>use-BoxMan</title>
		<link>http://blog.as3er.com/?p=48</link>
		<pubDate>Wed, 15 Jul 2009 08:04:36 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[喜欢大牛们看看能的几关，偶只能到第八关！

控制：小键盘上下左右控制键！

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="640" height="441" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="quality" value="high" /><param name="src" value="http://cache.armorgames.com/files/games/use-boxmen-4008.swf" /><embed type="application/x-shockwave-flash" width="640" height="441" src="http://cache.armorgames.com/files/games/use-boxmen-4008.swf" quality="high"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2009-07-15 16:04:36</wp:post_date>
		<wp:post_date_gmt>2009-07-15 08:04:36</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>use-boxman</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="game"><![CDATA[game]]></category>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.106.20</wp:comment_author_IP>
			<wp:comment_date>2009-07-15 16:35:25</wp:comment_date>
			<wp:comment_date_gmt>2009-07-15 08:35:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请问第二关怎么过的啊，我笨啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-15 16:37:31</wp:comment_date>
			<wp:comment_date_gmt>2009-07-15 08:37:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你按shift键 会有你的替身出现，你可以让他帮你扳住开关！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>28</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[sniwe]]></wp:comment_author>
			<wp:comment_author_email>heazon614@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.237.206.204</wp:comment_author_IP>
			<wp:comment_date>2009-07-19 14:33:34</wp:comment_date>
			<wp:comment_date_gmt>2009-07-19 06:33:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[第七关怎么过来着..................窘迫.......]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>I Love Traffic -----Game</title>
		<link>http://blog.as3er.com/?p=50</link>
		<pubDate>Wed, 15 Jul 2009 09:28:49 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[有时会想，为什么别人会有这么好的创意，这么好的想法？自己脑袋想爆，也不会有这么好的创意！差距啊！ 这个游戏操作非常简单，只要看红灯绿灯就可以了。你的任务就是保证别让车撞一块就可以了！大家玩玩看吧！

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="550" height="550" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="quality" value="high" /><param name="src" value="http://cache.armorgames.com/files/games/i-love-traffic-3515.swf" /><embed type="application/x-shockwave-flash" width="550" height="550" src="http://cache.armorgames.com/files/games/i-love-traffic-3515.swf" quality="high"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[game flashgame]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2009-07-15 17:28:49</wp:post_date>
		<wp:post_date_gmt>2009-07-15 09:28:49</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>i-love-traffic-game</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="game"><![CDATA[game]]></category>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.106.20</wp:comment_author_IP>
			<wp:comment_date>2009-07-16 09:51:14</wp:comment_date>
			<wp:comment_date_gmt>2009-07-16 01:51:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[就是不能贪心，等就可以过了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-16 10:27:49</wp:comment_date>
			<wp:comment_date_gmt>2009-07-16 02:27:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[等就可以了？后面还是很难过的！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>30</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Kevin]]></wp:comment_author>
			<wp:comment_author_email>kevin.luo.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.flextheworld.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.106.20</wp:comment_author_IP>
			<wp:comment_date>2009-07-17 13:04:24</wp:comment_date>
			<wp:comment_date_gmt>2009-07-17 05:04:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很好玩的游戏，刚打过了，盒子人那个比较难]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-17 13:22:59</wp:comment_date>
			<wp:comment_date_gmt>2009-07-17 05:22:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[盒子那个JunJun J 已经过到9关了.....哈~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>32</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>日记（转帖）</title>
		<link>http://blog.as3er.com/?p=55</link>
		<pubDate>Fri, 17 Jul 2009 05:55:54 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[<span id="ctl00_MainContentPlaceholder_ctl01_ctl00_lblEntry">她的日记:

昨天晚上他真的是非常非常古怪。我们本来约好了一起去一个餐厅吃晚饭。
但 是我白天和我好朋友去购物了，结果就去晚了一会儿,可能就因此让他不高兴了。他一直不理睬我，气氛僵极了。后来我主动让步，说我们都退一步，好好的交流一 下吧。他虽然同意了，但是还是继续沉默，一副无精打采心不在焉的样子。我问他到底怎么了，他只说’没事。后来我就问他，是不是我惹他生气了。他说，这不关 我的事，让我不要管。在回家的路上我对他说，我爱他。但是他只是继续开车，一点反应也没有。我真的不明白啊，我不知道他为什么不再说’我也爱你’了。我们 到家的时候我感觉，我可能要失去他了，因为他已经不想跟我有什么关系了，他不想理我了。他坐在那儿什么也不说，就只是闷着头的看电视, 继续发呆，继续无精打采。后来我只好自己上床睡去了。10分钟以后他爬到床上来了,他一直都在想别的什么。他的心思根本不在我这里！这真的是太让我心痛 了。我决定要跟他好好的谈一谈。但是他居然就已经睡着了！我只好躺在他身边默默的流泪，后来哭着哭着睡着了。我现在非常的确定，他肯定是有了别的女人了。 这真的像天塌下来了一样。天哪，我真不知道我活着还有什么意义。

他的日记:

TMD，意大利居然输了……</span>

<a href="http://royelee.spaces.live.com/blog/cns!B8C51C272F3725C0!1121.entry" target="_blank"><span>原文地址</span></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[关于男人和女人]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2009-07-17 13:55:54</wp:post_date>
		<wp:post_date_gmt>2009-07-17 05:55:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%97%a5%e8%ae%b0%ef%bc%88%e8%bd%ac%e5%b8%96%ef%bc%89</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="%e6%97%a5%e8%ae%b0%e7%94%b7%e5%a5%b3"><![CDATA[日记男女]]></category>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[范茂玲]]></wp:comment_author>
			<wp:comment_author_email>fanmaoling@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.189.164.237</wp:comment_author_IP>
			<wp:comment_date>2009-07-22 00:25:25</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 16:25:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不好玩~~伤心]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[FM365&#039;Blog &raquo; 她的日记《转贴》]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://fm365.net.ru/blog/index.php/internet/ta-de-ri-ji.html</wp:comment_author_url>
			<wp:comment_author_IP>61.175.209.139</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 16:08:33</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 08:08:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 转自：http://www.life-stone.cn/blog/?p=55    分类: 互联网 标签:         评论 (0) Trackbacks (0) 发表评论 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[FM365]]></wp:comment_author>
			<wp:comment_author_email>whlfeng@126.com</wp:comment_author_email>
			<wp:comment_author_url>http://fm365.net.ru</wp:comment_author_url>
			<wp:comment_author_IP>210.22.78.98</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 16:09:29</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 08:09:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[HOHO!
结果很意外！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>针对FLASH的SEO全攻略</title>
		<link>http://blog.as3er.com/?p=56</link>
		<pubDate>Sun, 19 Jul 2009 03:57:35 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[今天算是完整得读完了《SEO For Flash》 这本书，虽然该书是第一本关于怎么SEO Flash方面的书籍，但内容方面并没有让我有很多的惊喜，还是我所知道的内容和方法，只是它作了一个比较好的总结，难免有些失望啊。下面就结合自己的经 验，重新整理一下对Flex/Flash SEO的方法。

<strong>替换内容（Alternative Content）
</strong>html中嵌入swf的object元素允许替换内容（Alternative Content）嵌套在其中，当用户没有安装Flashplayer的时候，这些替换内容将显示反馈信息给用户。这些替换内容（Alternative Content）能被搜索引擎很好的识别，这使它成为一个对搜索引擎友好的网页内容的好方法。无论是从用户体验出发，还是从SEO出发，务必应该在swf 的嵌套中使用替换内容（Alternative Content）。

<strong>XMP元数据 在Flash CS4</strong>
Flash CS4引进XMP metadata 。 XMP （eXtensible Metadata Platform）是一种以标准为依据的开放式技术，可以撷取、保留和交换数位媒体与工作流程所用的Metadata (指说明档案的资讯)。 XMP Metadata存放了关于文件的各种讯息，用Flash CS4以上版本开发的Flash ，务必加上XMP Metadata。

<strong>SWFObject</strong>
SWFObject是一种利用加载javascript文件来嵌入Flash对象的一种方法，会最终替代Adobe Flash Player的检测试剂盒  。 SWFObject易于使用，是最被推荐使用的一种方式，它解决了很多在不同浏览器中产生的Bug，也很容易编写替换内容 （Alternative Content），对搜索引擎进行友好。
Adobe Flex4也已经采用了SWFObject的方式来显示swf。

<strong>SWFAddress</strong>
SWFAddress是Flex/Flash的SEO利器，通过SWFAddress可以对Flex/Flash的state进行随心所欲的deepLinking设置（seo.html#/xxx/），而这些虚拟化的deepLinking是可以被搜索引擎爬虫爬到。
这里其中要特别注意的是，在设置deepLinking的value时候，尽可能对搜索引擎友好，比如设置#/apple/来表示apple的分类，而不是采用#/uid=xxx的方式。

<strong>历史经理的Flex</strong>
顾名思义，历史记录管理。 Flex对Accordion和TabNavigator还有Viewstack（默认关闭）容器启用History Manager ，这就意味着可以直接使用浏览器的“前进”和“后退”来使用这个功能。推荐直接使用SWFAddress 。

<strong>URLKit  ＆ BrowseManager的软硬度</strong>
Flex3内置了一部分的deepLinking的功能，这就是BrowseManager，而这些内容来源于URLKit。 URLKit只适用于Flex。还是推荐SWFAddress，因为相比个人认为SWFAddress比较易用。

<strong>加载的SWF优化虚拟唯一网址</strong>
这部分是针对Virtual Unique URLs ，在Loading swf的时候，因为虚拟唯一网址 拥有不同的子域名，所以在指向swf源和其他资源的时候，应该采用读取统一源地址的方式。
请看详情虚拟唯一网址  。

结合实际的经验，在实作SEO for Flex/Flash的时候，应该从用户体验和SEO出发，推荐采取虚拟唯一网址  +SWFObject 的方式和用户进行交互，达到满意的效果。

<a href="http://www.52ria.com/tutorial/flash/other/2009/0716/59.html" target="_blank">原文地址</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[Flash SEO 全攻略]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2009-07-19 11:57:35</wp:post_date>
		<wp:post_date_gmt>2009-07-19 03:57:35</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e9%92%88%e5%af%b9flash%e7%9a%84seo%e5%85%a8%e6%94%bb%e7%95%a5</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%bd%ac%e8%bd%bd%e5%8c%ba"><![CDATA[转载区]]></category>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Flameshark]]></wp:comment_author>
			<wp:comment_author_email>flameshark@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.flameshark.cn</wp:comment_author_url>
			<wp:comment_author_IP>121.194.13.9</wp:comment_author_IP>
			<wp:comment_date>2009-07-20 10:30:55</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 02:30:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似现在google能搜到flash里面的内容了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.212.100.150</wp:comment_author_IP>
			<wp:comment_date>2009-07-20 11:12:05</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 03:12:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我很×的以为flash不能做seo-_-||]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-20 11:15:06</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 03:15:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[之前我也是这么认为的！哈~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>36</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.212.96.97</wp:comment_author_IP>
			<wp:comment_date>2009-07-20 15:17:08</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 07:17:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[给你说你的博客回复留言我不能收到邮件，改进一下]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-20 15:30:36</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 07:30:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[改进了，收到邮件没？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>40</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-20 16:04:56</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 08:04:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再来一次，如何了？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>40</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-20 16:07:28</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 08:07:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-40" rel="nofollow">@junjun</a>, 再来一次，看看如何！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>40</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>百鸡问题</title>
		<link>http://blog.as3er.com/?p=58</link>
		<pubDate>Sun, 19 Jul 2009 14:56:17 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=58</guid>
		<description></description>
		<content:encoded><![CDATA[公元5世纪末，我国古代数学家张丘建在《算经》中有一问题：鸡翁一，值钱五；鸡母一，值三钱，鸡雏三，值钱一，百钱买百鸡，问 鸡翁，母，雏各几何？

解法：可写个约束方程来解  ex：a 公鸡 b母鸡 c 小鸡

a+b+c = 100;

5a+3b+c/3 = 100;

c%3 = 0;

将方程写入程式即可得到结果 ，一般做法会是写三个循环加约束条件来完成算法：

for(a=0;a&lt;=100;a++){

for(b=0;b&lt;=100;b++){

for(c=0;c&lt;=100;c++){

}

}

}

这样算下来 内循环体(n+1)(n+1)(n+1) 当n=100时 执行次数大于100万次了就。因为 100元只能买到 100/5只公鸡 100/3只母鸡，小鸡数又和公鸡母鸡只数相关。所以正确写法是：
[actionscript3]
chicken_question(100);

function chicken_question(n:int){
	var answer_num:int;
	var chicken_g:Array = [];
	var chicken_m:Array = [];
	var chicken_s:Array = [];
	var a,b,c:int;
	var i,j:int;
	 i= n/5;
	 j = n/3;

	 for(a = 0;a&lt;=i;a++){
		 for(b=0;b&lt;=j;b++){
			 c = n-a-b;
			 if((5*a+3*b+c/3==n)&amp;&amp;(c%3==0)){
				 chicken_g[answer_num]=a;
				 chicken_m[answer_num] = b;
				 chicken_s[answer_num] = c;
				 answer_num++;
				 }

			 }

		 }
	//trace(chicken_g);

	}

[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[百鸡问题]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2009-07-19 22:56:17</wp:post_date>
		<wp:post_date_gmt>2009-07-19 14:56:17</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e7%99%be%e9%b8%a1%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95%e5%ad%a6%e4%b9%a0"><![CDATA[算法学习]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.212.100.150</wp:comment_author_IP>
			<wp:comment_date>2009-07-20 11:13:30</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 03:13:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[算术我会做，code我不会写]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-20 11:14:24</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 03:14:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>37</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Yahoo Astra 组件</title>
		<link>http://blog.as3er.com/?p=60</link>
		<pubDate>Mon, 20 Jul 2009 06:18:14 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=60</guid>
		<description></description>
		<content:encoded><![CDATA[很不错的一套组件。还包括了图表组件和布局组件，有兴趣的朋友可以去看看！From组件用起来不错！

<a href="http://developer.yahoo.com/flash/astra-flash/">YahooAstra</a>

From 截图

<img class="alignnone" title="form_1" src="http://www.life-stone.cn/blog/wp-content/Form_1.jpg" alt="" width="547" height="527" />]]></content:encoded>
		<excerpt:encoded><![CDATA[flash 组件 Yahoo Astra]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2009-07-20 14:18:14</wp:post_date>
		<wp:post_date_gmt>2009-07-20 06:18:14</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>yahoo-astra-%e7%bb%84%e4%bb%b6</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="yahoo-astra-%e7%bb%84%e4%bb%b6"><![CDATA[Yahoo Astra 组件]]></category>
	</item>
	<item>
		<title>Flash 读取后台验证码</title>
		<link>http://blog.as3er.com/?p=62</link>
		<pubDate>Tue, 21 Jul 2009 05:19:00 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[很多时候需要flash在前台来完成类似投票等功能，很多时候为了防止刷票，需要加上验证码。最近总是用到，现在就发上来，留贴以备以后温习。

其实很简单，只是拿到后台返回给的二进制流的图片，然后用Loader读取出来，最后addChild就完事，废话少说，贴上代码先！
[actionscript3]var code_url =&quot;&quot;;
var URL_request:URLRequest=new URLRequest(code_url);
var URL_var:URLVariables = new URLVariables();
	URL_request.data = code_var;
	URL_request.method = &quot;POST&quot;;
var URL_Loader:URLLoader=new URLLoader();
init();
function init() :void{

	URL_Loader.dataFormat = URLLoaderDataFormat.BINARY ;

	URL_Loader.load(URL_request);

	URL_Loader.addEventListener(Event.COMPLETE,completeLoad);
}
var content:ByteArray;
function completeLoad(evt:Event):void {
	trace(&quot;loaded&quot;);
	var loader=new Loader();
	content =evt.target.data as ByteArray;
	loader.loadBytes(content);//加载二进制流
	strCodeS_mc.addChild(loader);//添加验证码
	strCodeS_mc.buttonMode = true;
	strCodeS_mc.addEventListener(MouseEvent.CLICK , onClS);

}[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[flash 读取验证码]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2009-07-21 13:19:00</wp:post_date>
		<wp:post_date_gmt>2009-07-21 05:19:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flash-%e8%af%bb%e5%8f%96%e5%90%8e%e5%8f%b0%e9%aa%8c%e8%af%81%e7%a0%81</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b7%a5%e4%bd%9c%e6%97%a5%e5%bf%97"><![CDATA[工作日志]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.96.97</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 16:21:37</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 08:21:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好好学习天天向上]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 16:26:35</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 08:26:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-46" rel="nofollow">@junjun</a>, 必须的。偶去折腾下AS2的写法！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>46</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.96.97</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 16:28:43</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 08:28:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-47" rel="nofollow">@admin</a>,给你推荐下Kevin哥哥的博客应该会对你有用http://www.flextheworld.com/  你给我研究的页码呢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>47</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 16:31:32</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 08:31:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-48" rel="nofollow">@junjun</a>, 还没折腾呢....哈~~~Kevin哥哥的blog偶经常去！当然也是从你Blog里知道的！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>48</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.96.97</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 16:37:32</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 08:37:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-49" rel="nofollow">@admin</a>, 好好学习，顺便研究下页码]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>49</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Zashkaser]]></wp:comment_author>
			<wp:comment_author_email>zashkaser@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://allzoom.ru.ru</wp:comment_author_url>
			<wp:comment_author_IP>93.185.199.117</wp:comment_author_IP>
			<wp:comment_date>2009-08-06 17:19:01</wp:comment_date>
			<wp:comment_date_gmt>2009-08-06 09:19:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i found you by link from the Directory Listing Script from Ash..  Nice to read your blog ^.^]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-08-06 17:27:11</wp:comment_date>
			<wp:comment_date_gmt>2009-08-06 09:27:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[welcome!ha～～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>37</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[Sdanektir]]></wp:comment_author>
			<wp:comment_author_email>sdanektir@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://allzoom.ru</wp:comment_author_url>
			<wp:comment_author_IP>93.185.199.117</wp:comment_author_IP>
			<wp:comment_date>2009-08-07 12:35:04</wp:comment_date>
			<wp:comment_date_gmt>2009-08-07 04:35:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for post. Nice to see such good ideas.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>中国的前端开发者很蠢吗？(转载)</title>
		<link>http://blog.as3er.com/?p=63</link>
		<pubDate>Tue, 21 Jul 2009 10:43:15 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=63</guid>
		<description></description>
		<content:encoded><![CDATA[真的觉得很可笑，还是那句老话，千万不能不懂装懂！切记了！看原文，转载自7yue的Blog。

在看我这篇blog前，请先看看这篇文章。
中国人寿构建国内首个Silverlight企业级应用
http://www.infoq.com/cn/news/2009/07/microsoft-silverlight3-solutions

好，本文开始。故事背景：中国人寿使用了微软的.Net后台+Silverlight前台实现了他们的养老金精算咨询系统，我对此标题，对于使用何种技术实现项目丝毫没有任何异议。

那我作为evangelist的人对于此文章的异议在哪里？我的职业操守让我看到一段不得不发表评论的话，就是这段话，摘录自原文：

在采访吴磊的过程中，InfoQ中文站编辑了解到中国人寿选择Silverlight的原因和历程：
“ 和很多人理解的不一样，这次我们使用Silverlight不是微软推销的结果，而是我们先找到微软。在对决定使用何种技术时，我们事先进行了比较，包括 Adobe的Flash平台。调查后发现Flash没有很好的后端语言支持，而Silverlight有.NET平台。另外企业级应用很关注前后端技术的联动，以及需要所使用的技术是连续性的，也就是不断代，防止像Borland和BEA这样中途被收购的情况出现。综合这些原因，我们选择了 Silverlight。”

首先，我的疑问在于，是否微软的工程师和evangelist给客户洗了脑，让他们面向公众媒体说出这样不切实际的话，原来微软自己的销售和工程师不敢在公开媒体或者blog上说出“Flash没有很好的后端语言支持，而Silverlight有.NET平台 ”，试问，微软的哪一位员工敢于在自己的官方网站上描述出客户使用Silverlight而非Flash的原因是因为Flash没有后端语言支持？我们的前端开发者群体都很蠢么？值得用这样的话去侧面的打击一个竞争对手么？而且还是找了客户这样不明就里或者是被洗脑过的来被这个黑锅。 Silverlight+.Net是一家，因为都是MS的，但是因此得出Flash没有后端语言支持，或者是怕Adobe可能像Borland和BEA一样被收购而没有选择Flash的结论，这不是明摆了在扯淡么？就算微软没责任管客户要说什么，你们也要很负责的培训一下客户对于RIA领域的认识吧，别让你们的客户在说了某些话之后，遭到前端开发者和同行的耻笑，是一个IT公司解决方案中的必要一环。

好了，我来打几个比喻（这就是我们上小学时候典型的扯淡句法，原因没问题，结果没问题，原因+结论=扯淡），
经过用户调查后，使用了silverlight，但是为了表达自己的选择一定是正确的（当然可能不排除是微软某个不懂技术的业务销售鼓励客户这样说的），拉出Flash做垫背，结论就是Flash没有很好的后端支持。
比喻一
我非常喜爱摄影，所以买了一个C系的单反相机，但是为了表达我的购买选择一定是正确的，我把N系拿出来做垫背，说N系不好，原因是N系的镜头都无法搭配我的C系单反。
比喻二
我选择购买了一辆自行车，因为从我的需求角度，我认为自行车对于我来说是最适合的交通工具，但是为了表达我的选择一定是正确的，我把机动车拿出来说事，是因为机动车不能像自行车一样两个轱辘上路跑，不方便。

还有这句话，
“也就是不断代，防止像Borland和BEA这样中途被收购的情况出现......”
比喻三，
我喜欢编辑图片，我选择了微软的画笔工具，是因为我认为有可能Photoshop的厂商Adobe某一天会被收购，导致PS断代所致。看来我选择的原因是正确的。

在各位同行和前端开发者看到这样的文章时，你们不觉的可笑么？不觉的这样打击竞争对手的手段很低劣么？不觉的有损这些公司的形象么？

作为前端技术，Flash/Flex可以和所有的后端技术相结合，其中包括java,ruby,coldfusion,php，乃至.net。目前市场上，作为前端技术，称Flash跟后端服务的集成能力排在业界第二，没有其他前端技术敢称第一。不懂不可怕，就怕不懂装懂啊。

最后替这位说话的经理同情一下，不知道这位经理是上了哪位微软业务员的贼船，背了这个黑锅，发表这样娱乐大伙的观点。唉，微软的业务正背后偷着乐呢，殊不知，广大前端开发者也都笑呢。

最后再问，微软的工程师们，evangelist们，你们的客户说出这样的话，你们不觉得脸红么？要是这事发生在我身上，走哪里演示这个case，我都脸红。
<a href="http://www.7yue.com/post/338.html">
原文</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2009-07-21 18:43:15</wp:post_date>
		<wp:post_date_gmt>2009-07-21 10:43:15</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%b8%ad%e5%9b%bd%e7%9a%84%e5%89%8d%e7%ab%af%e5%bc%80%e5%8f%91%e8%80%85%e5%be%88%e8%a0%a2%e5%90%97%ef%bc%9f%e8%bd%ac%e8%bd%bd</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="%e4%b8%ad%e5%9b%bd%e5%89%8d%e7%ab%af%e5%bc%80%e5%8f%91%e8%80%85"><![CDATA[中国前端开发者]]></category>
		<category domain="category" nicename="%e8%bd%ac%e8%bd%bd%e5%8c%ba"><![CDATA[转载区]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_d85798bfa9b9fe8f5b5459b26bc6cdb6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.96.97</wp:comment_author_IP>
			<wp:comment_date>2009-07-22 13:43:27</wp:comment_date>
			<wp:comment_date_gmt>2009-07-22 05:43:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[羞羞]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.212.99.187</wp:comment_author_IP>
			<wp:comment_date>2009-08-12 11:12:16</wp:comment_date>
			<wp:comment_date_gmt>2009-08-12 03:12:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[更新呢小弟]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-08-13 14:37:12</wp:comment_date>
			<wp:comment_date_gmt>2009-08-13 06:37:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-59" rel="nofollow">@junjun</a>, JJ小弟更新了！哈哈....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>42</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>FlashPlayer 10 新特性体验</title>
		<link>http://blog.as3er.com/?p=65</link>
		<pubDate>Thu, 13 Aug 2009 06:34:14 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[（注：君君姐发话了，为啥不更新了？最近实在是忙的焦头烂额。为了表达对君君姐关注偶Blog的感激之情，更新此篇日志。）
咳....标题写得有点大，大家表要拍砖！其实就是一个新增方法，FileReference类的load 方法。有时候大家需要上传头像，10之前的做法，我的做法就是先丢到服务器，完事在加载出来给用户预览调整，然后最终用户确认上传，再丢一次。繁琐不说，服务器负担加重。。。。。10的出现终于看到了曙光，直接load加载进来，那怎一个爽字可以总结出此时此刻鸡冻的心情。
正好，项目用到了，就写了一个头像上传的东东。写之前有跟头儿沟通，说用10写，他OK，项目上线的前夜，BOSS说，怎么能用10呢，改回来。我滴汗啊。。。。。老老实实的加班改了回来！郁闷的很！好，废话少说，上东西先。

可以拖动选框来确认你要上传的图片区域，这里用到了JPGEncoder。有兴趣的朋友可以下载来试试。

我不做版本检测了，如果下面的swf你无法观看，那请你升级你的flashplayer。大哥10都这么久了，咋能还用9呢！

<object style="width: 550px; height: 400px;" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="550" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/uploads/upload_Player_10.swf" /><embed style="width: 550px; height: 400px;" type="application/x-shockwave-flash" width="550" height="400" src="http://www.as3er.com/uploads/upload_Player_10.swf"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[flashPlayer 10 新特性 头像上传 截图]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2009-08-13 14:34:14</wp:post_date>
		<wp:post_date_gmt>2009-08-13 06:34:14</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flashplayer-10-%e6%96%b0%e7%89%b9%e6%80%a7%e4%bd%93%e9%aa%8c</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="flashplayer-10-%e6%96%b0%e7%89%b9%e6%80%a7"><![CDATA[flashPlayer 10 新特性]]></category>
		<category domain="category" nicename="%e5%b7%a5%e4%bd%9c%e6%97%a5%e5%bf%97"><![CDATA[工作日志]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.212.99.187</wp:comment_author_IP>
			<wp:comment_date>2009-08-13 15:35:10</wp:comment_date>
			<wp:comment_date_gmt>2009-08-13 07:35:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[成功转化数据流，未能连接服务器]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-08-13 15:38:34</wp:comment_date>
			<wp:comment_date_gmt>2009-08-13 07:38:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-61" rel="nofollow">@junjun</a>, 当然不能传，传哪里？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>61</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.212.99.187</wp:comment_author_IP>
			<wp:comment_date>2009-08-13 15:46:17</wp:comment_date>
			<wp:comment_date_gmt>2009-08-13 07:46:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-62" rel="nofollow">@admin</a>, 传你服务器 :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>44</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-08-13 15:49:57</wp:comment_date>
			<wp:comment_date_gmt>2009-08-13 07:49:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-63" rel="nofollow">@junjun</a>, 囧！那直接挂掉算了。。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>45</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Flash 省 市 县 三级联动</title>
		<link>http://blog.as3er.com/?p=66</link>
		<pubDate>Thu, 13 Aug 2009 11:34:02 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[之前总是二级联动，现在要升级了，下午难得闲了会，偷懒写了这个三级联动。代码灰常拙劣，大家表要拍砖！ 上效果先，下拉框字体不太对，有时间再折腾吧。大家凑合着看吧！

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="400" height="300" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.life-stone.cn/uploads/city.swf" /><embed type="application/x-shockwave-flash" width="400" height="300" src="http://www.life-stone.cn/uploads/city.swf"></embed></object>

以下为 City 类：
[actionscript3]package {
	import fl.controls.ComboBox;
	import flash.display.Loader;
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.net.URLLoader;
	import flash.net.URLRequest;
	public class City extends Sprite {
		private var province:ComboBox;
		private var city:ComboBox;
		private var country:ComboBox;
		private var city_Xml:XML;
		private var city_Loader:URLLoader;
		private var city_Request:URLRequest;
		//城市列表的XML文件 在这里 需要的朋友 去下载吧
                private var city_Url:String = &quot;http://www.life-stone.cn/uploads/Area.xml&quot;;
		private var provinec_Array:Array = [];
		private var city_Array:Array = [];
		private var country_Array:Array = [];
		var style:TextFormat = new TextFormat();

		public function City () {
			creatUI ();
		}
		//creat UI
		private function creatUI () {
			trace(&quot;creatUI...&quot;);
			province = new ComboBox();
			city = new ComboBox();
			country = new ComboBox();

			province.x = 50;
			city.x = 150;
			country.x = 250;

			province.y = 50;
			city.y = 50;
			country.y = 50;
			this.addChild (province);
			this.addChild (city);
			this.addChild (country);

			getXML ();
		}
		//get xmldata
		private function getXML () {
			//trace(&quot;getXML....&quot;);
			city_Request = new URLRequest(city_Url);
			city_Loader = new URLLoader();
			city_Loader.addEventListener (Event.COMPLETE, city_Loader_OnComplete);
			city_Loader.load (city_Request);
		}
		//load xml complete
		private function city_Loader_OnComplete (e:Event) {
			city_Xml = new XML(e.target.data);
			var temp_Province = city_Xml.province.@ *;
			//创建省份
			for (var i in temp_Province) {
				provinec_Array[Number(i)] = temp_Province[i];
			}
			creatProvinec ();
		}
		//创建 省份
		private function creatProvinec () {
		//	setSytles();
			province.addItemAt ( { data:&quot;0&quot;, label:&quot;请选择&quot; }, 0);
			city.addItemAt ( { data:&quot;0&quot;, label:&quot;请选择&quot; }, 0);
			country.addItemAt ( { data:&quot;0&quot;, label:&quot;请选择&quot; }, 0);
			for (var i = 0; i &amp;lt; provinec_Array.length; i++) {
				province.addItemAt ({data:provinec_Array[i],label:provinec_Array[i]},(i+1));
			}
		//	setSytles();
			province.addEventListener (Event.CHANGE, province_OnChange);
		}
		private function province_OnChange (e:Event) {
		//	setSytles();
			trace (e.target.selectedLabel);
			creatCity (e.target.selectedLabel);
		}
		//创建 市级城市
		private function creatCity (_city) {
			city.removeAll ();
			city.addItemAt ( { data:&quot;0&quot;, label:&quot;请选择&quot; }, 0);
			//setSytles();
			city_Array.length = 0;
			for (var n = 0; n &amp;lt; provinec_Array.length; n++) {
				if (city_Xml.province[n].@name == _city) {
					var temp_city = city_Xml.province[n].city.@ *;
					trace (temp_city);
					for (var m in temp_city) {
						//trace(&quot;m....&quot;+m);
						city_Array[m]=temp_city[m];
					}
				}
			}
			trace (&quot;city......&quot;+city_Array);
			for (var i = 0; i &amp;lt; city_Array.length; i++) {
				city.addItemAt ({data:city_Array[i],label:city_Array[i]},(i+1));
			}
		//	setSytles();
			city.addEventListener (Event.CHANGE, city_OnChange);

		}
		private function city_OnChange (e:Event) {
		//	setSytles();
			creatCountry (e.target.selectedLabel);
		}
		//创建 县级
		private function creatCountry (_country) {
			country.removeAll ();
			country.addItemAt ( { data:&quot;0&quot;, label:&quot;请选择&quot; }, 0);
		//	setSytles();
			country_Array.length = 0;
			//trace(city_Xml..province..city.@ * );
			var temp_country = city_Xml..province..city.@ *;
			for (var m in temp_country) {
				if (temp_country[m] == _country) {
					//trace();
					var temp_country_Array = city_Xml..province..city[m].country.@*;
					trace (temp_country_Array);
					for (var q in temp_country_Array) {
						country_Array[q] = temp_country_Array[q];
					}
				}
			}
			for (var i = 0; i &amp;lt; country_Array.length; i++) {
				country.addItemAt ({data:country_Array[i],label:country_Array[i]},(i+1));
			}
			country.addEventListener(Event.CHANGE, country_OnChange);
		}
		function country_OnChange(e:Event) {
			//setSytles();
			}
	}
}[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[Flash 城市 三级 下拉 联动]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2009-08-13 19:34:02</wp:post_date>
		<wp:post_date_gmt>2009-08-13 11:34:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-%e7%9c%81-%e5%b8%82-%e5%8e%bf-%e4%b8%89%e7%ba%a7%e8%81%94%e5%8a%a8</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.212.99.187</wp:comment_author_IP>
			<wp:comment_date>2009-08-14 09:57:09</wp:comment_date>
			<wp:comment_date_gmt>2009-08-14 01:57:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[代码不懂，看个效果
下拉框把格子去掉好看点]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-08-14 10:03:01</wp:comment_date>
			<wp:comment_date_gmt>2009-08-14 02:03:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[只是折腾下功能！哈哈.....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>65</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>像素级 不规则物体 碰撞检测</title>
		<link>http://blog.as3er.com/?p=67</link>
		<pubDate>Fri, 14 Aug 2009 09:58:28 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[整理出来，贴出来。其他就不多说了，贴代码。上文件！

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="550" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.life-stone.cn/uploads/hitTest.swf" /><embed type="application/x-shockwave-flash" width="550" height="400" src="http://www.life-stone.cn/uploads/hitTest.swf"></embed></object>
[actionscript3]
package
{
	import flash.display.Bitmap;
	import flash.display.BitmapData;
	import flash.display.MovieClip;
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.MouseEvent;
	import flash.geom.Point;
	/**
	 * MSN : jasonluck@live.cn
	 * QQ: 492214810
	 * BLOG: http://www.life-stone.com
	 * @author jason
	 */
	public class BitmapHitTest extends Sprite
	{
		private var obj1:MovieClip;
		private var obj2:MovieClip;
		private var bitmapD:BitmapData;
		private var bitmapD1:BitmapData;
		public function BitmapHitTest(_obj1,_obj2)
		{
			obj1 = _obj1;
			obj2 = _obj2;
			addEventListener(Event.ENTER_FRAME , onEnterFrames);
			bitmapD = new BitmapData(obj1.width, obj1.height, true,0);
			bitmapD.draw(_obj1);
			obj1.addEventListener(MouseEvent.MOUSE_DOWN , bmp1_OnMouseDown);
			bitmapD1 = new BitmapData(obj2.width, obj2.height, true, 0);
			bitmapD1.draw(obj2);
				}
		private function bmp1_OnMouseDown(e:MouseEvent) {
			e.target.startDrag();
			}
		private function onEnterFrames(e:Event) {
		if (bitmapD.hitTest(new Point(obj1.x, obj1.y), 255, bitmapD1, new Point(obj2.x, obj2.y))) {
				obj1.gotoAndStop(2);
				obj2.gotoAndStop(2);
				}	else {
				obj1.gotoAndStop(1);
				obj2.gotoAndStop(1);
					}
		}
	}

}[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2009-08-14 17:58:28</wp:post_date>
		<wp:post_date_gmt>2009-08-14 09:58:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%83%8f%e7%b4%a0%e7%ba%a7-%e4%b8%8d%e8%a7%84%e5%88%99%e7%89%a9%e4%bd%93-%e7%a2%b0%e6%92%9e%e6%a3%80%e6%b5%8b</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="flash-%e4%b8%8d%e8%a7%84%e5%88%99%e7%89%a9%e4%bd%93%e7%a2%b0%e6%92%9e%e6%a3%80%e6%b5%8b"><![CDATA[Flash 不规则物体碰撞检测]]></category>
		<category domain="category" nicename="%e5%b7%a5%e4%bd%9c%e6%97%a5%e5%bf%97"><![CDATA[工作日志]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>118.113.0.162</wp:comment_author_IP>
			<wp:comment_date>2009-08-15 15:16:51</wp:comment_date>
			<wp:comment_date_gmt>2009-08-15 07:16:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错不错噢，期待游戏]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[XD]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-08-17 11:42:43</wp:comment_date>
			<wp:comment_date_gmt>2009-08-17 03:42:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-67" rel="nofollow">@junjun</a>, 游戏现在是停止的状态！哎。。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>67</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[yjm]]></wp:comment_author>
			<wp:comment_author_email>417767208@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.236.255.161</wp:comment_author_IP>
			<wp:comment_date>2009-12-15 19:39:16</wp:comment_date>
			<wp:comment_date_gmt>2009-12-15 11:39:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[过来学习一下, 不错, 现在 3D FLASH 很有前途啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>历尽千辛万苦，终于搬回来了！</title>
		<link>http://blog.as3er.com/?p=68</link>
		<pubDate>Wed, 23 Sep 2009 07:36:37 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=68</guid>
		<description></description>
		<content:encoded><![CDATA[再一次证明了，我这人很能拖，一直拖到现在，终于把blog搬了回来！悲剧的说，最近身体欠佳，加班遭的孽！马上十一了，回家烧饼羊肉串去。。。。。哈哈。。。。。想一下，偶的病就好了大半了！]]></content:encoded>
		<excerpt:encoded><![CDATA[搬迁]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2009-09-23 15:36:37</wp:post_date>
		<wp:post_date_gmt>2009-09-23 07:36:37</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%8e%86%e5%b0%bd%e5%8d%83%e8%be%9b%e4%b8%87%e8%8b%a6%ef%bc%8c%e7%bb%88%e4%ba%8e%e6%90%ac%e5%9b%9e%e6%9d%a5%e4%ba%86%ef%bc%81</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>125.69.53.163</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 23:48:01</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 15:48:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你不是一直在这么搬什么啊？我也要吃羊肉串]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>220.234.98.80</wp:comment_author_IP>
			<wp:comment_date>2009-09-25 18:10:14</wp:comment_date>
			<wp:comment_date_gmt>2009-09-25 10:10:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[家里的羊肉串那叫一个好吃啊！唉呀呀......口水！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>125.71.98.153</wp:comment_author_IP>
			<wp:comment_date>2009-09-25 21:15:48</wp:comment_date>
			<wp:comment_date_gmt>2009-09-25 13:15:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最新的日志不能留言
我亲爱的小朋友要注意点点哟，钱再多也买不来生命啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>118.132.34.19</wp:comment_author_IP>
			<wp:comment_date>2009-10-06 07:04:36</wp:comment_date>
			<wp:comment_date_gmt>2009-10-05 23:04:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[JJ说的对！好像忽然领悟了很多！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>125.71.99.166</wp:comment_author_IP>
			<wp:comment_date>2009-10-09 13:14:36</wp:comment_date>
			<wp:comment_date_gmt>2009-10-09 05:14:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你是不是把新日志的留言关闭了啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-10-13 13:58:26</wp:comment_date>
			<wp:comment_date_gmt>2009-10-13 05:58:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[老有人刷广告，我就给关了！哈哈....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.110.81</wp:comment_author_IP>
			<wp:comment_date>2009-10-23 17:45:44</wp:comment_date>
			<wp:comment_date_gmt>2009-10-23 09:45:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-261" rel="nofollow">@admin</a>, 你装一个插件嘛，那个加减题的，不过我讨厌那个，每次要多输入一个数字， 我装了一个antispam Bee 的插件，他可以过虑掉垃圾流言，但是那种人工的广告就没办法了哈]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>高烧</title>
		<link>http://blog.as3er.com/?p=70</link>
		<pubDate>Fri, 25 Sep 2009 10:13:43 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=70</guid>
		<description></description>
		<content:encoded><![CDATA[又病了，高烧，中度肺炎。难过死了。今天又请了一天假，看个病花了六个小时，在此多谢whl哥的全程陪护！挂了一下午的水，总算又好转了！
忽然觉得，没病是多么幸福的事情。健康是福！

碎碎念！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2009-09-25 18:13:43</wp:post_date>
		<wp:post_date_gmt>2009-09-25 10:13:43</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%ab%98%e7%83%a7</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
	</item>
	<item>
		<title>回家</title>
		<link>http://blog.as3er.com/?p=73</link>
		<pubDate>Mon, 05 Oct 2009 23:29:28 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[终于有了难得的长假，拖着病泱泱的身体回到了家！踏进家门的那一刻仿佛病已好大半！吃着家里的饭菜，才发现自己的胃口从没这么好过。奶奶总是让我吃这个让我吃那个，总想让我把家里的东西都吃了才罢休！奶奶身体还算硬朗，爷爷身体明显不如去年了，那个爬墙头的小老头走路都不是那么轻快了。晚饭喝鸡汤，他嚷这猪肉怎么没煮烂，我说爷爷这是鸡肉！找我下棋，硬是拿着我的小卒当自己大车用。。。。。爷爷真的老了，也糊涂了。忽然觉得已经没有多少机会陪他下下棋了。。。。
我又开始想家了。。。。好像昨天回去今天就回来了！想你们！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2009-10-06 07:29:28</wp:post_date>
		<wp:post_date_gmt>2009-10-05 23:29:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9b%9e%e5%ae%b6</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CU3ER --Free Flash 3D Img Slider</title>
		<link>http://blog.as3er.com/?p=83</link>
		<pubDate>Thu, 22 Oct 2009 06:19:30 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=83</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="" align="alignnone" width="480" caption="效果图"]<img title="cu3er" src="http://www.life-stone.cn/uploads/cu3er-3d-image-slider.jpg" alt="效果图" width="480" height="192" />[/caption]

只需简单的配置一下xml<span onclick="tagshow(event)">文件</span>就可以拥有炫目的3D<span onclick="tagshow(event)">效果</span>的图片展示，而且完全免费，你可以用在你想用的任何地方。最重要的是，他是完全免费的。

<a href="http://www.progressivered.com/cu3er/" target="_blank">效果以及下载链接</a>
<a href="http://www.progressivered.com/cu3er/docs/" target="_blank">帮助文档</a>
<a href="http://www.progressivered.com/cu3er/quick-start.htm" target="_blank">快速开始小<span onclick="tagshow(event)">教程</span></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2009-10-22 14:19:30</wp:post_date>
		<wp:post_date_gmt>2009-10-22 06:19:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cu3er-free-flash-3d-img-slider</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="img-3d"><![CDATA[IMG 3D]]></category>
		<category domain="category" nicename="%e8%bd%ac%e8%bd%bd%e5%8c%ba"><![CDATA[转载区]]></category>
	</item>
	<item>
		<title>终于有了Blog...</title>
		<link>http://blog.as3er.com/?p=165</link>
		<pubDate>Sat, 27 Jun 2009 13:28:36 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=3</guid>
		<description></description>
		<content:encoded><![CDATA[忙了一下午，申请域名，域名解析，主机绑定，调试安装....整个下午终于搞定了！再次感谢地平线的寂寞的热情帮助。

一切搞定后以为万事大吉，谁知出了RP问题。Blog家里的三台电脑均能正常浏览，唯独我的不能访问，而且错误让你很费解，无法解析域名。浏览其他网站均正常，唯独自己的Blog不行！隔壁大呼：RP啊...RP....囧！检查了系统版本发现他人均为SP3，我是SP2。那我就装个SP3吧，安装更新，搞定......不幸的事再次发生。XP 要正版验证，我压根就进不了系统了~~~囧到了极点。这可如何是好，那么多环境，重装了再配，无非要累死在本本前。还好进了安全模式。成功盗版SP3~~~有惊无险！

一切就绪，写吧！本来给Blog的定位是技术博客！不过申请的域名有点不技术~~~那就让这Blog杂铺店吧。不过还是会技术为主！域名偶不太满意，虽然想了很久。亲们，有好的idea拿来用下啦~~~]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2009-06-27 08:28:36</wp:post_date>
		<wp:post_date_gmt>2009-06-27 13:28:36</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e7%bb%88%e4%ba%8e%e6%9c%89%e4%ba%86blog</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<category domain="post_tag" nicename="%e7%ac%ac%e4%b8%80%e6%ad%a5"><![CDATA[第一步]]></category>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[LwJ]]></wp:comment_author>
			<wp:comment_author_email>liangwj888@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.95.44.22</wp:comment_author_IP>
			<wp:comment_date>2009-06-27 23:52:24</wp:comment_date>
			<wp:comment_date_gmt>2009-06-28 04:52:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[作为第一个留言者
我很荣幸。

希望你能多写点。
什么都好。

我也想弄自己的博客。
等工作了，
教我也申请个

这个要钱不？买域名是不是要钱呀？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>220.234.98.80</wp:comment_author_IP>
			<wp:comment_date>2009-06-27 23:57:18</wp:comment_date>
			<wp:comment_date_gmt>2009-06-28 04:57:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈。。。谢谢光临！域名是自己买的，服务器是国外的。你要想弄，QQ我好了。花不了多少钱！几十块而已！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>60</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[sniwe]]></wp:comment_author>
			<wp:comment_author_email>heazon614@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.228.241.226</wp:comment_author_IP>
			<wp:comment_date>2009-06-28 00:09:59</wp:comment_date>
			<wp:comment_date_gmt>2009-06-28 05:09:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[额~~好牛呀~哈哈~加油~居然不是第一个。。。郁闷啦.......]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>220.234.98.80</wp:comment_author_IP>
			<wp:comment_date>2009-06-28 00:47:55</wp:comment_date>
			<wp:comment_date_gmt>2009-06-28 05:47:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈...不是第一个不用郁闷啊。等我主页搞好。第一时间通知你去～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>62</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[sniwe]]></wp:comment_author>
			<wp:comment_author_email>heazon614@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.84.252.246</wp:comment_author_IP>
			<wp:comment_date>2009-06-28 09:18:52</wp:comment_date>
			<wp:comment_date_gmt>2009-06-28 14:18:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈~好的啊~
对了 你这边添加一个回复会好点吧~不然不知道是谁回复的呀 哈哈 到了以后人气旺了的时候就麻烦了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[sniwe]]></wp:comment_author>
			<wp:comment_author_email>heazon614@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.84.252.246</wp:comment_author_IP>
			<wp:comment_date>2009-06-28 09:19:50</wp:comment_date>
			<wp:comment_date_gmt>2009-06-28 14:19:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[额...还有时间....这个...现在是22：19........]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>220.234.98.80</wp:comment_author_IP>
			<wp:comment_date>2009-06-28 09:22:28</wp:comment_date>
			<wp:comment_date_gmt>2009-06-28 14:22:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哎呀....忘记改时区了！谢谢提醒～～～哈~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>65</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.102.244</wp:comment_author_IP>
			<wp:comment_date>2009-06-29 13:14:33</wp:comment_date>
			<wp:comment_date_gmt>2009-06-29 05:14:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[先给你踩一脚脚多]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[XIAODI]]></wp:comment_author>
			<wp:comment_author_email>jackywang7@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.217.231.60</wp:comment_author_IP>
			<wp:comment_date>2009-06-29 15:33:51</wp:comment_date>
			<wp:comment_date_gmt>2009-06-29 07:33:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[全英文 看不懂]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[Flameshark]]></wp:comment_author>
			<wp:comment_author_email>flameshark@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.194.13.12</wp:comment_author_IP>
			<wp:comment_date>2009-06-29 21:00:19</wp:comment_date>
			<wp:comment_date_gmt>2009-06-29 13:00:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[过来踩踩大师兄哇~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>220.234.98.80</wp:comment_author_IP>
			<wp:comment_date>2009-06-29 21:03:08</wp:comment_date>
			<wp:comment_date_gmt>2009-06-29 13:03:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈。。。多谢师弟！SF找你很久了！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>69</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[sniwe]]></wp:comment_author>
			<wp:comment_author_email>heazon614@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.228.226.200</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 03:03:00</wp:comment_date>
			<wp:comment_date_gmt>2009-06-29 19:03:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我在考虑是不是把你的网站收藏起来 不然想给你踩踩的时候老要去你校内翻信息 哈哈]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.232.136.171</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 10:18:53</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 02:18:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[收藏，快点收藏！我马上更新！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>71</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[Puxiao]]></wp:comment_author>
			<wp:comment_author_email>yangpuxiao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://puxiao.com</wp:comment_author_url>
			<wp:comment_author_IP>123.14.111.236</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 15:28:52</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 07:28:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Puxiao发来贺电。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.232.136.171</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 15:32:46</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 07:32:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[多谢多谢~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>18</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[A.shun]]></wp:comment_author>
			<wp:comment_author_email>a.shunyi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.a-shun.com/</wp:comment_author_url>
			<wp:comment_author_IP>121.11.14.38</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 23:50:52</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 15:50:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[加油了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[Illubre]]></wp:comment_author>
			<wp:comment_author_email>Illubre@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.download666.de</wp:comment_author_url>
			<wp:comment_author_IP>212.235.107.41</wp:comment_author_IP>
			<wp:comment_date>2009-07-25 08:17:16</wp:comment_date>
			<wp:comment_date_gmt>2009-07-25 00:17:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi. great article!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>First GoogleMap Application</title>
		<link>http://blog.as3er.com/?p=89</link>
		<pubDate>Thu, 22 Oct 2009 06:30:12 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[果然强大的说！折腾了一个小demo!

<object style="width: 600px; height: 500px;" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="600" height="500" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.life-stone.cn/uploads/googleMap_jason.swf" /><embed style="width: 600px; height: 500px;" type="application/x-shockwave-flash" width="600" height="500" src="http://www.life-stone.cn/uploads/googleMap_jason.swf"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[GoogleMap 3D]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2009-10-22 14:30:12</wp:post_date>
		<wp:post_date_gmt>2009-10-22 06:30:12</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>first-googlemap-application</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="googlemap"><![CDATA[GoogleMap]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>炫音跳跃</title>
		<link>http://blog.as3er.com/?p=114</link>
		<pubDate>Sun, 01 Nov 2009 10:21:34 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=114</guid>
		<description></description>
		<content:encoded><![CDATA[单击swf文件可暂停/播放 音乐

想研究的朋友可单独Mail我 jasonluck@live.cn

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="640" height="360" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/uploads/Demo01.swf" /><embed type="application/x-shockwave-flash" width="640" height="360" src="http://www.as3er.com/uploads/Demo01.swf"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[Music flash]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date>2009-11-01 18:21:34</wp:post_date>
		<wp:post_date_gmt>2009-11-01 10:21:34</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e7%82%ab%e9%9f%b3%e8%b7%b3%e8%b7%83</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="flash-music"><![CDATA[Flash Music]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[myself]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.as3er.cn</wp:comment_author_url>
			<wp:comment_author_IP>118.132.34.19</wp:comment_author_IP>
			<wp:comment_date>2009-11-01 18:47:26</wp:comment_date>
			<wp:comment_date_gmt>2009-11-01 10:47:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[过来踩踩！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>125.69.53.89</wp:comment_author_IP>
			<wp:comment_date>2009-11-02 23:44:14</wp:comment_date>
			<wp:comment_date_gmt>2009-11-02 15:44:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[杯具liao,额滴电脑八知道为虾米不发声liao]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Basic Particle Demo_1</title>
		<link>http://blog.as3er.com/?p=117</link>
		<pubDate>Thu, 05 Nov 2009 07:08:14 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="550" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/uploads/try.swf" /><embed type="application/x-shockwave-flash" width="550" height="400" src="http://www.as3er.com/uploads/try.swf"></embed></object>

引力公式  force = G * m1 * m2 / distance2 （G为引力常量 可省略，m1,m2 粒子质量,distance2 物体距离平方！]]></content:encoded>
		<excerpt:encoded><![CDATA[粒子 引力]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2009-11-05 15:08:14</wp:post_date>
		<wp:post_date_gmt>2009-11-05 07:08:14</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>basic-particle-demo_1</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="%e5%bc%95%e5%8a%9b"><![CDATA[引力]]></category>
		<category domain="post_tag" nicename="%e7%b2%92%e5%ad%90"><![CDATA[粒子]]></category>
		<category domain="category" nicename="%e7%b2%92%e5%ad%90%e7%b2%92%e5%ad%90"><![CDATA[粒子粒子]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.97.251</wp:comment_author_IP>
			<wp:comment_date>2009-11-06 17:49:54</wp:comment_date>
			<wp:comment_date_gmt>2009-11-06 09:49:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看不懂公式-_-||]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cool Particle</title>
		<link>http://blog.as3er.com/?p=120</link>
		<pubDate>Thu, 05 Nov 2009 09:43:30 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=120</guid>
		<description></description>
		<content:encoded><![CDATA[拖动小圆环看下效果，很cool的说！

为大家推荐这个粒子引擎 <a href="http://code.google.com/p/stardust-particle-engine/" target="_blank">Stardust</a>

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="640" height="480" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/uploads/Waypoints.swf" /><embed type="application/x-shockwave-flash" width="640" height="480" src="http://www.as3er.com/uploads/Waypoints.swf"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[Cool Particle 粒子]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date>2009-11-05 17:43:30</wp:post_date>
		<wp:post_date_gmt>2009-11-05 09:43:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cool-particle</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="cool-particle"><![CDATA[Cool Particle]]></category>
		<category domain="category" nicename="%e7%b2%92%e5%ad%90%e7%b2%92%e5%ad%90"><![CDATA[粒子粒子]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Logo On Fire</title>
		<link>http://blog.as3er.com/?p=123</link>
		<pubDate>Fri, 06 Nov 2009 02:54:03 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=123</guid>
		<description></description>
		<content:encoded><![CDATA[新鲜出炉，把Logo粒子化啦~~~置顶啦！

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="300" height="100" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/uploads/Logo.swf" /><embed type="application/x-shockwave-flash" width="300" height="100" src="http://www.as3er.com/uploads/Logo.swf"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[粒子]]></excerpt:encoded>
		<wp:post_id>123</wp:post_id>
		<wp:post_date>2009-11-06 10:54:03</wp:post_date>
		<wp:post_date_gmt>2009-11-06 02:54:03</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>logo-on-fire</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e7%b2%92%e5%ad%90"><![CDATA[粒子]]></category>
		<category domain="category" nicename="%e7%b2%92%e5%ad%90%e7%b2%92%e5%ad%90"><![CDATA[粒子粒子]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[FM365]]></wp:comment_author>
			<wp:comment_author_email>onewaycool@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://fm365.net.ru</wp:comment_author_url>
			<wp:comment_author_IP>210.22.78.98</wp:comment_author_IP>
			<wp:comment_date>2009-11-06 15:16:41</wp:comment_date>
			<wp:comment_date_gmt>2009-11-06 07:16:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很帅]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[搓板]]></wp:comment_author>
			<wp:comment_author_email>admin@nimen.de</wp:comment_author_email>
			<wp:comment_author_url>http://nimen.de</wp:comment_author_url>
			<wp:comment_author_IP>222.178.189.102</wp:comment_author_IP>
			<wp:comment_date>2009-11-20 21:10:46</wp:comment_date>
			<wp:comment_date_gmt>2009-11-20 13:10:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[帅。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[wordpress theme]]></wp:comment_author>
			<wp:comment_author_email>carspakin@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://notebeta.com</wp:comment_author_url>
			<wp:comment_author_IP>221.182.46.45</wp:comment_author_IP>
			<wp:comment_date>2009-11-25 15:30:13</wp:comment_date>
			<wp:comment_date_gmt>2009-11-25 07:30:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好东东]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>83</wp:comment_id>
			<wp:comment_author><![CDATA[老猫]]></wp:comment_author>
			<wp:comment_author_email>whlfeng@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://laomao.info</wp:comment_author_url>
			<wp:comment_author_IP>118.132.39.171</wp:comment_author_IP>
			<wp:comment_date>2009-12-09 09:36:56</wp:comment_date>
			<wp:comment_date_gmt>2009-12-09 01:36:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好帅，好屌哦！HOHO]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[yo]]></wp:comment_author>
			<wp:comment_author_email>notexit@null.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.77.50.248</wp:comment_author_IP>
			<wp:comment_date>2010-01-11 20:34:55</wp:comment_date>
			<wp:comment_date_gmt>2010-01-11 12:34:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你的博客活到现在了...
快被封杀了吧 哈哈 ....
杯具]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>85</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2010-01-12 11:06:56</wp:comment_date>
			<wp:comment_date_gmt>2010-01-12 03:06:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[暂时还没有被封杀！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>84</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Basic Particle Demo_2</title>
		<link>http://blog.as3er.com/?p=129</link>
		<pubDate>Fri, 06 Nov 2009 07:02:28 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[将粒子进行到底,demo2

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="500" height="420" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/uploads/Demo02.swf" /><embed type="application/x-shockwave-flash" width="500" height="420" src="http://www.as3er.com/uploads/Demo02.swf"> </embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[粒子]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2009-11-06 15:02:28</wp:post_date>
		<wp:post_date_gmt>2009-11-06 07:02:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>basic-particle-demo_2</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e7%b2%92%e5%ad%90-2"><![CDATA[粒子 2]]></category>
		<category domain="category" nicename="%e7%b2%92%e5%ad%90%e7%b2%92%e5%ad%90"><![CDATA[粒子粒子]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.97.251</wp:comment_author_IP>
			<wp:comment_date>2009-11-06 17:51:38</wp:comment_date>
			<wp:comment_date_gmt>2009-11-06 09:51:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个好漂亮哦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Basic Particle Demo_3</title>
		<link>http://blog.as3er.com/?p=131</link>
		<pubDate>Tue, 10 Nov 2009 16:02:01 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=131</guid>
		<description></description>
		<content:encoded><![CDATA[继续粒子 这次的Demo稍微不同些！大家看效果先！

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="550" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/uploads/doit.swf" /><embed type="application/x-shockwave-flash" width="550" height="400" src="http://www.as3er.com/uploads/doit.swf"></embed></object>

代码部分:

Particle

[actionscript3]&lt;/pre&gt;
package com
{
/**
* blog:http://www.life-stone.cn
* @author jason
*/
public class Particle
{
public var vx:Number;
public var vy:Number;
public var x:Number;
public var y:Number;
public var mass:Number=0;
public function Particle(__x:Number = 0, __y:Number = 0, __vx:Number = 0, __vy:Number = 0 )
{
x = __x;
y = __y;
vx = __vx;
vy = __vy;
}
public function update():void
{
x += vx;
y += vy;
}
}

}

[/actionscript3]

DoParticle 类

[actionscript3]&lt;/pre&gt;
&lt;/pre&gt;
package com{
import flash.display.Bitmap;
import flash.display.BitmapData;
import flash.display.Sprite;
import flash.events.Event;
import flash.events.MouseEvent;
import flash.display.Stage;
import flash.display.MovieClip;
import flash.geom.Rectangle;
/**
* http://www.life-stone.cn/uploads/doit.swf
* @author jason
*/
public class DoParticle extends Sprite {
private var img_bmp:Bitmap;
private var img_bmd:BitmapData;
private var particles_Array:Array = [];
private var __dmp:BitmapData;
private var rect:Rectangle;
public function DoParticle() {
if (this.stage) {
btn.addEventListener(MouseEvent.CLICK, onClick);
}
}
private function init(e:Event = null):void {
img_bmd = new BitmapData(img_mc.width, img_mc.height);
img_bmd.draw(img_mc);
__dmp = new BitmapData(200, 350, false, 0x000000);
rect = new Rectangle(0,0,__dmp.width,__dmp.height);
//__dmp.draw(img_bmd);
img_bmp = new Bitmap(__dmp);
img_bmp.x = 0;
img_bmp.y = 0;
addChild(img_bmp);
for (var i = 0; i &lt; img_mc.width; i++) {
for (var j = 0; j &lt; img_mc.height; j++) {
var __a:Number = Math.random() * img_mc.width;
var __b:Number = Math.random() * img_mc.height;
__dmp.setPixel32(__a, __b, img_bmd.getPixel32(__a, __b));
particles_Array.push( { x:__a, y:__b, c:img_bmd.getPixel32(__a, __b) } );

}
}

addEventListener(Event.ENTER_FRAME , onEnter);
}
private function onEnter(e:Event=null) {
__dmp.lock();
__dmp.fillRect(rect,0);
for (var n in particles_Array) {
var __circle:Particle = new Particle(particles_Array[n].x,particles_Array[n].y);
var __thetas:Number=Math.atan2(__circle.y - mouseY, __circle.x - mouseX);
var __vd:Number=1000 / Math.sqrt(Math.pow(mouseX - __circle.x, 2) + Math.pow(mouseY - __circle.y, 2));

__circle.x+=__vd * Math.cos(__thetas) + (particles_Array[n].x - __circle.x) * .1;
__circle.y+=__vd * Math.sin(__thetas) + (particles_Array[n].y - __circle.y) * .1;
//particles_Array[n] = { x:circle.x, y:circle.y, c:particles_Array[n].c };
__dmp.setPixel32(__circle.x , __circle.y, particles_Array[n].c);
}
__dmp.unlock();
//img_bmp.buttonMode = true;
}
private function onClick(e:MouseEvent):void {
init();
//removeEventListener(Event.ENTER_FRAME, onEnter);

}
}

}

[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[粒子粒子]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2009-11-11 00:02:01</wp:post_date>
		<wp:post_date_gmt>2009-11-10 16:02:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>basic-particle-demo_3</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="category" nicename="%e7%b2%92%e5%ad%90%e7%b2%92%e5%ad%90"><![CDATA[粒子粒子]]></category>
		<category domain="post_tag" nicename="%e7%b2%92%e5%ad%90%e7%b2%92%e5%ad%90"><![CDATA[粒子粒子]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.108.82</wp:comment_author_IP>
			<wp:comment_date>2009-11-23 10:12:14</wp:comment_date>
			<wp:comment_date_gmt>2009-11-23 02:12:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这玩意真恶心]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-11-23 10:19:00</wp:comment_date>
			<wp:comment_date_gmt>2009-11-23 02:19:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-275" rel="nofollow">@junjun</a>,J, 为啥？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>FlashDevelop 中使用 fl包组件</title>
		<link>http://blog.as3er.com/?p=139</link>
		<pubDate>Thu, 12 Nov 2009 05:39:38 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=139</guid>
		<description></description>
		<content:encoded><![CDATA[纯代码开发时，摆脱了CS，但是有些组件还是想继续使用。提供一个老外封装好的swc包，导入的FD中就可以直接使用fl组件了！

<a href="http://code.google.com/p/asform/downloads/list" target="_blank">下载地址</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[FlashDevelop中使用fl组件]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2009-11-12 13:39:38</wp:post_date>
		<wp:post_date_gmt>2009-11-12 05:39:38</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flashdevelop-%e4%b8%ad%e4%bd%bf%e7%94%a8-fl%e5%8c%85%e7%bb%84%e4%bb%b6</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="fd-%e7%bb%84%e4%bb%b6"><![CDATA[FD 组件]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Basic Particle Demo_4 之 其利断金</title>
		<link>http://blog.as3er.com/?p=141</link>
		<pubDate>Sun, 22 Nov 2009 12:20:22 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[终于还是有进展，在与seah的共同努力下完成了预期的目标。这个demo是上一个效果，刚完成的demo_5暂时未能放出。这个demo的力场确实差强人意，有哪位大侠可否指点小弟们一二，再此深表谢意。废话少说，上真相！

<a href="http://www.as3er.com/uploads/particle_test4.swf"><img class="alignnone" title="预览" src="http://www.as3er.com/uploads/par.jpg" alt="" width="610" height="474" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[粒子粒子]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2009-11-22 20:20:22</wp:post_date>
		<wp:post_date_gmt>2009-11-22 12:20:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>basic-particle-demo_4-%e4%b9%8b-%e5%85%b6%e5%88%a9%e6%96%ad%e9%87%91</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="category" nicename="%e7%b2%92%e5%ad%90%e7%b2%92%e5%ad%90"><![CDATA[粒子粒子]]></category>
		<category domain="post_tag" nicename="%e7%b2%92%e5%ad%90%e7%bb%a7%e7%bb%ad%e7%b2%92%e5%ad%90"><![CDATA[粒子继续粒子]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>天地会开源项目组正式启动</title>
		<link>http://blog.as3er.com/?p=147</link>
		<pubDate>Sun, 29 Nov 2009 05:43:52 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[经过筹备项目组终于启动了，鼓掌！偶也光荣的申请加入了Game&amp;&amp;Module组，并光荣的被推荐为Game组 组长，但是偶自知才疏学浅并时间不是很充足，所以选择了副leader。这次是难得的锻炼机会，必须好好把握，认真努力。团队规模还是很大的，协调绝对是件复杂的事情。有时候能否成事的确需要一些傻气，希望大家共同努力，坚持，发展并强大偶们的项目！

三思方举步，百折不回头！]]></content:encoded>
		<excerpt:encoded><![CDATA[开源组]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2009-11-29 13:43:52</wp:post_date>
		<wp:post_date_gmt>2009-11-29 05:43:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a4%a9%e5%9c%b0%e4%bc%9a%e5%bc%80%e6%ba%90%e9%a1%b9%e7%9b%ae%e7%bb%84%e6%ad%a3%e5%bc%8f%e5%90%af%e5%8a%a8</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b7%a5%e4%bd%9c%e6%97%a5%e5%bf%97"><![CDATA[工作日志]]></category>
		<category domain="post_tag" nicename="%e5%bc%80%e6%ba%90%e7%bb%84"><![CDATA[开源组]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PV3D_demo_1 Material</title>
		<link>http://blog.as3er.com/?p=150</link>
		<pubDate>Mon, 30 Nov 2009 08:14:19 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[挫败感的周末，开始怀疑是否智商出了问题，或本身智商就如此！总之非常非常的挫败！昏睡！贴个demo吧先！当然不是因为这个demo感到挫败！需要源码的朋友可以单独Q我！懒的贴！

<a href="http://www.as3er.com/demo/CoverFlow/CoverFlow.html"><img class="alignnone" title="demo_1" src="http://www.as3er.com/demo/CoverFlow/CoverFlow.jpg" alt="" width="600" height="301" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[PV3D_Demo_1]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2009-11-30 16:14:19</wp:post_date>
		<wp:post_date_gmt>2009-11-30 08:14:19</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pv3d_demo_1-material</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="pv3d"><![CDATA[PV3D]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PV3D_demo_2 BitmapFileMaterial</title>
		<link>http://blog.as3er.com/?p=155</link>
		<pubDate>Tue, 01 Dec 2009 05:56:12 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=155</guid>
		<description></description>
		<content:encoded><![CDATA[这次用到了 BitmapFileMaterial 效果图如下<a href="http://www.as3er.com/demo/Viewer/Viewer.html"><img class="alignnone" title="pv3D_demo" src="http://www.as3er.com/demo/Viewer/demo.jpg" alt="" width="500" height="304" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[PV3D_demo]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2009-12-01 13:56:12</wp:post_date>
		<wp:post_date_gmt>2009-12-01 05:56:12</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pv3d_demo_2-bitmapfilematerial</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="pv3d"><![CDATA[PV3D]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>滑动鼠标看！</title>
		<link>http://blog.as3er.com/?p=161</link>
		<pubDate>Wed, 02 Dec 2009 02:51:28 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[在一位网友的Blog上看到了一个类似的效果，于是模仿了一个！

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="600" height="480" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/demo/MouseParticle/MouseParticle.swf" /><embed type="application/x-shockwave-flash" width="600" height="480" src="http://www.as3er.com/demo/MouseParticle/MouseParticle.swf"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[发光滤镜]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2009-12-02 10:51:28</wp:post_date>
		<wp:post_date_gmt>2009-12-02 02:51:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%bb%91%e5%8a%a8%e9%bc%a0%e6%a0%87%e7%9c%8b%ef%bc%81</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e6%bb%a4%e9%95%9c"><![CDATA[滤镜]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>89</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.104.119</wp:comment_author_IP>
			<wp:comment_date>2009-12-02 14:04:44</wp:comment_date>
			<wp:comment_date_gmt>2009-12-02 06:04:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[漂亮哈]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>90</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://www.life-stone.cn</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2009-12-02 18:47:11</wp:comment_date>
			<wp:comment_date_gmt>2009-12-02 10:47:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-283" rel="nofollow">@junjun</a>, 呜呜....好久都没来给我踩了！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[feifei]]></wp:comment_author>
			<wp:comment_author_email>jiaopengfeihe@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.233.208.168</wp:comment_author_IP>
			<wp:comment_date>2010-01-05 11:37:11</wp:comment_date>
			<wp:comment_date_gmt>2010-01-05 03:37:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好玩啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>92</wp:comment_id>
			<wp:comment_author><![CDATA[liang]]></wp:comment_author>
			<wp:comment_author_email>liangwenjie19891103@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.26.251.126</wp:comment_author_IP>
			<wp:comment_date>2010-01-06 16:56:36</wp:comment_date>
			<wp:comment_date_gmt>2010-01-06 08:56:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以下载不]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>93</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>118.132.39.171</wp:comment_author_IP>
			<wp:comment_date>2010-01-06 17:37:31</wp:comment_date>
			<wp:comment_date_gmt>2010-01-06 09:37:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[缓存里找下！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>92</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Clock3D_Demo</title>
		<link>http://blog.as3er.com/?p=170</link>
		<pubDate>Mon, 14 Dec 2009 03:44:30 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[周末下了两天的雨，阴冷阴冷的。心情也是一如既往的不太好，无心做啥。懒懒的赖在电脑前，终于折腾出了这个demo。关于拆数字，人肉了点。有了好的方案再更新吧！
<img alt="" src="http://www.as3er.com/demo/Clock3D/clock.jpg" title="Clock3D" class="alignnone" width="601" height="326" />
<a rel="shadowbox[Mixed]; width=800;height=600" href="http://www.as3er.com/demo/Clock3D/ClockTest.swf">打开SWF</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[Clock3D]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2009-12-14 11:44:30</wp:post_date>
		<wp:post_date_gmt>2009-12-14 03:44:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>clock3d_demo</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="clock3d"><![CDATA[Clock3D]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>94</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.110.79</wp:comment_author_IP>
			<wp:comment_date>2009-12-14 13:52:09</wp:comment_date>
			<wp:comment_date_gmt>2009-12-14 05:52:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再加上左右摇摆就协调了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Text3D_Demo</title>
		<link>http://blog.as3er.com/?p=174</link>
		<pubDate>Tue, 15 Dec 2009 10:42:28 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=174</guid>
		<description></description>
		<content:encoded><![CDATA[CD的一天，说不定发完这篇文章，我的blog就直接被和谐了。算鸟，发帖上图先。
单击会把文字打散！看完效果看偶拙劣的代码，记得拍砖，最近很欠拍！
<img class="alignnone" title="Text3D_Demo" src="http://www.as3er.com/demo/Text3D/Text3D.jpg" alt="" />
<a rel="shadowbox[];width=550;height=400" href="http://www.as3er.com/demo/Text3D/Test_Five3D.swf">打开SWF</a>

源码：

[actionscript3]package	
import flash.display.Sprite
	import flash.display.MovieClip;
	import flash.events.Event;
	import flash.events.MouseEvent;
	import net.badimon.five3D.display.DynamicText3D;
	import net.badimon.five3D.display.Scene3D;
	import net.badimon.five3D.display.Sprite3D;
	import net.badimon.five3D.typography.HelveticaBold;
	import net.badimon.five3D.typography.Typography3D;
	import gs.*;
              /**
	 * 	
               * @author jason	
               */
	public class Main extends MovieClip{	
	private var scene:Scene3D;		
              private var container:Sprite3D;
	private var speed:int;	
	private var word_str:String = &quot;WHAT A FUCKING DAY?&quot;;	
	private var word_posX:Array;	
	private var postionX:Number;	
	private var word_Array:Array;	
	private var click_flag:Boolean;	
	public function Main()	
	{	
		init();	
	}	
	private function init():void {		
	word_posX = [];		
	word_Array=[];		
	postionX = 0;		
	speed = 1;		
	scene = new Scene3D();		
	addChild(scene);		
	container = new Sprite3D();		
	container.x = stage.stageWidth / 2;		
	container.y = stage.stageHeight / 2;		
	scene.addChild(container);//container.buttonMode = true;		
	stage.addEventListener(MouseEvent.CLICK , onClick);		
	var temp_width:Number = -(word_str.length * 20 / 2);		
	postionX = temp_width;		
	for (var i = 0; i &amp;lt; word_str.length;i++){		
	var word:DynamicText3D = new DynamicText3D(new HelveticaBold());	
		word.size = 18;			
word.text = word_str.substr(i,1);		
	word.color = 0xfffff		
	word.x = postionX;		
	word_posX[i] = postionX;		
	word_Array[i] = word;		
	postionX += 20;		
	trace(word.x);		
	container.addChild(word);		
	}		
//	trace(container.width);		
	stage.addEventListener(Event.ENTER_FRAME, onEnter);	
		}	
	private function onEnter(e:Event):void {		
	container.rotationY = (stage.mouseX - stage.stageWidth / 2) / 7;		
	container.rotationX = (stage.mouseY - stage.stageHeight / 2) / 7;		
	}	
	private function onClick(e:MouseEvent):void {		
	if (click_flag) {		
		for (var i in word_Array) {		
		TweenLite.to(word_Array[i],.6,{x:word_posX[i],y:0,z:0,rotationX:0});	
			
	}			
	click_flag = false;			
	}else {		
	for each(var p in word_Array) {		
		TweenLite.to(p,.6,{x:Math.random()*300-150,y:Math.random()*200-100,z:Math.random()*500-250,rotationX:Math.random()*150-75});		
			}			
		click_flag = true;			
	}				
	}
	}
}[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[Five3D
Text3D]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2009-12-15 18:42:28</wp:post_date>
		<wp:post_date_gmt>2009-12-15 10:42:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>text3d_demo</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="text3d"><![CDATA[Text3D]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pendant_Demo</title>
		<link>http://blog.as3er.com/?p=176</link>
		<pubDate>Mon, 04 Jan 2010 06:05:30 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=176</guid>
		<description></description>
		<content:encoded><![CDATA[人生若只如初见，何事秋风悲画扇！杯具始终还是杯具...曾经以为不会变的事情，最终还是会变。平淡点，其实挺好挺浪漫。
<img alt="" src="../../demo/Pendant/demo.jpg" title="Pendant_demo" class="alignnone" width="590" height="373" />
<a  width=600;height=400" href="../../demo/Pendant/PendantDemo.swf">打开SWF</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[Pendant_demo]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2010-01-04 14:05:30</wp:post_date>
		<wp:post_date_gmt>2010-01-04 06:05:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pendant_demo</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="pendant_demo"><![CDATA[Pendant_demo]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>95</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.97.52</wp:comment_author_IP>
			<wp:comment_date>2010-01-04 16:54:26</wp:comment_date>
			<wp:comment_date_gmt>2010-01-04 08:54:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[小弟好浪漫啊～～这张你好小啊嘿嘿]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2010-01-04 16:56:21</wp:comment_date>
			<wp:comment_date_gmt>2010-01-04 08:56:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这两张都是大二时候的照片~~~嘿嘿~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>95</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>97</wp:comment_id>
			<wp:comment_author><![CDATA[feifei]]></wp:comment_author>
			<wp:comment_author_email>jiaopengfeihe@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.233.208.168</wp:comment_author_IP>
			<wp:comment_date>2010-01-05 09:58:57</wp:comment_date>
			<wp:comment_date_gmt>2010-01-05 01:58:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[挺浪漫的嘛]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>98</wp:comment_id>
			<wp:comment_author><![CDATA[Kevin Luo]]></wp:comment_author>
			<wp:comment_author_email>kevin.luo.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.flextheworld.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.106.127</wp:comment_author_IP>
			<wp:comment_date>2010-01-14 10:25:03</wp:comment_date>
			<wp:comment_date_gmt>2010-01-14 02:25:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很棒阿]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2010-01-14 10:26:41</wp:comment_date>
			<wp:comment_date_gmt>2010-01-14 02:26:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈~~~JJ姐，kevin童鞋过来踩啦~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>98</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[HBK]]></wp:comment_author>
			<wp:comment_author_email>298437993@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://heartbreakid8.com</wp:comment_author_url>
			<wp:comment_author_IP>112.65.172.22</wp:comment_author_IP>
			<wp:comment_date>2010-03-02 15:02:20</wp:comment_date>
			<wp:comment_date_gmt>2010-03-02 07:02:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[怎么不写文了啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.65.172.22</wp:comment_author_IP>
			<wp:comment_date>2010-03-02 15:04:00</wp:comment_date>
			<wp:comment_date_gmt>2010-03-02 07:04:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不知道写啥...一直瞎折腾...没demo就懒得写～～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>100</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[赢在网络]]></wp:comment_author>
			<wp:comment_author_email>admin@8dianpu.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.8dianpu.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>221.226.46.130</wp:comment_author_IP>
			<wp:comment_date>2010-03-24 12:12:04</wp:comment_date>
			<wp:comment_date_gmt>2010-03-24 04:12:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是挂件吗?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.65.172.22</wp:comment_author_IP>
			<wp:comment_date>2010-03-24 13:13:00</wp:comment_date>
			<wp:comment_date_gmt>2010-03-24 05:13:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不是插件，是一个小flash程序哈～～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>102</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[tom]]></wp:comment_author>
			<wp:comment_author_email>tom.he@trio-design.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.o-xx.com</wp:comment_author_url>
			<wp:comment_author_IP>218.82.162.77</wp:comment_author_IP>
			<wp:comment_date>2010-03-27 12:05:41</wp:comment_date>
			<wp:comment_date_gmt>2010-03-27 04:05:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[能不能整个背景色，黑乎乎的，看着怪慎人的！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.65.172.22</wp:comment_author_IP>
			<wp:comment_date>2010-03-29 09:22:54</wp:comment_date>
			<wp:comment_date_gmt>2010-03-29 01:22:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[冷静～～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>104</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[Andy]]></wp:comment_author>
			<wp:comment_author_email>andy.jcg@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.andyji.com/</wp:comment_author_url>
			<wp:comment_author_IP>112.65.172.22</wp:comment_author_IP>
			<wp:comment_date>2010-04-13 13:34:42</wp:comment_date>
			<wp:comment_date_gmt>2010-04-13 05:34:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[admin同学 怎么不更新了啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.65.172.22</wp:comment_author_IP>
			<wp:comment_date>2010-04-13 13:45:18</wp:comment_date>
			<wp:comment_date_gmt>2010-04-13 05:45:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这位童鞋，表要公开我的用户名嘛～～～看来有必要发篇水文鸟～～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>106</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>互换变量值</title>
		<link>http://blog.as3er.com/?p=180</link>
		<pubDate>Fri, 08 Jan 2010 10:40:03 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=180</guid>
		<description></description>
		<content:encoded><![CDATA[题目： 整型变量 a ，b 在不声明第三个变量的情况下，互换a，b的值

解法一：[actionscript3]
var a:int = 15;
var b:int = 9;
a = a+b;
b = a-b;
a = a-b;
//互换完成 a = 9 ；b = 15
[/actionscript3]
解法二：[actionscript3]
var a:int = 15;
var b:int = 9;
//解释下过程
a = a^b;//1111 ^ 0110 = 0110
b = a^b;//0110^0110 = 1111 b=15
a = a^b;// 0110^1111=0110  a = 9
// a = 9 b=15
[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[交换值]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2010-01-08 18:40:03</wp:post_date>
		<wp:post_date_gmt>2010-01-08 10:40:03</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%ba%92%e6%8d%a2%e5%8f%98%e9%87%8f%e5%80%bc</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95%e5%ad%a6%e4%b9%a0"><![CDATA[算法学习]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>谢谢！</title>
		<link>http://blog.as3er.com/?p=185</link>
		<pubDate>Fri, 22 Jan 2010 13:54:54 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=185</guid>
		<description></description>
		<content:encoded><![CDATA[最终还是被不舍和失落占据，从毕业到现在，在公司的点点滴滴此时都觉得很珍贵。谢谢公司的培养与照顾。谢谢大家，谢谢大家的帮助。
最后祝大家新年快乐，身体健康，工作顺利！]]></content:encoded>
		<excerpt:encoded><![CDATA[谢谢]]></excerpt:encoded>
		<wp:post_id>185</wp:post_id>
		<wp:post_date>2010-01-22 13:54:54</wp:post_date>
		<wp:post_date_gmt>2010-01-22 13:54:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%b0%a2%e8%b0%a2%ef%bc%81</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<category domain="post_tag" nicename="%e8%b0%a2%e8%b0%a2"><![CDATA[谢谢]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>第一代互联网拓荒者再掀连环创业潮（转载）</title>
		<link>http://blog.as3er.com/?p=187</link>
		<pubDate>Wed, 10 Feb 2010 02:06:30 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[　马可佳

　　临近2010年的春节，盛大游戏有限公司(GAME·Nasdaq)首席执行官和董事李瑜公开宣布辞去公司职务，称将和自己的先生一起创办互联网领域的蓝海企业。

　　在刚过去的一年里，互联网高管辞职再创业现象似乎形成了一股风潮，谷歌中国总裁李开复放弃价值不菲的股票，选择创建“创新工厂”，空中网总裁杨宁辞去了总裁和首席技术官职务，去创办他十年前曾放弃过的“唔箜搜索”。

　　互联网的“造富运动”仍在继续。中国互联网络信息中心(CNNIC)2010年1月15日发布的报告称，2009年中国互联网用户数量同比增长28.9%，达到3.84亿。

　　而细数互联网行业的“风流人物”，第一代互联网公司拓荒者已经不知不觉又开辟了半壁江山。搜狐昔日的高管张云帆创立空中网、陈一舟创立千橡、张黎刚创立爱康、吴海宁创立职脉招聘；网易昔日主力关国光创立快钱，梁钧创立我乐网；雅虎中国副总裁齐向东创立奇虎；卓越执行总裁陈年创立凡客诚品……

　　而那些曾在第一代互联网公司里打拼多年互联网拓荒者们，利用其敏锐的触角、丰富的经验和深厚的人脉及资本，已成为中国新一波创业潮的主力军。

　　叛逃者的“美丽新世界”

　　在距离北京著名的餐饮一条街“簋街”不远处，有一条外馆斜街夹在几条主干道之间。一个刚刚新兴的网站——舍得网就隐于其中。它的创始人马健此前正是百合网副总裁。

　　18年前，马健以全校第一名的成绩考入北师大。毕业后的他从程序员做起，勤勤恳恳。几年时间里，从程序员到泰戈电子总经理、中国普天信息产业集团公司中研院副总裁、万向通讯CTO，以及百合网副总裁。曾经和同事们一起，用一年半时间就把百合网用户数从0做到800万人。

　　很难想象众人眼里，这个沉稳的优等生，竟然在某一天，成为“叛逃者”，带领另外4个伙伴卖了闲置的房子，抵押了在住的房子，加上其他几个人的积蓄，破釜沉舟“自立门户”。

　　正应了舍得网的名称，马健创业的过程就是这样有舍有得。舍得网2008年正式上线，短短一年半时间，该网站已经成功吸引了两轮风投——空中网董事会主席兼CEO王雷雷的第一轮400万投资和第二轮SIG的3000万投资。

　　但创始人马健对此现状并不满意，他和他的创业伙伴曾经有过为公司创造过上千万元的月收入的纪录，而舍得网的盈利模式刚初见成效。“我们的目标是中国最大的C2C网站——淘宝网。”马健说。

　　“我的目标是做中国最大的旧物交换网。”马健告诉《第一财经日报》记者，“现在已经到了过剩经济的时代，很多人有能力有愿望购买新东西，为什么不买呢？就是因为家里的旧物堆积太多。人们的生活要向前推进，就要处理旧物。这就是我们的市场。”

　　与马健相似，开心网的创始人程炳浩也是一个令人“惊艳”的叛逃者，今年37岁的程炳浩，身材瘦弱，没喝过洋墨水，没有高学历，仅有中专文凭的他靠自己的努力进入新浪网，并成为新浪50人核心创业团队成员之一。2007年7月新浪CTO李嵩波离职后担任新浪代理CTO一职。

　　据相关人士曾经透露，程炳浩离职的原因与新浪爱问有莫大关系。程炳浩原本是新浪搜索引擎的研发者。当自己呕心沥血用了三年打造出来的产品新浪搜索引擎爱问，运营了仅仅不到半年时间就被公司终止的时候，程炳浩当时的郁闷程度也许只有他自己才知道。于是程炳浩辞去了新浪高管的工作，带着自己仅有的300万元毅然投入到创业大潮之中。

　　2009年，程炳浩团队创建了开心网这个席卷白领圈的社交网站，让投资人更加看到SNS社交网站游戏化的“钱景”。2009年11月，启明创投领投、北极光和新浪跟投的开心网第二轮融资敲定，金额达2000万美元。

　　发现自我价值，成为了连环创业者们寻找“美丽新世界”的最大动力。

　　播种者的“成功接力”

　　时势造英雄。中国第一批在新经济模式下长大的互联网公司，不仅“毕业”出一大批创业英才，还创造出新一批互联网风险投资家。

　　十年以前，互联网创业的主力军丁磊、马云、邵亦波、杨镭、鲍岳桥、雷军这些身无长物，只有热情、胆略和执著的年轻人，十年之后，以一种“播种者”的热情，成为创业主力军的资金支持者。相比于十年之前的第一代创业，他们更具备资本、人脉和经验。

　　邵亦波是国内最大的拍卖网——易趣网的创始人，曾因10多次获得过全国数学竞赛一等奖、跳级进入哈佛大学并获全额奖学金而被称为“神童”。获得哈佛MBA学位后，邵亦波回国建立了易趣网。2003年底他将易趣以2.2亿美金出售给eBay后，蛰居美国三年。

　　如今的邵亦波，是经纬创投VC的中国创始人，邵亦波投资的项目包括，宝宝树、诺凡麦、安居客等等，他表示，“我现在的工作是‘种树’”。曾经的创业经验让他比其他投资人更加理解创业者的孤独和艰辛。“我最看重的是创业团队，找到一个好的创业团队，然后做创业者的教练和陪练。”

　　泰山天使投资的创始人杨镭也是这样一个不折不扣的连环创业家。成立泰山天使创业基金之前，杨镭人生中的4次创业经历已被媒体演绎成各种文本，从北京中关村到美国硅谷再到上海，杨镭在不同地域不断实践着自己的创业梦想。

　　享受不断把梦想变成现实的过程，连环创业者们在创业路上 “成功接力”。

 来自: 新浪科技 http://news.cnblogs.com/n/56796/#]]></content:encoded>
		<excerpt:encoded><![CDATA[创业]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date>2010-02-10 10:06:30</wp:post_date>
		<wp:post_date_gmt>2010-02-10 02:06:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e7%ac%ac%e4%b8%80%e4%bb%a3%e4%ba%92%e8%81%94%e7%bd%91%e6%8b%93%e8%8d%92%e8%80%85%e5%86%8d%e6%8e%80%e8%bf%9e%e7%8e%af%e5%88%9b%e4%b8%9a%e6%bd%ae%ef%bc%88%e8%bd%ac%e8%bd%bd%ef%bc%89</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="%e5%88%9b%e4%b8%9a"><![CDATA[创业]]></category>
		<category domain="category" nicename="%e8%bd%ac%e8%bd%bd%e5%8c%ba"><![CDATA[转载区]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS3_深度复制</title>
		<link>http://blog.as3er.com/?p=190</link>
		<pubDate>Mon, 15 Mar 2010 09:22:54 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=190</guid>
		<description></description>
		<content:encoded><![CDATA[利用ByteArray来完成深度复制，没测试是否所有类型都可以。
[actionscript3]
var testObject:Object = {name:test}
var saveByteArray:ByteArray = new ByteArray;
saveByteArray.writeObject(testObject);
//完成copy
//读取 Object
saveByteArray.position = 0;
var saveObject:Object = saveByteArray.readObject();
[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[Copy]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2010-03-15 17:22:54</wp:post_date>
		<wp:post_date_gmt>2010-03-15 09:22:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>as3_%e6%b7%b1%e5%ba%a6%e5%a4%8d%e5%88%b6</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flash 7 Trim 方法(转载)</title>
		<link>http://blog.as3er.com/?p=197</link>
		<pubDate>Wed, 21 Apr 2010 07:50:52 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=197</guid>
		<description></description>
		<content:encoded><![CDATA[原文：<a href="http://ntt.cc/2010/04/07/7-trim-function-in-flash-actionscript.html">7 Trim</a>
也曾为Trim纠结过。很久没浏览订阅了，今儿看到了。贴上。
1.[actionscript3]function trim(str:String):String {
        var char:String;
        while ((char = str.charAt(0)) == chr(Key.SPACE) || char == chr(Key.TAB))
            str = str.substr(1);
        while ((char = str.charAt(str.length – 1)) == chr(Key.SPACE) || char == chr(Key.TAB))
            str = str.substr(0, str.length – 1);
        return str;
    }[/actionscript3]
2.[actionscript3]function LTrim(s:String):String {
var i=0;
while ((i&lt;s.length) &amp;&amp; (s.substr(i,1)==’ ‘)) i++;
return (s.substr(i,s.length-i));
}

function RTrim(s:String):String {
var i=s.length -1;

while ((i&gt;0) &amp;&amp; (s.substr(i,1)==’ ‘)) i–;

return (s.substr(0,i+1));
}

function Trim(s:String) {
return(LTrim(RTrim(s)));
}[/actionscript3]
3.[actionscript3]// parameters:
// matter, string to be trimmed
// returns:
// string, whitespaces removed from left side.
function ltrim(matter) {
    if ((matter.length&gt;1) || (matter.length == 1 &amp;&amp; matter.charCodeAt(0)&gt;32 &amp;&amp; matter.charCodeAt(0)&lt;255)) {
        i = 0;

        while (i&lt;matter.length &amp;&amp; (matter.charCodeAt(i)&lt;=32 || matter.charCodeAt(i)&gt;=255)) {
            i++;
        }

        matter = matter.substring(i);
    } else {
        matter = &quot;&quot;;
    }
    return matter;
}

// parameters:
// matter, string to be trimmed
// returns:
// string, whitespaces removed from right side.
function rtrim(matter) {
    if ((matter.length&gt;1) || (matter.length == 1 &amp;&amp; matter.charCodeAt(0)&gt;32 &amp;&amp; matter.charCodeAt(0)&lt;255)) {
        i = matter.length-1;

       while (i&gt;=0 &amp;&amp; (matter.charCodeAt(i)&lt;=32 || matter.charCodeAt(i)&gt;=255)) {
            i–;
        }
        matter = matter.substring(0, i+1);
    } else {
        matter = &quot;&quot;;
    }

    return matter;
}

// parameters:
// matter, string to be trimmed
// returns:
// string, whitespaces removed from both sides.

function trim(matter) {
    return ltrim(rtrim(matter));
}[/actionscript3]
4.[actionscript3]function trim(string) {
if (string.indexOf(&quot; &quot;) != -1) {
whiteIndex = string.indexOf(&quot; &quot;);
fst = string.slice(0, whiteIndex);
snd = string.slice(whiteIndex+1, string.length);
trim((fst+snd));
} else {
_root.noSpaces = string;
}
}[/actionscript3]
5.[actionscript3]function trim(str:String) :String {
if(str==&quot;&quot;) return &quot;&quot;;
var newStr:String;
var len:Number = str.length;
var s:Number = 0;
for(var i=0; i&lt;len ; ++i) {
if(str.substr(i,1)==&quot; &quot;) s++;
else break;
}
newStr = str.slice(s);
s = 0;
for(var i=(len-1); i&gt;-1; –i) {
if(str.substr(i,1)==&quot; &quot;) s–;
else break;
}
s = s==0? len : s;
newStr = newStr.slice(0,s);
return newStr;
}[/actionscript3]
6.[actionscript3]function trim(str:String, char:String):String {
    return trimBack(trimFront(str, char), char);
}

public function trimFront(str:String, char:String):String {
    char = stringToCharacter(char);
    if (str.charAt(0) == char) {
        str = trimFront(str.substring(1), char);
    }
    return str;
}

public function trimBack(str:String, char:String):String {
    char = stringToCharacter(char);
    if (str.charAt(str.length - 1) == char) {
        str = trimBack(str.substring(0, str.length - 1), char);
    }
    return str;
}[/actionscript3]
7.[actionscript3]function trim( s:String ):String
{
  return s.replace( /^([s|t|n]+)?(.*)([s|t|n]+)?$/gm, &quot;$2&quot; );
}[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[7 Trim]]></excerpt:encoded>
		<wp:post_id>197</wp:post_id>
		<wp:post_date>2010-04-21 15:50:52</wp:post_date>
		<wp:post_date_gmt>2010-04-21 07:50:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flash-7-trim-%e6%96%b9%e6%b3%95%e8%bd%ac%e8%bd%bd</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="7-trim"><![CDATA[7 Trim]]></category>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>108</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.109.247</wp:comment_author_IP>
			<wp:comment_date>2010-04-21 17:00:53</wp:comment_date>
			<wp:comment_date_gmt>2010-04-21 09:00:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你大爆发么，一下更新那么多]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>109</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.65.172.22</wp:comment_author_IP>
			<wp:comment_date>2010-04-21 17:03:17</wp:comment_date>
			<wp:comment_date_gmt>2010-04-21 09:03:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再等下，还有一篇.....哥几个老是问为啥不更新blog了...哈哈....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>108</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[心碎小子]]></wp:comment_author>
			<wp:comment_author_email>298437993@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.heartbreakid8.com/</wp:comment_author_url>
			<wp:comment_author_IP>58.33.191.251</wp:comment_author_IP>
			<wp:comment_date>2010-04-23 08:21:56</wp:comment_date>
			<wp:comment_date_gmt>2010-04-23 00:21:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这是干嘛用的？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Android 初体验</title>
		<link>http://blog.as3er.com/?p=201</link>
		<pubDate>Wed, 21 Apr 2010 10:34:10 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=201</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在经过了无数次的纠结后，终于如愿以偿拿到了Hero。口号喊了很久要开发Android应用，但只是口号。终于今儿觉悟了，空喊是没意思的。所以有了今儿的初体验。很囧的是调试的时候想打印数据，然后就很潇洒的trace("OOXXOOX")结果报错鸟.....冥思后才悟到，天份极高啊！不废话了，上图。<br />先看我真机截图：<br /><a href="http://www.as3er.com/uploads/2010-04-21-16-21-08.jpg"><img class="alignnone size-full wp-image-202" title="2010-04-21-16-21-08" src="http://www.as3er.com/uploads/2010-04-21-16-21-08.jpg" alt="待机图" /></a><br />再看程序图标：<br /><a href="http://www.as3er.com/uploads/2010-04-21-16-21-21.jpg"><img class="alignnone size-full wp-image-205" title="2010-04-21-16-21-21" src="http://www.as3er.com/uploads/2010-04-21-16-21-21.jpg" alt="第一排 最后一个 就是了" /></a><br />接下来就是监听操作，显示信息。Click后——&gt; You have a dream .......OOXXOOX之类的略过。等下几篇总结下代码再<br /><a href="http://www.as3er.com/uploads/2010-04-21-18-14-34.png"><img class="alignnone size-full wp-image-207" title="2010-04-21-18-14-34" src="http://www.as3er.com/uploads/2010-04-21-18-14-34.png" alt="运行界面" /></a><br /><a href="http://www.as3er.com/uploads/2010-04-21-18-14-48.png"><img class="alignnone size-full wp-image-208" title="2010-04-21-18-14-48" src="http://www.as3er.com/uploads/2010-04-21-18-14-48.png" alt="单击 按钮" /></a><br /><a href="http://www.as3er.com/uploads/2010-04-21-18-15-10.png"><img class="alignnone size-full wp-image-209" title="2010-04-21-18-15-10" src="http://www.as3er.com/uploads/2010-04-21-18-15-10.png" alt="上键单击" /></a><br />其它监听略过了吧.....</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[在经过了无数次的纠结后，终于如愿以偿拿到了Hero。]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2010-04-21 18:34:10</wp:post_date>
		<wp:post_date_gmt>2010-04-21 10:34:10</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>android-%e5%88%9d%e4%bd%93%e9%aa%8c</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android-%e5%88%9d%e4%bd%93%e9%aa%8c"><![CDATA[Android 初体验]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[场子]]></wp:comment_author>
			<wp:comment_author_email>wangjiedm@126.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.changzi.org/blog</wp:comment_author_url>
			<wp:comment_author_IP>111.193.4.195</wp:comment_author_IP>
			<wp:comment_date>2010-04-21 22:46:27</wp:comment_date>
			<wp:comment_date_gmt>2010-04-21 14:46:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[酷酷的……feeling]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>112</wp:comment_id>
			<wp:comment_author><![CDATA[junjun]]></wp:comment_author>
			<wp:comment_author_email>meg.wu.sl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wjunjun.com</wp:comment_author_url>
			<wp:comment_author_IP>222.212.102.102</wp:comment_author_IP>
			<wp:comment_date>2010-04-22 09:40:29</wp:comment_date>
			<wp:comment_date_gmt>2010-04-22 01:40:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看上去不错哦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>jasonluck@live.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>174.129.167.193</wp:comment_author_IP>
			<wp:comment_date>2010-04-22 17:09:19</wp:comment_date>
			<wp:comment_date_gmt>2010-04-22 09:09:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[写游戏啊写游戏～～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>112</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[Andy]]></wp:comment_author>
			<wp:comment_author_email>andy.jcg@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.andyji.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.70.161.28</wp:comment_author_IP>
			<wp:comment_date>2010-04-23 23:47:07</wp:comment_date>
			<wp:comment_date_gmt>2010-04-23 15:47:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[速度啊 等你写好游戏我去买手机了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>115</wp:comment_id>
			<wp:comment_author><![CDATA[tom]]></wp:comment_author>
			<wp:comment_author_email>tom.he@trio-design.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.o-xx.com</wp:comment_author_url>
			<wp:comment_author_IP>116.228.138.162</wp:comment_author_IP>
			<wp:comment_date>2010-04-29 13:01:32</wp:comment_date>
			<wp:comment_date_gmt>2010-04-29 05:01:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好多米的说]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>【宣传】 FLASH开发者交流会</title>
		<link>http://blog.as3er.com/?p=218</link>
		<pubDate>Thu, 13 May 2010 10:24:15 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=218</guid>
		<description></description>
		<content:encoded><![CDATA[5月30日 第3次 FLASH开发者交流会火热报名中！
经过紧张的筹办，第三次FLASH开发者交流会活动开始报名咯！请大家访问：www.swfsh.com
在这次的活动中，我们邀请到AsWing开源UI框架的作者iiley同学跟大家介绍他在FLASH独立游戏开发方面的经验和感受。
同时我们请来积木网的主程谢敏同学，谢敏采用FLEX框架一手开发了积木网网上电脑，谢敏将为我们带来FLEX框架的完整的开发经验谈（超多干货！！）。
在1月活动中，向大家介绍FLASH播放器性能优化经验的主持人谈熠同学将在这次的活动中给我们介绍如何在FLASH中运用元编程方法来提高代码效率和优化开发过程。
“开心宠物”和“升职记”的主程唐翎同学将告诉大家一种全新的FLASH程序的UI设计方式，使你的程序能够超灵活地支持皮肤设定
……
还有很多新鲜有益的主题，我们将不断地更新在网站上，请关注：<a href="http://www.swfsh.com">www.swfsh.com</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[swf开发者交流会]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2010-05-13 18:24:15</wp:post_date>
		<wp:post_date_gmt>2010-05-13 10:24:15</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e3%80%90%e5%ae%a3%e4%bc%a0%e3%80%91-flash%e5%bc%80%e5%8f%91%e8%80%85%e4%ba%a4%e6%b5%81%e4%bc%9a</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="swf%e4%ba%a4%e6%b5%81%e4%bc%9a"><![CDATA[swf交流会]]></category>
		<category domain="category" nicename="%e5%b7%a5%e4%bd%9c%e6%97%a5%e5%bf%97"><![CDATA[工作日志]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>116</wp:comment_id>
			<wp:comment_author><![CDATA[小小虫]]></wp:comment_author>
			<wp:comment_author_email>298437993@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://heartbreakid8.com</wp:comment_author_url>
			<wp:comment_author_IP>112.65.172.22</wp:comment_author_IP>
			<wp:comment_date>2010-05-21 10:51:40</wp:comment_date>
			<wp:comment_date_gmt>2010-05-21 02:51:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似这天要去旅游]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>VerifyError: Error #1014: Class IIMEClient could not be found.</title>
		<link>http://blog.as3er.com/?p=245</link>
		<pubDate>Fri, 03 Sep 2010 12:00:18 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=245</guid>
		<description></description>
		<content:encoded><![CDATA[升级air 2.0后 原来的项目报错 VerifyError: Error #1014: Class IIMEClient could not be found. 将*app.xml 中的命名空间修改成对应的SDK版本 如：<span style="color: #ff0000;">&lt;application xmlns="</span><a href="http://ns.adobe.com/air/application/2.0"><span style="color: #ff0000;">http://ns.adobe.com/air/application/2.0</span></a><span style="color: #ff0000;">"&gt;</span>
问题解决了]]></content:encoded>
		<excerpt:encoded><![CDATA[VerifyError: Error #1014: Class IIMEClient could not be found.]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2010-09-03 20:00:18</wp:post_date>
		<wp:post_date_gmt>2010-09-03 12:00:18</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>verifyerror-error-1014-class-iimeclient-could-not-be-found</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="air"><![CDATA[AIR]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS3 项目代码统计工具</title>
		<link>http://blog.as3er.com/?p=247</link>
		<pubDate>Fri, 03 Sep 2010 13:32:47 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=247</guid>
		<description></description>
		<content:encoded><![CDATA[瞎折腾....

<a href="http://www.as3er.com/blog/wp-content/uploads/2010/09/codeStatistics.jpg"><img class="alignnone size-thumbnail wp-image-248" title="codeStatistics" src="http://www.as3er.com/blog/wp-content/uploads/2010/09/codeStatistics-150x150.jpg" alt="" width="150" height="150" /></a>

下载 : <span style="color: #ff0000;">http://www.as3er.com/demo/codeStatistics.air</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[代码统计]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2010-09-03 21:32:47</wp:post_date>
		<wp:post_date_gmt>2010-09-03 13:32:47</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>as3-%e9%a1%b9%e7%9b%ae%e4%bb%a3%e7%a0%81%e7%bb%9f%e8%ae%a1%e5%b7%a5%e5%85%b7</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="%e4%bb%a3%e7%a0%81%e7%bb%9f%e8%ae%a1"><![CDATA[代码统计]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Back</title>
		<link>http://blog.as3er.com/?p=252</link>
		<pubDate>Mon, 06 Sep 2010 10:11:39 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=252</guid>
		<description></description>
		<content:encoded><![CDATA[坚持不懈往往只能用来讲讲，到头来没几件事是能坚持的。

很久都没有再动Blog，一来很懒，二来加班，三来没啥要写。。。。不能坚持一件事往往是主观上为自己找了很多借口。

很多时候，都是自己的不乐意总结和一味的逃避自我批判和反省导致自己一直原地踏步。过程是很痛苦的，但一旦走出这一步，才能真正的取得进步。

语伦无次了...Just do it &amp; Try your best...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date>2010-09-06 10:11:39</wp:post_date>
		<wp:post_date_gmt>2010-09-06 10:11:39</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>back</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<category domain="post_tag" nicename="%e7%a2%8e%e7%a2%8e%e5%bf%b5"><![CDATA[碎碎念]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SoundManager 声音管理器</title>
		<link>http://blog.as3er.com/?p=254</link>
		<pubDate>Mon, 06 Sep 2010 03:08:41 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=254</guid>
		<description></description>
		<content:encoded><![CDATA[一个项目中 往往有很多声音元素 弄了个管理器

用法：

[actionscript3]
         [Embed(source=&quot;file/test.mp3&quot;)]
		private var _sound:Class;

		[Embed(source=&quot;file/tellme.mp3&quot;)]
		private var _sound2:Class;

        private var soundManager:SoundManager ;
		/**
		 * 测试声音管理器
		 *
		 */
		private function testSoundManager():void
		{
			soundManager = SoundManager.instance;
			soundManager.registerSound(new _sound(),1);
			soundManager.playSound(1,0,.1);

			soundManager.registerSound(new _sound2(),2);
			soundManager.playSound(2,2,.2);

		}
[/actionscript3]

SoundManager下载：<a href="http://www.as3er.com/demo/as3er/SoundManager.as">SoundManager</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>254</wp:post_id>
		<wp:post_date>2010-09-06 11:08:41</wp:post_date>
		<wp:post_date_gmt>2010-09-06 03:08:41</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>soundmanager-%e5%a3%b0%e9%9f%b3%e7%ae%a1%e7%90%86%e5%99%a8</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="soundmanager"><![CDATA[SoundManager]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SWFBrowse  SWF SymbolClass Tag 解析</title>
		<link>http://blog.as3er.com/?p=272</link>
		<pubDate>Mon, 06 Sep 2010 09:10:52 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=272</guid>
		<description></description>
		<content:encoded><![CDATA[只完成了 SymbolClass Tag 和一些头文件的解析.
用法：
[actionscript3]
var swfBrowse:SWFBrowse = new SWFBrowse();
swfBrowse.paseSwf(swfBytes);//swfBytes swf文件数据
swfBrowse.addEvent(SWFBrowseEvent.SWF_PARSE_COMPLETE,onComplete);
private function onComplete(e:SWFBrowseEvent):void
{
    var classList:Array = swfBrowse.definitionClassList//所有声明过的Class定义
}			
[/actionscript3]

SWFBrowse: <a href="http://www.as3er.com/demo/SWFBrowse.rar">下载</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2010-09-06 17:10:52</wp:post_date>
		<wp:post_date_gmt>2010-09-06 09:10:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>swfbrowse-swf-symbolclass-tag-%e8%a7%a3%e6%9e%90</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="swfbrowse"><![CDATA[SWFBrowse]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flex Compc编译SWC文件</title>
		<link>http://blog.as3er.com/?p=279</link>
		<pubDate>Mon, 18 Oct 2010 08:04:41 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=279</guid>
		<description></description>
		<content:encoded><![CDATA[可以使用 compc 命令来编译as为SWC文件。
用法：
compc -source-path=. -include-classes= EncriptLib -include-libraries=./test.swc -output=encriptLib.swc
-include-libraries 是将test.swc全部导入.所以使用 -library-path=./test.swc

参考文档：<a href="http://livedocs.adobe.com/flex/3/html/compilers_22.html" target="_blank">http://livedocs.adobe.com/flex/3/html/compilers_22.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[Flex Compc编译SWC文件]]></excerpt:encoded>
		<wp:post_id>279</wp:post_id>
		<wp:post_date>2010-10-18 16:04:41</wp:post_date>
		<wp:post_date_gmt>2010-10-18 08:04:41</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flex-compc%e7%bc%96%e8%af%91swc%e6%96%87%e4%bb%b6</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="swc"><![CDATA[SWC]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>成功在 Windows 7 下安装Mac OS X Snow Leopard（10.6）</title>
		<link>http://blog.as3er.com/?p=283</link>
		<pubDate>Tue, 16 Nov 2010 08:51:23 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=283</guid>
		<description></description>
		<content:encoded><![CDATA[我绝非闲的蛋疼，只是动手搞定很久之前就想搞搞的事情！无奈机器内存太小了，2G内存一分为二的确太吃力！只能用来观赏，没了安装XCode的冲动。

上图留念：

<a href="http://www.as3er.com/blog/wp-content/uploads/2010/11/mac2.jpg"><img class="alignnone size-medium wp-image-284" title="mac" src="http://www.as3er.com/blog/wp-content/uploads/2010/11/mac2-300x293.jpg" alt="" width="300" height="293" /></a>

另外提供一个无法全屏的解决方法：在引导进入系统时 输入命令 "Graphics Mode"="1600x900x32" 输入你要的分辨率 回车进入即可！]]></content:encoded>
		<excerpt:encoded><![CDATA[Windows 7 安装 Snow Leopard 10.6]]></excerpt:encoded>
		<wp:post_id>283</wp:post_id>
		<wp:post_date>2010-11-16 16:51:23</wp:post_date>
		<wp:post_date_gmt>2010-11-16 08:51:23</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%90%e5%8a%9f%e5%9c%a8-windows-7-%e4%b8%8b%e5%ae%89%e8%a3%85mac-os-x-snow-leopard%ef%bc%8810-6%ef%bc%89</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JLog 开始动工</title>
		<link>http://blog.as3er.com/?p=293</link>
		<pubDate>Tue, 21 Dec 2010 12:46:19 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=293</guid>
		<description></description>
		<content:encoded><![CDATA[<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="600" height="550" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/blog/wp-content/uploads/2010/12/test.swf" /><embed type="application/x-shockwave-flash" width="600" height="550" src="http://www.as3er.com/blog/wp-content/uploads/2010/12/test.swf"></embed></object>

心里默默的念叨了几天，正好今天工作被架空，一时没活！写了一部分！

1.FPS

2.JPanel 中一些操作

发个demo，留贴！]]></content:encoded>
		<excerpt:encoded><![CDATA[JLog]]></excerpt:encoded>
		<wp:post_id>293</wp:post_id>
		<wp:post_date>2010-12-21 20:46:19</wp:post_date>
		<wp:post_date_gmt>2010-12-21 12:46:19</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jlog-%e5%bc%80%e5%a7%8b%e5%8a%a8%e5%b7%a5</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="jlog"><![CDATA[JLog]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JLog V1.1</title>
		<link>http://blog.as3er.com/?p=303</link>
		<pubDate>Sat, 01 Jan 2011 08:46:05 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=303</guid>
		<description></description>
		<content:encoded><![CDATA[今儿天气不错，可惜没人一起出去逛街。想想不去也罢，人肯定很多。不如宅家里写写代码。

浮躁的人啊，何时能平静啊！

JLog V1.1

新增功能

1.Ctrl+J 打开/关闭 面板

2.多颜色打印信息

3.筛选打印（按作者输出信息，设置作者后，只打印该作者调用的Trace。此想法来自“卡啦”童鞋。多人协作，很多时候我们需要trace，却总忘记去掉trace。别人trace的时候就郁闷了，想找到自己的trace要费很多力气）

[actionscript3]
        /**
		 *	测试JLog 
		 */		
		private function testJLog():void
		{
			addChild(JLog.jLogPanel);
			JLog.JLogEnabled = true;
//			JLog.TRACE_AUTHOR = &quot;emily&quot;;
			JLog.trace((new Sprite()).toString(),&quot;Jason&quot;);
			JLog.trace(&quot;anyone Trace&quot;,&quot;anyone&quot;);
			JLog.trace(&quot;emily Trace&quot;,&quot;emily&quot;);
		}
		
[/actionscript3]

DEMO:

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="600" height="550" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/blog/wp-content/uploads/2011/01/test_v1.1.swf" /><embed type="application/x-shockwave-flash" width="600" height="550" src="http://www.as3er.com/blog/wp-content/uploads/2011/01/test_v1.1.swf"> </embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[JLog Debug]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date>2011-01-01 16:46:05</wp:post_date>
		<wp:post_date_gmt>2011-01-01 08:46:05</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>jlog-v1-1</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="jlog"><![CDATA[JLog]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>安静下来，继续编码！</title>
		<link>http://blog.as3er.com/?p=313</link>
		<pubDate>Wed, 02 Mar 2011 02:13:23 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=313</guid>
		<description></description>
		<content:encoded><![CDATA[想的太多总会感到疲惫，不如安安静静的编码。不停的追求卓越，成功会找到你的。
2011对自己有太多的期待！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>313</wp:post_id>
		<wp:post_date>2011-03-02 10:13:23</wp:post_date>
		<wp:post_date_gmt>2011-03-02 02:13:23</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%ae%89%e9%9d%99%e4%b8%8b%e6%9d%a5%ef%bc%8c%e7%bb%a7%e7%bb%ad%e7%bc%96%e7%a0%81%ef%bc%81</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>自定义对象 序列化/反序列化(深度Copy)</title>
		<link>http://blog.as3er.com/?p=317</link>
		<pubDate>Mon, 21 Mar 2011 02:50:16 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=317</guid>
		<description></description>
		<content:encoded><![CDATA[之前发过一篇关于复制对象的文章，今天读《What can you do with bytes in ActionScript 3 ?》的新章节，学习到了新内容。
我们可以通过copy前注册自定义对象来实现clone后的对象还原。代码如下：
[actionscript3]
package
{
	import flash.display.Sprite;
	import flash.net.registerClassAlias;
	import flash.utils.ByteArray;
	/**
	 * 
	 * @author jason
	 * 
	 */	
	public class test extends Sprite
	{
		public function test()
		{
			var gameData:GameData = new GameData();
			gameData.userLevel = 10;
			gameData.userName = &quot;jason&quot;;
			
			/*
			 *当以 Action Message Format (AMF) 对一个对象进行编码时，保留该对象的类（类型）。
			 *将对象编码为 AMF 时，该函数将保存该对象的类的别名，以便在解码对象时可以恢复该类。 
			 *如果编码上下文没有为对象的类注册别名，该对象将被编码为一个匿名对象。 
			 *同样，如果解码上下文注册了不同的别名，将为解码后的数据创建一个匿名对象
			*/
			registerClassAlias(&quot;gameData&quot;,GameData);
			
			var gameDataCopy:GameData = clone(gameData) as GameData;
			gameDataCopy.userName = &quot;andy&quot;;
			
			trace(gameData.userLevel,gameData.userName);// 10 jason
			trace(gameDataCopy.userLevel,gameDataCopy.userName);//10 andy
		}
		
		private function clone(data:Object):*
		{
			var bytes:ByteArray = new ByteArray();
			bytes.writeObject(data);
			bytes.position = 0;
			return bytes.readObject();
		}
	}
}

class GameData
{
	private var _userName:String;
	private var _userLevel:int;

	public function get userLevel():int
	{
		return _userLevel;
	}

	public function set userLevel(value:int):void
	{
		_userLevel = value;
	}

	public function get userName():String
	{
		return _userName;
	}

	public function set userName(value:String):void
	{
		_userName = value;
	}
}
[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>317</wp:post_id>
		<wp:post_date>2011-03-21 10:50:16</wp:post_date>
		<wp:post_date_gmt>2011-03-21 02:50:16</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%87%aa%e5%ae%9a%e4%b9%89%e5%af%b9%e8%b1%a1-%e5%ba%8f%e5%88%97%e5%8c%96%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96%e6%b7%b1%e5%ba%a6copy</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e5%ae%9a%e4%b9%89%e5%af%b9%e8%b1%a1-%e5%ba%8f%e5%88%97%e5%8c%96%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96"><![CDATA[自定义对象 序列化/反序列化]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>117</wp:comment_id>
			<wp:comment_author><![CDATA[dojbntzw]]></wp:comment_author>
			<wp:comment_author_email>xgjhma@tudtoe.com</wp:comment_author_email>
			<wp:comment_author_url>http://xyovlmgwqkra.com/</wp:comment_author_url>
			<wp:comment_author_IP>91.198.206.139</wp:comment_author_IP>
			<wp:comment_date>2011-03-27 12:38:00</wp:comment_date>
			<wp:comment_date_gmt>2011-03-27 04:38:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Q2YGv0  <a href="http://kalbvpkgiqbl.com/" rel="nofollow">kalbvpkgiqbl</a>, [url=http://duaniiuhmmzm.com/]duaniiuhmmzm[/url], [link=http://gnpcjnrfmakz.com/]gnpcjnrfmakz[/link], http://pctmgrlmsjgf.com/]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>图片的流加载</title>
		<link>http://blog.as3er.com/?p=320</link>
		<pubDate>Mon, 21 Mar 2011 05:54:33 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=320</guid>
		<description></description>
		<content:encoded><![CDATA[EveryDay bytes 内容。
[actionscript3]
package
{
	import flash.display.Loader;
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.ProgressEvent;
	import flash.net.URLRequest;
	import flash.net.URLStream;
	import flash.utils.ByteArray;
	
	[SWF(width=&quot;1200&quot;, height=&quot;800&quot;, frameRate=&quot;60&quot;, backgroundColor=&quot;0x333333&quot;)]
	
	public class TestLoadImg extends Sprite
	{
		public function TestLoadImg()
		{
			super();
			addEventListener(Event.ADDED_TO_STAGE,addToStage);
		}
		
		private function addToStage(e:Event):void
		{
			init();
		}
		
		private var _urlStream:URLStream;
		private var _loader:Loader;
		private var _bytes:ByteArray;
		private function init():void
		{
			
			_bytes = new ByteArray();
			_loader = new Loader();
			addChild(_loader);
		
			_urlStream = new URLStream();
			_urlStream.addEventListener(ProgressEvent.PROGRESS,onProgress);
			_urlStream.addEventListener(Event.COMPLETE,onComplete);
			_urlStream.load(new URLRequest(&quot;xxxxxx.jpg&quot;));
		}
		
		private function onProgress(e:ProgressEvent):void
		{
			_urlStream.readBytes(_bytes,_bytes.length);
			_loader.unload();
			_loader.loadBytes(_bytes);
		}
		
		private function onComplete(e:Event):void
		{
			trace(&quot;onComplete...&quot;);
		}
					
	}
}
[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>320</wp:post_id>
		<wp:post_date>2011-03-21 13:54:33</wp:post_date>
		<wp:post_date_gmt>2011-03-21 05:54:33</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9b%be%e7%89%87%e7%9a%84%e6%b5%81%e5%8a%a0%e8%bd%bd</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e5%9b%be%e7%89%87%e6%b5%81%e5%8a%a0%e8%bd%bd"><![CDATA[图片流加载]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>xCode 快捷键收集</title>
		<link>http://blog.as3er.com/?p=330</link>
		<pubDate>Sun, 12 Feb 2012 08:01:46 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=330</guid>
		<description></description>
		<content:encoded><![CDATA[1. Alt-⌘-Up 在.m/cpp文件和.h文件间切换

2. ⌘-Shift-D 快速打开

3. ⌘-Shift-E 全屏展开编辑器窗口

4. Alt-⌘-Left / Alt-⌘-Right 在打开的文件间切换

5. Tab 接受当前的自动完成

6. Escape 展开一个所有可能的自动完成列表 (例如在点后按Esc键，就会展开一个自动完成列表).

7. Control-, 显式可能的自动完成列表, Control-. 插入最有可能的自动完成, Control-/ 和 Shift-Control-/ 在每个自动完成输入框间切换.

8. ⌘-double click on a symbol 查看这个类型的定义.

9. Option-double click on a symbol 查找选中内容的API文档.

10. ⌘-/ 自动加入 “//” 注释.

11. Control+Left/Right Arrow 在单词间切换

12. 右键点击一个变量名，然后选择edit all in scope 则可以在这个文档中批量的修改这个变量名.

13. ⌘-[ and ⌘-] 增加或者减少缩进

14. 双击中括号或者大括号，可以显示跟它对应的那个括号

15. ⌘-Shift-R 切换到控制台

16. Shift-⌘-C, 显示class browser

17. ⌘-=, 跳转到下一个错误.

18. ⌘-Shift-F显示查找输入框.

19. ⌘-Shift-B显示build窗口

20. ⌘-Shift-Y显示debug窗口.

21. ⌘-E将选择内容作为当前查找对象.

22. ⌘-G在当前文件中查找下一个当前查找对象.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>330</wp:post_id>
		<wp:post_date>2012-02-12 08:01:46</wp:post_date>
		<wp:post_date_gmt>2012-02-12 08:01:46</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xcode-%e5%bf%ab%e6%8d%b7%e9%94%ae%e6%94%b6%e9%9b%86</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios"><![CDATA[IOS]]></category>
		<category domain="post_tag" nicename="xcode"><![CDATA[xCode]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Objective-C语法快速参考</title>
		<link>http://blog.as3er.com/?p=335</link>
		<pubDate>Sun, 12 Feb 2012 08:48:44 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=335</guid>
		<description></description>
		<content:encoded><![CDATA[转载：<a href="http://www.cocoachina.com/newbie/tutorial/2009/0611/150.html">CocoaChina</a>

大部分有一点其他平台开发基础的初学者看到XCode，第一感想是磨拳擦掌，看到Interface Builder之后，第一感想是跃跃欲试，而看到Objective-C的语法，第一感想就变成就望而却步了。好吧，我是在说我自己。

如果你和我一样，对苹果相关的开发：Mac OS X或是iPhone有兴趣，但是第一时间看到Objective-C就会头疼并伴有发烧症状的话，疗效比较好的快速治疗方法是阅读本文。大概花二十分钟左右，而且绝不无聊的时间，你就会对Objective-C有那么一点点了解，至少读读例子不会那么头疼了。

不过假定你要有那么一点点c++、c#或是java的基础，至少能看到c++、c#或是java的源码，能够大致明白说得是什么。

这篇文章不是一篇科技文章，希望你也不要把它当做科技文章来读。文章非常不严谨，但是我相信你能看得懂。
<h3><strong>一、XCode、Objective-C、Cocoa说的是几样东西？</strong></h3>
<strong>答案：三样东西。</strong>

XCode：你可以把它看成是一个开发环境，就好像Visual Studio或者Netbeans或者SharpDevelop一样的玩意。你可以将Interface Builder认为是Visual Studio中用来画界面的那部分功能单独提出来的程序。

Objective-C：这是一种语言，就好像c++是一种语言，Java是一种语言，c#是一种语言，莺歌历史也是一种语言一样。

Cocoa：是一大堆函数库，就好像MFC、.NET、Swing这类玩意，人家已经写好了一堆现成的东西，你只要知道怎么用就可以了。

有些人会比较容易混淆Objective-C和Cocoa，就好像有些人会混淆c#和.NET一样。这两个东西真的是两个不一样的东西。
<h3>二、Objective-C是什么？</h3>
你可以把它认为是语法稍稍有点不一样的c语言。虽然第一眼望上去你可能会认为它是火星语，和你所认知的任何一种语言都不一样。

先简单列出一点差别：

<big>问题一：我在程序中看到大量的减号、中括号和NS****这种东西，他们是什么玩意儿？</big>

<strong>1 减号（或者加号）</strong>

减号表示一个函数、或者方法、或者消息的开始，怎么说都行。

比如c#中，一个方法的写法可能是：

<span style="color: #3366ff;">private void hello(bool ishello)</span>

<span style="color: #3366ff;">{</span>

<span style="color: #3366ff;">//OOXX</span>

<span style="color: #3366ff;">}</span>

用Objective-C写出来就是

<span style="color: #3366ff;">-(void) hello:(BOOL)ishello</span>

<span style="color: #3366ff;">{</span>

<span style="color: #3366ff;">//OOXX</span>

<span style="color: #3366ff;">}</span>

挺好懂的吧？

不过在Objective-C里面没有public和private的概念，你可以认为全是public。

而用加号的意思就是其他函数可以直接调用这个类中的这个函数，而不用创建这个类的实例。

<strong>2 中括号</strong>

中括号可以认为是如何调用你刚才写的这个方法，通常在Objective-C里说“消息”。

比如C#里你可以这么写：

this.hello(true);

在Objective-C里，就要写成：

[self hello:YES];

<strong>3 NS****</strong>

老乔当年被人挤兑出苹果，自立门户的时候做了个公司叫做<strong>N</strong>ext<strong>S</strong>tep，里面这一整套开发包很是让一些科学家们喜欢，而现在Mac OS用的就是<strong>N</strong>ext<strong>S</strong>tep这一套函数库。

这些开发<strong>N</strong>ext<strong>S</strong>tep的人们比较自恋地把函数库里面所有的类都用<strong>N</strong>ext<strong>S</strong>tep的缩写打头命名，也就是<strong>NS</strong>****了。比较常见的比如：

<strong>NS</strong>Log

<strong>NS</strong>String

<strong>NS</strong>Integer

<strong>NS</strong>URL

<strong>NS</strong>Image

…

你会经常看到一些教学里面会用到：

NSLog (@"%d",myInt);

这句话主要是在console里面跟踪使用，你会在console里面看到myInt的值（在XCode里面运行的时候打开dbg窗口即可看到）。而我们在其他开发环境里面可能会比较习惯使用MessageBox这种方式进行调试。

你还可以看到其他名字打头的一些类，比如CF、CA、CG、UI等等，比如

CFStringTokenizer 这是个分词的东东

CALayer 这表示Core Animation的层

CGPoint 这表示一个点

UIImage 这表示iPhone里面的图片

CF说的是Core Foundation，CA说的是Core Animation，CG说的是Core Graphics，UI说的是iPhone的User Interface……还有很多别的，等你自己去发掘了。

<big>问题二、#import、@interface这类玩意说的是什么？</big>

<strong>1、#import</strong>

你可以把它认为是#include，一样的。但是最好用#import，记住这个就行了。

<strong>2、@interface等等</strong>

比如你在c#中写一个抓孩子类的定义：

<span style="color: #3366ff;">public class Kids : System</span>

<span style="color: #3366ff;">{</span>

<span style="color: #3366ff;">private string kidName=”mykid”;</span>

<span style="color: #3366ff;">private string kidAge=“15”;</span>

<span style="color: #3366ff;">private bool isCaughtKid()</span>

<span style="color: #3366ff;">{</span>

<span style="color: #3366ff;">return true;</span>

<span style="color: #3366ff;">}</span>

<span style="color: #3366ff;">}</span>

当然，上面的写法不一定对，就是个用于看语法的举例。

在Objective-C里就得这么写：

先写一个kids.h文件定义这个类：

<span style="color: #3366ff;">@interface Kids: NSObject {</span>

<span style="color: #3366ff;">NSString *kidName;</span>

<span style="color: #3366ff;">NSString *kidAge;</span>

<span style="color: #3366ff;">}</span>

<span style="color: #3366ff;">-(BOOL) isCaughtKid:;</span>

<span style="color: #3366ff;">@end</span>

再写一个kids.m文件实现：

<span style="color: #3366ff;">#import “kids.h”</span>

<span style="color: #3366ff;">@implementation Kids</span>

<span style="color: #3366ff;">-(void) init {</span>

<span style="color: #3366ff;">kidName=@”mykid”;</span>

<span style="color: #3366ff;">kidAge=@”15”;</span>

<span style="color: #3366ff;">}</span>

<span style="color: #3366ff;">-(BOOL) isCaughtKid:{</span>

<span style="color: #3366ff;">return YES;</span>

<span style="color: #3366ff;">}</span>

<span style="color: #3366ff;">@end</span>

这个写法也不一定对，主要是看看语法就行了。-_-b

<big>问题三、一个方法如何传递多个参数？</big>

一个方法可以包含多个参数，不过后面的参数都要写名字。

多个参数的写法

(方法的数据类型) 函数名: (参数1数据类型) 参数1的数值的名字 参数2的名字: (参数2数据类型

) 参数2值的名字 …. ;

举个例子，一个方法的定义：

-(void) setKids: (NSString *)myOldestKidName secondKid: (NSString *) mySecondOldestKidName thirdKid: (NSString *) myThirdOldestKidName;

实现这个函数的时候：

-(void) setKids: (NSString *)myOldestKidName secondKid: (NSString *) mySecondOldestKidName thirdKid: (NSString*) myThirdOldestKidName{

大儿子 = myOldestKidName;

二儿子 = mySecondOldestKidName;

三儿子 = myThirdOldestKidName;

}

调用的时候：

Kids *myKids = [[Kids alloc] init];

[myKids setKids: @”张大力” secondKid: @”张二力” thirdKid: @”张小力”];

而如果你用c#写这个方法，大致的写法可能是

public void setKids( string myOldestKidName, string mySecondOldestKidName, string myThirdOldestKidName)

{

…

}

调用的时候大概的写法可能是：

Kids myKids = new Kids();

myKids.setKids (“张大力”, “张二力”, “张小力”);

明白了吧？其实不怎么难看懂。

基本上，如果你能了解下面这段代码的转换关系，你Objective-C的语法也就懂了八成了：

[[[MyClass alloc] init:[foo bar]] autorelease];

转换成C#或者Java的语法也就是：

MyClass.alloc().init(foo.bar()).autorelease();
<h3>三、其他的一些东西</h3>
其实这些本站之前的文章有所提及，这里再详细解释一下。

1、 id：

Objective-C有一种比较特殊的数据类型是id。你可以把它理解为“随便”。

在Objective-C里，一切东西都是指针形式保存，你获取到的就是这个对象在内存的位置。那么id就是你知道这个位置，但是不知道里面是啥的时候的写法。

2、 同一个数组可以保存不同的对象：

比如一个数组NSArray，这种数组里面可以保存各种不同的对象，比如这个数组里：

myArray &lt;—-|

0: (float) 234.33f

1: @”我是个好人”

2: (NSImage *) <img src="http://www.cocoachina.com/wp-content/uploads/image/icon-jiong.png" alt="" width="43" height="32" align="absMiddle" /> (俺的美图)

3: @”我真的是好人”

这是一个由4个东西组成的数组，这个数组包括一个浮点数，两个字符串和一个图片。

3、BOOL，YES，NO：

你可以认为YES表示C#或者Java里的true，NO表示false。而实际上YES是1，NO是0，BOOL本身就是个char。

4、IBOutlet、IBAction是啥玩意，总能看到。

这两个东西其实在语法中没有太大的作用。如果你希望在Interface Builder中能看到这个控件对象，那么在定义的时候前面加上IBOutlet，在IB里就能看到这个对象的outlet，如果你希望在Interface Builder里控制某个对象执行某些动作，就在方法前面加上(IBAction)。

而这两个东西实际上和void是一样的。

5、nil。

Objective-C里的NULL（空）就这么写，表示空指针。

6、为什么是@”字符串”而不是”字符串”

前面加上@符号，编译器在编译的时候会在程序中给你留出位置，这样才能保证这个字符串不会丢失。反正记住，如果你要想把某些字符串写死在程序里，就要用@”字符串”，如果忘了用@，程序应该会出错。

superzhou大侠指正：

6、为什么是@”字符串”而不是”字符串”

”字符串”是C的字符串,@”"是把C的字符串转成NSString的一个简写.
在需要NSString的地方才需要这个转化,例如NSLog里面.
在需要C string的地方,还是用”字符串”的.

另外,@”"这个转换是不支持中文的.例如NSLog(@”字符串”); 是一定输出不了中文的.
<h3>四、Objective-C 2.0</h3>
Objective-C 2.0是Leopard新增加的一门语言，其实和原来的Objective-C是一样的。主要是增加了属性。详细的内容这里不写了，可以参阅Allen Dang的这篇文章，写的很明白。

<a href="http://blog.codingmylife.com/?p=81" target="_blank"><span style="color: #414555;">http://blog.codingmylife.com/?p=81</span></a>
<h3>五、总结</h3>
现在来总结一下怎么看Objective-C的代码和怎么开始学Objective-C吧。

1、记住Objective-C就是C，不是火星语，这个很关键。

2、记住你自己看不懂不表示脑子迟钝，大部分人第一次看Objective-C的代码可能比你还要迟钝。

3、把CocoaChina.com加入收藏夹，看不明白代码就来再看一遍这篇开宗明义的好文。

4、文档很关键，当你看不懂某些东西说的是什么的时候，先查Cocoachina，再看英文文档里面的API说明，尤其这个类是以NS开头的时候。再不行就去google搜，直接把你要查的方法贴进google，通常能找到不少人也在问同样的问题，自然也有热心人活雷锋帮助回答。

5、可以看hello world例子，但是不能总看，看多了真的会晕。另外，千万要放弃苹果官方的Currency Converter货币转换的例子，那个例子是毒药，刚学的时候越看越蒙。

6、学习一门语言最好的方法是先用，和学外语一样，当你会说的时候自然会读。给自己设立一个简单的目标，比如做一个简单的程序，然后一点点解决问题。这样学习起来比只看例子快得多。

这是一篇初学者写的文章，希望对同样是初学者的你有一点点帮助：）虽然只是很肤浅的一点点内容，但是应该对你迈入Objective-C的大门有一点帮助。看懂了这篇文章，回过头看Cocoachina的其他文章，你就会觉得很顺眼了。记得天天来哦。

另外，这篇Objective-C的参考资料也比较好，如果你有兴趣可以一读。

<a href="http://www.otierney.net/objective-c.html.zh-tw.big5" target="_blank"><span style="color: #414555;">http://www.otierney.net/objective-c.html.zh-tw.big5</span></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>335</wp:post_id>
		<wp:post_date>2012-02-12 08:48:44</wp:post_date>
		<wp:post_date_gmt>2012-02-12 08:48:44</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>objective-c%e8%af%ad%e6%b3%95%e5%bf%ab%e9%80%9f%e5%8f%82%e8%80%83</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios"><![CDATA[IOS]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FileReference 调用load()方法后无法触发Complete事件</title>
		<link>http://blog.as3er.com/?p=340</link>
		<pubDate>Tue, 14 Feb 2012 13:24:04 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=340</guid>
		<description></description>
		<content:encoded><![CDATA[今儿写了下面一段代码
[actionscript3]
private function loadFile():void
{
	var fileRef:FileReference = new FileReference();
	fileRef.addEventListener(Event.SELECT,onSelect);
	fileRef.addEventListener(Event.COMPLETE,onComplete);
	fileRef.browser();
}

private function onSelect(e:Event):void
{
	var fileRef:FileReference = e.target as FileReference();
	fileRef.load();
}

private function onComplete(e:Event):void
{
	//TODO 
}
[/actionscript3]

乍一看代码应该是没什么问题的，但是选择文件后没有触发COMPLETE事件。这是因为fileRef是局部变量，当选择文件弹出窗口时FlashPlayer会强制进行一次垃圾回收，fileRef作为局部变量就被回收掉了，所以下面的监听就不会再被触发了，将fileRef声明为全局变量就可以解决这个问题。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>340</wp:post_id>
		<wp:post_date>2012-02-14 13:24:04</wp:post_date>
		<wp:post_date_gmt>2012-02-14 13:24:04</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>filereference-%e8%b0%83%e7%94%a8load%e6%96%b9%e6%b3%95%e5%90%8e%e6%97%a0%e6%b3%95%e8%a7%a6%e5%8f%91complete%e4%ba%8b%e4%bb%b6</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="as3-api"><![CDATA[AS3 API]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>利用FlashCS 模拟网速测试FlashBuilder项目</title>
		<link>http://blog.as3er.com/?p=346</link>
		<pubDate>Sat, 25 Feb 2012 05:10:32 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=346</guid>
		<description></description>
		<content:encoded><![CDATA[玩家的网络环境是复杂的，经常有玩家抱怨游戏停止在加载画面进不去游戏。。。。
我们开发人员想模拟玩家的网络环境是比较困难的，这里有个小技巧就是可以帮助开发模拟玩家网速。
FlashCS中测试SWF程序是可以在播放器中的下载设置中设置网速的，所以我们可以把我们项目发布好的SWF程序直接拖进FlashCS里运行，然后设置好下载速率Ctrl+Enter根据设置的下载速率运行程序。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>346</wp:post_id>
		<wp:post_date>2012-02-25 05:10:32</wp:post_date>
		<wp:post_date_gmt>2012-02-25 05:10:32</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%88%a9%e7%94%a8flashcs-%e6%a8%a1%e6%8b%9f%e7%bd%91%e9%80%9f%e6%b5%8b%e8%af%95flashbuilder%e9%a1%b9%e7%9b%ae</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e6%b5%8b%e8%af%95"><![CDATA[测试]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2012</title>
		<link>http://blog.as3er.com/?p=536</link>
		<pubDate>Sun, 12 Feb 2012 07:52:54 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=327</guid>
		<description></description>
		<content:encoded><![CDATA[收到服务器到期的通知才想起自己还有Blog，打开看看日期才发现竟然有一年不曾写Blog了。
以前总觉得Blog要写的专业一些，一些简单的技术问题，或者关于生活的碎碎念不应该出现
在Blog里，结果就是觉得这个技术问题太简单没必要写，这个生活里的碎碎念不能写.....
真心觉得都是错误的想法。
接下来的时间，我会认真写Blog。不管是对生活的碎碎念还是技术的积累，都需要在这个Blog
里记录下来，等一年结束了也好能总结出来自己都干了些什么事。
被时间推着工作三年半有余了，一路跌跌撞撞的走来仍觉得自己是个刚工作的毛头小子，太多
的东西需要学习和积累，期待成长却有时又恐惧压力。对于自制力差的人来说是非常纠结的事情。
一时间什么都想学习下，结果就是什么都没搞成。还是心不够静啊！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>536</wp:post_id>
		<wp:post_date>2012-02-12 07:52:54</wp:post_date>
		<wp:post_date_gmt>2012-02-12 07:52:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2012</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>118</wp:comment_id>
			<wp:comment_author><![CDATA[Dom Chen]]></wp:comment_author>
			<wp:comment_author_email>dom@domlib.com</wp:comment_author_email>
			<wp:comment_author_url>http://domlib.com</wp:comment_author_url>
			<wp:comment_author_IP>58.247.54.198</wp:comment_author_IP>
			<wp:comment_date>2012-03-08 13:52:10</wp:comment_date>
			<wp:comment_date_gmt>2012-03-08 13:52:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:smile: 顶起~我也对写什么内容纠结过。。。其实感觉是自己对技术和生活的一个总结。反正是自己的博客，想写什么就写什么吧。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>119</wp:comment_id>
			<wp:comment_author><![CDATA[vanCopper]]></wp:comment_author>
			<wp:comment_author_email>vanCopperm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>180.168.174.218</wp:comment_author_IP>
			<wp:comment_date>2012-03-09 01:19:42</wp:comment_date>
			<wp:comment_date_gmt>2012-03-09 01:19:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是的，爱写点啥就写点啥。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>118</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>对于 AS3 文档类中鼠标事件 无效的测试</title>
		<link>http://blog.as3er.com/?p=350</link>
		<pubDate>Sat, 25 Feb 2012 07:45:33 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=350</guid>
		<description></description>
		<content:encoded><![CDATA[周五健仁陈童鞋发现了一个诡异的问题，在文档类中的代码如下
[actionscript3]
[SWF(width=&quot;1000&quot;,height=&quot;600&quot;)]
	public class vanCopperTest extends Sprite
	{
		public function vanCopperTest()
		{
			stage.align = StageAlign.TOP_LEFT;
			stage.scaleMode = StageScaleMode.NO_SCALE;
	
			//黄色矩形
			graphics.beginFill(0xFFCC00,.5);
			graphics.drawRect(0,0,200,200);
			graphics.endFill();
			addEventListener(MouseEvent.CLICK,onClick);
			trace(&quot;this.numChilder&quot;,numChildren);// output: 0
			
		}
				
		private function onClick(e:MouseEvent):void
		{
			trace(&quot;Click&quot;);
		}
		
[/actionscript3]

运行后点击黄色矩形发现监听器并没有触发，这的确出乎意料啊～～首先怀疑的是FlashPlayer对文档类会做特别处理。FlashPlayer的结构是这样的：
stage-->root-->各种容器(sprite movieClip textFiled)
我们的文档类也就是在stage上面的root对象。于是想是不是画笔对象不会相应鼠标事件呢？添加了下面的测试代码：
[actionscript3]
public class vanCopperTest extends Sprite
{
	public function vanCopperTest()
	{
		stage.align = StageAlign.TOP_LEFT;
		stage.scaleMode = StageScaleMode.NO_SCALE;
			
		//黄色矩形
		graphics.beginFill(0xFFCC00,.5);
		graphics.drawRect(0,0,200,200);
		graphics.endFill();
		addEventListener(MouseEvent.CLICK,onClick);
		trace(&quot;this.numChilder&quot;,numChildren);// output: 0
		
		//红色矩形
		var sp:Sprite  = new Sprite();
		sp.graphics.beginFill(0xFF0000,0.5);
		sp.graphics.drawRect(0,0,200,200);
		sp.graphics.endFill();
		sp.addEventListener(MouseEvent.CLICK,onSpClick);
		sp.x = 200;
		addChild(sp);
		trace(&quot;sp.numChilder&quot;,sp.numChildren);//output :0
	}
	private function onSpClick(e:MouseEvent):void
	{
		trace(&quot;ClickSp&quot;);
	}
	
	private function onClick(e:MouseEvent):void
	{
		trace(&quot;Click&quot;);
	}
[/actionscript3]

运行测试发现sp的监听器是会触发的,添加在文档类上面的监听也会执行。所以可以肯定即使容器里只有画笔的简单图形也不会影响鼠标事件的触发。可为什么文档类里明明也有画笔却无法触发鼠标单击？我打印了文档类和sp的子项数量，两个都是零，如果鼠标触发条件里会先判断子项数量的话也是说不通的。问题又回到了文档类root这个比较特殊的容器上，于是我写了下面的测试：
文档类：
[actionscript3]
[SWF(width=&quot;1000&quot;,height=&quot;600&quot;)]
	public class vanCopperTest extends Sprite
	{
		public function vanCopperTest()
		{
			stage.align = StageAlign.TOP_LEFT;
			stage.scaleMode = StageScaleMode.NO_SCALE;
//			tileTest();
//			testIsoGrid();
//			testG();
//			testSelice();
			
			//点击黄色矩形 output :stageClick
			//点击红色矩形 output: ClickSp Click stageClick
			//点击粉色矩形 output:TestSpClick Click stageClick
			//点击空白区域 output:stageClick
			this.stage.addEventListener(MouseEvent.CLICK,onStageClick);
			
			//黄色矩形
			graphics.beginFill(0xFFCC00,.5);
			graphics.drawRect(0,0,200,200);
			graphics.endFill();
			addEventListener(MouseEvent.CLICK,onClick);
			trace(&quot;this.numChilder&quot;,numChildren);// output: 0
			
			//红色矩形
			var sp:Sprite  = new Sprite();
			sp.graphics.beginFill(0xFF0000,0.5);
			sp.graphics.drawRect(0,0,200,200);
			sp.graphics.endFill();
			sp.addEventListener(MouseEvent.CLICK,onSpClick);
			sp.x = 200;
			addChild(sp);
			trace(&quot;sp.numChilder&quot;,sp.numChildren);//output :0
			
		//粉色矩形
			var testSp:TestSp = new TestSp();
			testSp.x = 400;
			addChild(testSp);
			trace(&quot;testSp.numChilder&quot;,testSp.numChildren);//output :0
		}
		
		private function onStageClick(event:MouseEvent):void
		{
			trace(&quot;stageClick&quot;);
		}
		
		private function onSpClick(e:MouseEvent):void
		{
			trace(&quot;ClickSp&quot;);
		}
		
		private function onClick(e:MouseEvent):void
		{
			trace(&quot;Click&quot;);
		}
[/actionscript3]
TestSp类：
[actionscript3]
package
{
	import flash.display.Sprite;
	import flash.events.MouseEvent;
	
	public class TestSp extends Sprite
	{
		public function TestSp()
		{
			super();
			graphics.beginFill(0xFF00CC,.5);
			graphics.drawRect(0,0,200,200);
			graphics.endFill();
			addEventListener(MouseEvent.CLICK,onClick);
		}
		
		private function onClick(e:MouseEvent):void
		{
			trace(&quot;TestSpClick&quot;);
		}
	}
}
[/actionscript3]
运行效果：
<img src="http://www.as3er.com/blog/wp-content/uploads/2012/02/运行截图.png" alt="效果图" title="运行截图.png" border="0" width="600" height="266" />
对测试代码分析下来，我想下面的图能把整个流程说的通，但我也不确定就一定是这样的，如果错了 望指正
<img src="http://www.as3er.com/blog/wp-content/uploads/2012/02/运行机制.png" alt="运行机制" title="运行机制.png" border="0" width="600" height="118" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>350</wp:post_id>
		<wp:post_date>2012-02-25 07:45:33</wp:post_date>
		<wp:post_date_gmt>2012-02-25 07:45:33</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%af%b9%e4%ba%8e-as3-%e6%96%87%e6%a1%a3%e7%b1%bb%e4%b8%ad%e9%bc%a0%e6%a0%87%e4%ba%8b%e4%bb%b6-%e6%97%a0%e6%95%88%e7%9a%84%e6%b5%8b%e8%af%95</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e9%bc%a0%e6%a0%87-%e6%97%a0%e6%95%88"><![CDATA[鼠标 无效]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>120</wp:comment_id>
			<wp:comment_author><![CDATA[Dom Chen]]></wp:comment_author>
			<wp:comment_author_email>dom@domlib.com</wp:comment_author_email>
			<wp:comment_author_url>http://domlib.com</wp:comment_author_url>
			<wp:comment_author_IP>58.247.54.198</wp:comment_author_IP>
			<wp:comment_date>2012-03-08 13:58:56</wp:comment_date>
			<wp:comment_date_gmt>2012-03-08 13:58:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[真后悔每次自我介绍的内容都有：“不要把我名字倒过来念”。。。 :cry: 果然是此地无银三百两啊。。。我改还来得及么？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>121</wp:comment_id>
			<wp:comment_author><![CDATA[vanCopper]]></wp:comment_author>
			<wp:comment_author_email>vanCopperm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>180.168.174.218</wp:comment_author_IP>
			<wp:comment_date>2012-03-09 01:20:11</wp:comment_date>
			<wp:comment_date_gmt>2012-03-09 01:20:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好像来不及了，下次吧～哈哈～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>120</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cocos2D 开发笔记（一）</title>
		<link>http://blog.as3er.com/?p=353</link>
		<pubDate>Sun, 26 Feb 2012 15:02:10 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=353</guid>
		<description></description>
		<content:encoded><![CDATA[1.IOS设备跟FlashPlayer的帧频限制是一样的，不能超过60帧每秒的帧率。

2.所有节点的基类都是CCNode类，它包含了位置信息，没有显示信息。CCScene和CCLayer都是CCNode的子类。
CCScene的功能就是根据像素坐标把物体放在场景相应位置，所以任何cocos2D场景都会用一个CCScene作为父容器
CCLayer本身并不做什么，它是用来接收触摸和加速计输入的

3.Cocos2D有内存管理机制不需要手动管理对象

4.IOS设备有二级内存警报机制，当程序使用的内存到达警报临界值时会收到警报事件，这就要求程序应该有应对内存警报机制

5.在Cocos2D中使用Log时，建议使用CCLOG。CCLOG封装了NSLog,CCLOG会在发布程序时被删除

6.CCDirector是Cocos2D游戏引擎的核心，它保存着cocos2D的全局配置设定，同时管理着cocos2D的场景
	Director的主要用处如下:
	1. 访问和改变场景
	2. 访问cocos2d的配置细节
	3. 访问视图(OpenGL,UIView,UIWindow)
	4. 暂停,恢复和结束游戏
	5. 在UIKit和OpenGL之间转换坐标

7.cocos2D中对节点进行移动，旋转，放大，缩小其子节点都会做同样变化

8.一个场景中有多个CCLayer对象本身不会影响程序运行效率，但当这些CCLayer对象接收触摸或者加速计事件的话，就会影响运行效率

9.cocos2D的（0，0）点在屏幕的左下角，CCSprite的注册点是对象的中心位置

10.IOS设备上文件名区分大小写，模拟器上并不区分大小写。

11.anchorPoint对应的是贴图的位置而不是持有这个贴图的对象的位置，如果anchorPoint = (0,0) 就是把贴图的左下角同容器的(0,0)点对齐了

12.IOS设备的贴图尺寸必须符合 2的n次方的规定，宽高必须是 2，4，8，16，32，64，128。。。

13.几乎在任何一个类里面都需要-(id)init和-(void)dealloc这两个方法

14.因为IOS设备使用ARM CPU不支持直接在硬件上做除法，乘法一般会快一些]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>353</wp:post_id>
		<wp:post_date>2012-02-26 15:02:10</wp:post_date>
		<wp:post_date_gmt>2012-02-26 15:02:10</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cocos2d-%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b0%ef%bc%88%e4%b8%80%ef%bc%89</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios"><![CDATA[IOS]]></category>
		<category domain="post_tag" nicename="ios-cocos2d"><![CDATA[IOS Cocos2D]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cocos2D 开发笔记 (二）</title>
		<link>http://blog.as3er.com/?p=356</link>
		<pubDate>Thu, 01 Mar 2012 16:00:00 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=356</guid>
		<description></description>
		<content:encoded><![CDATA[很久的时候用AIR打包过一个ipa在ipad上跑过，大概就是手指滑过的地方会出现彩色的粒子向四周扩散，效率实在不怎么好，今天用Cocos2D大概实现了下，只是用CCSprite贴图实现了一种效果，还不知道怎么能给CCSprite添加滤镜，或者更换不同材质，比较简陋，下一步准备加上粒子试试。
<img src="http://www.as3er.com/blog/wp-content/uploads/2012/03/IMG_0249.png" alt="IMG 0249" title="IMG_0249.PNG" border="0" width="600" height="400" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>356</wp:post_id>
		<wp:post_date>2012-03-01 16:00:00</wp:post_date>
		<wp:post_date_gmt>2012-03-01 16:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cocos2d-%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b0-%e4%ba%8c%ef%bc%89</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cool-particle"><![CDATA[Cool Particle]]></category>
		<category domain="category" nicename="ios"><![CDATA[IOS]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS3 Metaball 元球</title>
		<link>http://blog.as3er.com/?p=375</link>
		<pubDate>Thu, 08 Mar 2012 06:30:02 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=375</guid>
		<description></description>
		<content:encoded><![CDATA[见到这个元球效果的时候还是在09年的时候，看一老外Blog时又看到这个效果，才知道这个叫"元球" (<a href="http://http://zh.wikipedia.org/wiki/%E5%85%83%E7%90%83">WIKI</a>)y又叫变形球。参考这网友的博文(<a href="http://www.cnblogs.com/yjmyzz/archive/2010/06/28/1766712.html" target="_blank">原文链接</a>)学习了一下。

下面是元球的曲面方程，整个效果也是靠这个方程模拟的：

<a href="http://www.as3er.com/blog/wp-content/uploads/2012/03/元球公式.gif"><img class="aligncenter size-full wp-image-377" title="元球公式" src="http://www.as3er.com/blog/wp-content/uploads/2012/03/元球公式.gif" alt="" width="261" height="46" /></a>R：小球的半径 x:小球当前x坐标 y:小球当前y坐标

Xo,Yo舞台任意坐标点

<a href="http://www.as3er.com/blog/wp-content/uploads/2012/03/metaballDemo.swf">metaballDemo</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>375</wp:post_id>
		<wp:post_date>2012-03-08 06:30:02</wp:post_date>
		<wp:post_date_gmt>2012-03-08 06:30:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>as3-metaball-%e5%85%83%e7%90%83</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>老板那些事(置顶)</title>
		<link>http://blog.as3er.com/?p=390</link>
		<pubDate>Fri, 09 Mar 2012 14:58:49 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=390</guid>
		<description></description>
		<content:encoded><![CDATA[突发奇想的要有这么一个分类，记录一下自己作为普通员工时YY自己将来有自己的公司，自己当老板时应该注意事项的若干条！哈～

(不定期更新)

1.千万不要觉得员工应该对公司抱有感激之情，应该对员工抱有感激之情。他们辛苦的劳动应该赢得尊重。就算员工伤害了公司也千万别做伤害员工感情的事情，否则会付出代价。

2.不要傻X一样天天跟员工空谈精神力量，没有用！你看到的和实际情况总是有偏差的，精神力量也得建立在一定的物质基础之上。

3.作为领袖，公司在低谷的时候才是你树立威信和权威力量的最好时机。

4.要时常反省是不是真的能听得进反对声，不要假装听的进，员工又不是傻X，愿意表达反对意见的员工才是公司需要的人。

5.不要什么事都要管，不要觉得什么事都没你不行，如果真的什么事都没你不行，只能说明你的HR和你自己招人的时候都在打酱油。

6.员工才是公司最大的财富，人心散了，公司也就垮了。

7.公司小的时候，谁行谁不行很容易知道，一旦公司大了，就没那么好分辨了，所以需要有些的制度来保证一些事情。

8.对于员工要有双善于发现的眼睛，别有事没事的挑员工的刺儿，没好处。

9.找员工谈话，要从实际出发，了解他自己的根本需求，别把公司利益这么大一帽子给他先扣上。

10.信任需要你先踏出第一步。

11.总有人当着你的面笑呵呵的附和，转脸就在心里骂你傻B。所以真心不要听那些附和，赞美你的话。多听听愿意和你对着干的人的意见。

12.当人事费了很大力气招进一名新员工，然而人家上了几天班就走了。这个时候要想想是不是当初跟人聊的时候是不是隐瞒了本不该隐瞒的事情，再或者人家满怀热情的到公司准备好好工作，却被公司凉在一边，不管不问。

13.新员工第一天上班，首先应该有相关人员进行接待，并详细交代公司规章制度。再着就算没办法带着到公司各个角落转一下介绍新人，但最起码要有欢迎邮件之类...

14.感同身受这事，根本就不会存在。

15.靠天靠地靠自己，寄希望与任何人都是徒劳。

16.不要认为被利用是件令人气愤的事，总比没有利用价值的好。再说明白点，朋友之间也是互相利用的关系。只是换了说法叫互相帮助。

17.想蜕变就不要怕痛。

18.在我们的一生中，所遇到的大多数人都只会是匆匆过客。如果足够幸运，在这些人中交到了朋友，那么请珍惜。

19.往往认为别人是2货的人，多数是自己2过头了的。

20.工作效率从来不是压迫所能提高的，应来自个人对团队和工作的认同感，责任感。

21.朋友会让你觉得世界美好，所以请珍惜身边的每一位值得珍惜的朋友。

22.花大价钱聘请看起来牛逼的人，不如花时间与金钱培养已有的有潜力的员工。算起来后者风险更小，收获更大。
(未完...)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date>2012-03-09 22:58:49</wp:post_date>
		<wp:post_date_gmt>2012-03-09 14:58:49</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%80%81%e6%9d%bf%e9%82%a3%e4%ba%9b%e4%ba%8b%e7%bd%ae%e9%a1%b6</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[标准]]></category>
		<category domain="category" nicename="%e8%80%81%e6%9d%bf%e9%82%a3%e4%ba%9b%e4%ba%8b"><![CDATA[老板那些事]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>126</wp:comment_id>
			<wp:comment_author><![CDATA[Roland]]></wp:comment_author>
			<wp:comment_author_email>281442489@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.keydancer.com</wp:comment_author_url>
			<wp:comment_author_IP>180.168.174.218</wp:comment_author_IP>
			<wp:comment_date>2012-03-14 13:02:27</wp:comment_date>
			<wp:comment_date_gmt>2012-03-14 05:02:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈，有备无患啊，你有朝一日一定会用到滴～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>127</wp:comment_id>
			<wp:comment_author><![CDATA[vanCopper]]></wp:comment_author>
			<wp:comment_author_email>vanCopperm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.199.209.1</wp:comment_author_IP>
			<wp:comment_date>2012-03-14 13:53:36</wp:comment_date>
			<wp:comment_date_gmt>2012-03-14 05:53:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>126</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>128</wp:comment_id>
			<wp:comment_author><![CDATA[DOM]]></wp:comment_author>
			<wp:comment_author_email>dom@domlib.com</wp:comment_author_email>
			<wp:comment_author_url>http://domlib.com</wp:comment_author_url>
			<wp:comment_author_IP>180.168.174.218</wp:comment_author_IP>
			<wp:comment_date>2012-03-25 10:18:00</wp:comment_date>
			<wp:comment_date_gmt>2012-03-25 02:18:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[说的很有道理，都是切身体会啊。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在读《黄瓜的黄，西瓜的西》</title>
		<link>http://blog.as3er.com/?p=396</link>
		<pubDate>Fri, 09 Mar 2012 15:08:52 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=396</guid>
		<description></description>
		<content:encoded><![CDATA[一个在美国说相声的化学博士～

“有时在傍晚时分，我们能听见房梁上有耗子乱窜，我和弟弟就学猫叫，房梁上的动静就没了” 我小时候也经常干这事，后来总觉得这招不好使了，不知道是不是耗子们，知道家里的这只猫只会叫，不会抓它们。它们智商很高的！哈哈。。。<br />

毛主席说过，任何人，错误总是难免的。我回家以后就问我爸这句话对吗，我爸说对，停了一会他又开始矫正自己：“除了毛主席以外。”我接着问，“也就是说除了毛主席以外，其他人都会犯错误对吗？”他说是，接着又说：“周总理和朱德也不会，其他人都会”]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>396</wp:post_id>
		<wp:post_date>2012-03-09 23:08:52</wp:post_date>
		<wp:post_date_gmt>2012-03-09 15:08:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb%e3%80%8a%e9%bb%84%e7%93%9c%e7%9a%84%e9%bb%84%ef%bc%8c%e8%a5%bf%e7%93%9c%e7%9a%84%e8%a5%bf%e3%80%8b</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[标准]]></category>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FlashBuilder4.6 免注册</title>
		<link>http://blog.as3er.com/?p=400</link>
		<pubDate>Sat, 10 Mar 2012 08:47:47 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=400</guid>
		<description></description>
		<content:encoded><![CDATA[对于有版权意识的开发者来说还真不适合用"破解"之类的字眼，所以就“免注册”吧，浪费了接近两个小时在google上都没有整好，开始佩服自己的耐性了。
这个方法之前用在4.5上，现在4.6依然适用。

免注册后就成这样了：

<img src="http://www.as3er.com/blog/wp-content/uploads/2012/03/屏幕快照-2012-03-10-下午4.17.55.png" alt="屏幕快照 2012 03 10 下午4 17 55" title="屏幕快照 2012-03-10 下午4.17.55.png" border="0" width="236" height="114" />

第一步：进入FlashBuilder 4.6 安装目录 进入 eclipse-->plugins-->com.adobe.flexbuilder.flex_4.6.0.328916 复制config.xml 命名为config_builder.xml

第二步：eclipse-->plugins-->com.adobe.flexbuilder.project_4.6.0.328916-->META-INF
修改MANIFEST.MF  Bundle-Version: 0.0.0

重启FlashBuilder4.6 搞定~~]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>400</wp:post_id>
		<wp:post_date>2012-03-10 16:47:47</wp:post_date>
		<wp:post_date_gmt>2012-03-10 08:47:47</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flashbuilder4-6-%e5%85%8d%e6%b3%a8%e5%86%8c</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="flashbuilder4-6"><![CDATA[FlashBuilder4.6]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>129</wp:comment_id>
			<wp:comment_author><![CDATA[极元素]]></wp:comment_author>
			<wp:comment_author_email>andy.jcg@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.andyji.com</wp:comment_author_url>
			<wp:comment_author_IP>180.168.174.218</wp:comment_author_IP>
			<wp:comment_date>2012-03-16 14:08:32</wp:comment_date>
			<wp:comment_date_gmt>2012-03-16 06:08:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[忒有用了！！！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>wordPress_XMLRPC 发布协议</title>
		<link>http://blog.as3er.com/?p=407</link>
		<pubDate>Mon, 12 Mar 2012 06:01:46 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=407</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://zh.wikipedia.org/wiki/XML-RPC">XMLRPC</a>:

<a rel="shadowbox" href="http://www.as3er.com/blog/wp-content/uploads/2012/03/xmlRPC.jpg"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="xmlRPC" src="http://www.as3er.com/blog/wp-content/uploads/2012/03/xmlRPC_thumb.jpg" border="0" alt="xmlRPC" width="132" height="140" /></a>

XML-RPC的全称是XML Remote Procedure Call，即XML远程方法调用。它是一套允许运行在不同操作系统、不同环境的程序实现基于Internet过程调用的规范和一系列的实现。这种远程过程调用使用http作为传输协议，XML作为传送信息的编码格式。Xml-Rpc的定义尽可能的保持了简单，但同时能够传送、处理、返回复杂的数据结构。

wordPress本身就支持 XMLRPC发布协议 最近在手机上，电脑上都安装了blog的离线编辑器。windows下面用的windows live writer  MAC下面用的 marsedit 手机上用的wordpress的官方应用 wordpress。手机上面真心不太好用，想自己写一个这样的应用玩玩，先用AS来实现一下，完事在有OC移植一下哈～～

<a href="http://codex.wordpress.org/XML-RPC_wp">WordPress_XMLRPC_API</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>407</wp:post_id>
		<wp:post_date>2012-03-12 14:01:46</wp:post_date>
		<wp:post_date_gmt>2012-03-12 06:01:46</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>wrodpress_xmlrpc-%e5%8f%91%e5%b8%83%e5%8d%8f%e8%ae%ae</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="xmlrpc"><![CDATA[XMLRPC]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>BlogEdit开发日志_01</title>
		<link>http://blog.as3er.com/?p=417</link>
		<pubDate>Tue, 13 Mar 2012 13:44:19 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=417</guid>
		<description></description>
		<content:encoded><![CDATA[把写好的XMlRPC库用了进来，给应用找了icon，并读取博客的分类列表…下一步先设计一下应用界面，应用组件用什么昵？
<br /><br /><a href="http://www.as3er.com/blog/wp-content/uploads/2012/03/20120313-214126.jpg"><img src="http://www.as3er.com/blog/wp-content/uploads/2012/03/20120313-214126.jpg" alt="20120313-214126.jpg" class="alignnone size-full" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date>2012-03-13 21:44:19</wp:post_date>
		<wp:post_date_gmt>2012-03-13 13:44:19</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>blogedit%e5%bc%80%e5%8f%91%e6%97%a5%e5%bf%97_01</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="blogedit"><![CDATA[BlogEdit]]></category>
		<category domain="category" nicename="ios"><![CDATA[IOS]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>BlogEdit开发日志_02</title>
		<link>http://blog.as3er.com/?p=419</link>
		<pubDate>Wed, 14 Mar 2012 02:27:52 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=419</guid>
		<description></description>
		<content:encoded><![CDATA[这个界面如何？

<a href="http://www.as3er.com/blog/wp-content/uploads/2012/03/20120314-102743.jpg"><img class="alignnone size-full" src="http://www.as3er.com/blog/wp-content/uploads/2012/03/20120314-102743.jpg" alt="20120314-102743.jpg" width="288" height="432" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2012-03-14 10:27:52</wp:post_date>
		<wp:post_date_gmt>2012-03-14 02:27:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>blogedit%e5%bc%80%e5%8f%91%e6%97%a5%e5%bf%97_02</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="blogedit"><![CDATA[BlogEdit]]></category>
		<category domain="category" nicename="ios"><![CDATA[IOS]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_latitude</wp:meta_key>
			<wp:meta_value><![CDATA[31.309578]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_longitude</wp:meta_key>
			<wp:meta_value><![CDATA[121.508636]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>130</wp:comment_id>
			<wp:comment_author><![CDATA[Roland]]></wp:comment_author>
			<wp:comment_author_email>281442489@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.keydancer.com</wp:comment_author_url>
			<wp:comment_author_IP>180.168.174.218</wp:comment_author_IP>
			<wp:comment_date>2012-03-14 12:47:07</wp:comment_date>
			<wp:comment_date_gmt>2012-03-14 04:47:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[虽然看过了，还是要来踩下～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>BlogEdit开发日志_03</title>
		<link>http://blog.as3er.com/?p=427</link>
		<pubDate>Mon, 19 Mar 2012 15:01:36 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=427</guid>
		<description></description>
		<content:encoded><![CDATA[wp的xmlRpc服务还支持BloggerApi和metaWeblogApi，利用metaWeblog的API获取一下最近发布的文章列表，算是完成了一个小功能。最近貌似要忙起来了，不知道这个小东西还要多久才能写完，希望尽快能写完这个东西，还有很多其他的东西想搞。

<img src="http://www.as3er.com/blog/wp-content/uploads/2012/03/IMG_0282.jpg" alt="IMG 0282" title="IMG_0282.JPG" border="0" width="428" height="600" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>427</wp:post_id>
		<wp:post_date>2012-03-19 23:01:36</wp:post_date>
		<wp:post_date_gmt>2012-03-19 15:01:36</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>blogedit%e5%bc%80%e5%8f%91%e6%97%a5%e5%bf%97_03</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="blogedit"><![CDATA[BlogEdit]]></category>
		<category domain="category" nicename="ios"><![CDATA[IOS]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>手绘风格的原型设计工具</title>
		<link>http://blog.as3er.com/?p=432</link>
		<pubDate>Sun, 08 Apr 2012 14:44:39 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=432</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://www.as3er.com/blog/wp-content/uploads/2012/04/屏幕快照-2012-04-08-下午10.37.00.png" alt="屏幕快照 2012 04 08 下午10 37 00" title="屏幕快照 2012-04-08 下午10.37.00.png" border="0" width="600" height="374" />

喜欢这个手绘风格，很好用。

http://www.balsamiq.com/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>432</wp:post_id>
		<wp:post_date>2012-04-08 22:44:39</wp:post_date>
		<wp:post_date_gmt>2012-04-08 14:44:39</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%89%8b%e7%bb%98%e9%a3%8e%e6%a0%bc%e7%9a%84%e5%8e%9f%e5%9e%8b%e8%ae%be%e8%ae%a1%e5%b7%a5%e5%85%b7</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%9e%8b%e8%ae%be%e8%ae%a1"><![CDATA[原型设计]]></category>
		<category domain="category" nicename="%e5%b7%a5%e4%bd%9c%e6%97%a5%e5%bf%97"><![CDATA[工作日志]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2e1f7bed3792effb2b1ebf0700199bff</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读</title>
		<link>http://blog.as3er.com/?p=434</link>
		<pubDate>Mon, 09 Apr 2012 16:02:57 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=434</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>434</wp:post_id>
		<wp:post_date>2012-04-10 00:02:57</wp:post_date>
		<wp:post_date_gmt>2012-04-09 16:02:57</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_latitude</wp:meta_key>
			<wp:meta_value><![CDATA[31.234891]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_longitude</wp:meta_key>
			<wp:meta_value><![CDATA[121.407361]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AGAL:Adobe Graphics Assembly Language 学习笔记_01</title>
		<link>http://blog.as3er.com/?p=435</link>
		<pubDate>Wed, 11 Apr 2012 05:53:10 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=435</guid>
		<description></description>
		<content:encoded><![CDATA[<p>阿朱童鞋分享的好东西，存档一下</p> <p>AGAL Opcode 指令  <p>名称<br>描述<br>说明  <p>mov<br>移动<br>移动 source1 数据到 destination  <p>add<br>相加<br>destination = source1 + source2  <p>sub<br>相减<br>destination = source1 - source2  <p>mul<br>相乘<br>destination = source1 * source2  <p>div<br>相除<br>destination = source1 / source2  <p>rcp<br>倒数<br>destination = 1 / source1  <p>min<br>最小值<br>destination = minimum(source1 , source2)  <p>max<br>最大值<br>destination = minimum(source1 , source2)  <p>frc<br>取小数<br>destination = source1 - (float) floor(source1)  <p>sqt<br>平方根<br>destination = sqrt(source1)  <p>rsq<br>平方根倒数<br>destination = 1 / sqrt(source1)  <p>pow<br>指数<br>destination = pow(source1 , source2)  <p>log<br>2 为底的对数<br>destination = log_2(source1)  <p>exp<br>2 为底的指数<br>destination = 2^source1  <p>nrm<br>标准化<br>destination = normalize(source1)  <p>sin<br>正弦<br>destination = sin(source1)  <p>cos<br>余弦<br>destination = cos(source1)  <p>abs<br>绝对值<br>destination = abs(source1)  <p>neg<br>负值<br>destination = -source1  <p>sat<br>饱和值<br>destination = maximum(minimum(source1 , 1) , 0)  <p>kil<br>抛弃(只限片断着色器)<br>假如单一分量小于 0 便放弃绘图  <p>tex<br>材质取样(只限片断着色器)<br>依据 source1 坐标从 source2 材质取样  <p>sge<br>分量运算(set-if-greater-equal)<br>destination = source1 &gt;= source2 ? 1 : 0  <p>slt<br>分量运算(set-if-less-than)<br>destination = source1 &lt; source2 ? 1 : 0  <p>crs<br>向量外积(cross product)<br>destination.x = source1.y * source2.z - source1.z * source2.y<br>destination.y = source1.z * source2.x - source1.x * source2.z<br>destination.z = source1.x * source2.y - source1.y * source2.x  <p>dp3<br>向量内积(dot product)<br>destination = source1.x * source2.x + source1.y * source2.y + source1.z * source2.z  <p>dp4<br>向量内积(dot product)<br>destination = source1.x * source2.x + source1.y * source2.y + source1.z * source2.z + source1.w * source2.w  <p>m33<br>3x3 矩阵相乘<br>destination.x = (source1.x * source2[0].x) + (source1.y * source2[0].y) + (source1.z * source2[0].z)<br>destination.y = (source1.x * source2[1].x) + (source1.y * source2[1].y) + (source1.z * source2[1].z)<br>destination.z = (source1.x * source2[2].x) + (source1.y * source2[2].y) + (source1.z * source2[2].z)  <p>m44<br>4x4 矩阵相乘<br>destination.x = (source1.x * source2[0].x) + (source1.y * source2[0].y) + (source1.z * source2[0].z) + (source1.w * source2[0].w)<br>destination.y = (source1.x * source2[1].x) + (source1.y * source2[1].y) + (source1.z * source2[1].z) + (source1.w * source2[1].w)<br>destination.z = (source1.x * source2[2].x) + (source1.y * source2[2].y) + (source1.z * source2[2].z) + (source1.w * source2[2].w)<br>destination.w = (source1.x * source2[3].x) + (source1.y * source2[3].y) + (source1.z * source2[3].z) + (source1.w * source2[3].w)  <p>m34<br>3x4 矩阵相乘<br>destination.x = (source1.x * source2[0].x) + (source1.y * source2[0].y) + (source1.z * source2[0].z) + (source1.w * source2[0].w)<br>destination.y = (source1.x * source2[1].x) + (source1.y * source2[1].y) + (source1.z * source2[1].z) + (source1.w * source2[1].w)<br>destination.z = (source1.x * source2[2].x) + (source1.y * source2[2].y) + (source1.z * source2[2].z) + (source1.w * source2[2].w)  <p>ifz, inz, ife, ine, ifg, ifl, ieg, iel, els, eif, rep, erp, brk, sgn<br>从 AGALMiniAssembler 里面看到还有这些 opcode<br>ifz, inz, ife, ine, ifg, ifl, ieg, iel, els, eif, rep, erp, brk, sgn<br>不过实际测试发现在目前这版 Flash Player 尚未支持  <p>AGAL Registers 缓存器  <p>缓存器<br>定义<br>权限  <p>顶点着色器<br>片断着色器<br>AS3编译器  <p>vc0 - vc127<br>顶点矩阵常量<br>读<br>写  <p>va0 - va7<br>顶点缓冲属性<br>读<br>写  <p>vt0 - vt7<br>顶点临时变量<br>读/写  <p>op<br>顶点着色器最终输出的对象<br>写  <p>v0 - v7<br>变量<br>写<br>读  <p>fc0 - fc27<br>片断常量<br>读<br>写  <p>ft0 - ft7<br>片断临时变量<br>读/写  <p>fs0 - fs7<br>片断纹理采样器<br>读/写  <p>oc<br>片断着色器最终输出的对象<br>写]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>435</wp:post_id>
		<wp:post_date>2012-04-11 13:53:10</wp:post_date>
		<wp:post_date_gmt>2012-04-11 05:53:10</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>agaladobe-graphics-assembly-language-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0_01</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>131</wp:comment_id>
			<wp:comment_author><![CDATA[Roland]]></wp:comment_author>
			<wp:comment_author_email>281442489@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.keydancer.com</wp:comment_author_url>
			<wp:comment_author_IP>60.199.209.1</wp:comment_author_IP>
			<wp:comment_date>2012-04-17 22:52:02</wp:comment_date>
			<wp:comment_date_gmt>2012-04-17 14:52:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[顶～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>三思方举步，百折不回头</title>
		<link>http://blog.as3er.com/?p=437</link>
		<pubDate>Wed, 18 Apr 2012 15:04:04 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=437</guid>
		<description></description>
		<content:encoded><![CDATA[今天下午公司举行了2012年第一季度的季度大会，会后同事说越是人多的会越没用。她当玩笑话讲，我瞬间觉得她真的看到了事情的本质。从公司第一次季度大会开始到现在正好一个轮回了，也就是我又在五分钟码了一年了。

回头想想这过去的一年，感觉真的像是虚度了，但又好像坚持了自己的一些想法，做了一些自己想做的事情。最近越来越浮躁，想一心磨剑却静不下心来了。或许现在最需要的就是坚信自己的选择是对的，为了走的更远，此时的沉默是值得的。

眼睛看到不一定是真的，那些看起来重要的对己不一定也重要。选择自己的路，走好每一步才重要。很久之前就用一句话来激励自己，再拿来用一下。

“三思方举步，百折不回头”]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>437</wp:post_id>
		<wp:post_date>2012-04-18 23:04:04</wp:post_date>
		<wp:post_date_gmt>2012-04-18 15:04:04</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%b8%89%e6%80%9d%e6%96%b9%e4%b8%be%e6%ad%a5%ef%bc%8c%e7%99%be%e6%8a%98%e4%b8%8d%e5%9b%9e%e5%a4%b4</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>132</wp:comment_id>
			<wp:comment_author><![CDATA[路人甲]]></wp:comment_author>
			<wp:comment_author_email>zdmml@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.93.183.54</wp:comment_author_IP>
			<wp:comment_date>2012-05-26 22:47:26</wp:comment_date>
			<wp:comment_date_gmt>2012-05-26 14:47:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[审核，审核，审核]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>133</wp:comment_id>
			<wp:comment_author><![CDATA[vanCopper]]></wp:comment_author>
			<wp:comment_author_email>vanCopperm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>101.68.91.5</wp:comment_author_IP>
			<wp:comment_date>2012-05-29 23:43:33</wp:comment_date>
			<wp:comment_date_gmt>2012-05-29 15:43:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你想干什么？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>132</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>代码实现 AIR 应用程序自动重启</title>
		<link>http://blog.as3er.com/?p=439</link>
		<pubDate>Thu, 19 Apr 2012 05:51:34 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=439</guid>
		<description></description>
		<content:encoded><![CDATA[给工具加了一个重启功能，在Flex 4.6中可用以下这个办法

[actionscript3]

private function reboot():void

{
     var app:WindowedApplication = WindowedApplication(FlexGlobals.topLeveApplication);

     var pmg: ProductManager = new ProductManager(&quot;airappinstaller&quot;);

     pmg.launch(''-launch &quot; + app.nativeApplication.applicationId + &quot; &quot; + app.nativeApplication.publisherID);

     app.close()
}

[/actionscript3]

还需要把 app.xml中的 allowBrowserInvocation属性设置为true

&lt;allowBrowserInvocation&gt;true&lt;/allowBrowserInvocation&gt;

需要注意的是 ProductManager类 是在包 com.adobe.utils里 但是在flashbuilder里无法代码提示，一开始还以为没有这个类，所以用的时候要手动导入使用就好了 还一个地方 "-launch "一定要有空格 不然是没有办法运行这条命令的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>439</wp:post_id>
		<wp:post_date>2012-04-19 13:51:34</wp:post_date>
		<wp:post_date_gmt>2012-04-19 05:51:34</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%bb%a3%e7%a0%81%e5%ae%9e%e7%8e%b0-air-%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f%e8%87%aa%e5%8a%a8%e9%87%8d%e5%90%af</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="air"><![CDATA[AIR]]></category>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>134</wp:comment_id>
			<wp:comment_author><![CDATA[Roland]]></wp:comment_author>
			<wp:comment_author_email>281442489@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.keydancer.com</wp:comment_author_url>
			<wp:comment_author_IP>112.64.88.104</wp:comment_author_IP>
			<wp:comment_date>2012-04-26 23:33:51</wp:comment_date>
			<wp:comment_date_gmt>2012-04-26 15:33:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[今天正好想着怎么实现来着，居然正好这里就有，哈哈，收藏收藏～ :lol:]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在读《寂寞带我去散步》</title>
		<link>http://blog.as3er.com/?p=442</link>
		<pubDate>Sun, 22 Apr 2012 03:52:09 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=442</guid>
		<description></description>
		<content:encoded><![CDATA[我想到那个下午。。。我们跟了船去你那儿附近潜水，从水里上来之后，就聊着这岛上人们的来处，鱼头这家伙支支吾吾的。。。搞急了盯着船头那片沙滩说：“我是海滩的孩子。。。”
我跟他说：“这翻成英语很难听哦。。。”
（老顽童还很搞笑）

刚认识她时，她提议去吃冰激凌，他们坐在插满了野姜花的窗沿，他点了根烟，就坐着看她满足的吃着。他并不知道那是爱，如果看着她快乐的吃着冰激凌就是爱，那爱当然有许多面貌，也就没有深浅的问题了。

“它有女朋友吧？”（它是指一个名叫皮皮的狗）
“有啊！但我们皮皮才不会把这种事放在心上，对不对？”
是吧？也只有人才会把情欲的问题弄的痛彻心扉，却又无力解决
而皮皮的下午是。。。
追赶飞回本岛的最后一班飞机。
惊吓了马樱丹花上面采着蜜的小纹班蝶。
皮皮的下午是。。。
陪着一个急躁的旅人，在斜阳的雨丝里静坐。
皮皮的下午是。。。
挤在两个湿淋淋的男人中间，帮他们取暖。
皮皮的下午，有一轮好看的夕阳。
（对于身边的美，我们总是不在意）

我跟你说一件事，你可别说我疯了：我梦见我拿热水去淋一只猫，后来又听说梦是反着的，所以现在我老觉得会有猫要拿热水来淋我。

北方的春天里，还有点凉。我拢了拢她的衣服，怕她冷。她紧紧的挽着我的手，我决定了要保护她一辈子…逗她笑，每天等她醒来，轻轻的对她说：嗨…]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>442</wp:post_id>
		<wp:post_date>2012-04-22 11:52:09</wp:post_date>
		<wp:post_date_gmt>2012-04-22 03:52:09</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb%e3%80%8a%e5%af%82%e5%af%9e%e5%b8%a6%e6%88%91%e5%8e%bb%e6%95%a3%e6%ad%a5%e3%80%8b</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[标准]]></category>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读</title>
		<link>http://blog.as3er.com/?p=451</link>
		<pubDate>Sun, 22 Apr 2012 14:55:15 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=451</guid>
		<description></description>
		<content:encoded><![CDATA[书看到1/3了，大概猜到凶手是谁了。我猜原和那女孩是一对，因为男孩的爸爸侮辱了女孩，所以男孩杀了自己的父亲，然后女孩的母亲也是被男孩杀的，不过女孩应该比男孩狠的多。

读完了，看到最后才想起来看过电影版的，这真是个变态的故事。电影也叫 <a href="http://movie.douban.com/subject/3822842/">《白夜行》</a> 是孙艺珍演的。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>451</wp:post_id>
		<wp:post_date>2012-04-22 22:55:15</wp:post_date>
		<wp:post_date_gmt>2012-04-22 14:55:15</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb-2</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_latitude</wp:meta_key>
			<wp:meta_value><![CDATA[31.231350]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_longitude</wp:meta_key>
			<wp:meta_value><![CDATA[121.407529]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在FlashBuilder中搭建HaXe开发环境</title>
		<link>http://blog.as3er.com/?p=459</link>
		<pubDate>Sat, 28 Apr 2012 08:08:04 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=459</guid>
		<description></description>
		<content:encoded><![CDATA[1.<a href="http://haxe.org/download" target="_blank">http://haxe.org/download</a> 到Haxe官网的Manual Install下载对应的Haxe版本并安装 在命令行中用 haxe来验证你是否完成了安装

2.<a href="http://www.eclihx.org/tutorials/quickstarttutorial" target="_blank">ecihx</a>在FlashBuilder中配置ecihx 网站有详细的配置教程

3.安装好插件，重启FlashBuilder，搭建完成，新建Haxe项目

<a href="http://www.as3er.com/blog/wp-content/uploads/2012/04/haxe.png"><img class="aligncenter size-medium wp-image-460" title="haxe" src="http://www.as3er.com/blog/wp-content/uploads/2012/04/haxe-300x79.png" alt="" width="300" height="79" /></a>

4.FlashBuilder-&gt;窗口-&gt;首选项-&gt;haXe(EclihX)-&gt;Compiler 配置haxe.exe路径

5.在项目中新建HaxeTest.hx文件

[actionscript3]

import flash.display.Sprite;

import flash.events.Event;

import flash.events.MouseEvent;

import flash.Lib;import flash.display.Bitmap;

import flash.display.BitmapData;
class HaxeTest extends Sprite

{

static function main()

{

Lib.current.addChild(new HaxeTest());

}

public function new()

{

super();

addEventListener(Event.ADDED_TO_STAGE, init);

}
private function init(e:Event):Void

{

var mc:flash.display.Sprite = flash.Lib.current;

mc.graphics.beginFill(0xFF0000);

mc.graphics.drawRect(0,0,50,50);

mc.graphics.endFill();

var bitmapData:BitmapData = new BitmapData(50,50,true,0);

bitmapData.draw(mc);

var bitmap:Bitmap = new Bitmap(bitmapData);

bitmap.x = 200;

addChild(bitmap);

}
}

[/actionscript3]

5.配置 build.hxml

[actionscript3]

-cp src

-main HaxeTest

-swf-version 11

-swf outhaXeTest.swf

[/actionscript3]

6.将项目运行配置为haxe 运行后 可以在out文件夹下 找到编译后的swf，现在还不支持debug。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>459</wp:post_id>
		<wp:post_date>2012-04-28 16:08:04</wp:post_date>
		<wp:post_date_gmt>2012-04-28 08:08:04</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8flashbuilder%e4%b8%ad%e6%90%ad%e5%bb%bahaxe%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="haxe"><![CDATA[Haxe]]></category>
		<category domain="category" nicename="%e5%b7%a5%e4%bd%9c%e6%97%a5%e5%bf%97"><![CDATA[工作日志]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FlashPlayer 11.3 全屏键盘输入</title>
		<link>http://blog.as3er.com/?p=463</link>
		<pubDate>Mon, 30 Apr 2012 03:48:58 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=463</guid>
		<description></description>
		<content:encoded><![CDATA[FlashPlayer 11.3中终于支持了全屏下键盘输入，终于不用再被不明真相的非开发人员，在全屏无法输入的时候来侮辱我们说这是bug了。

出于什么样的目的，Adobe在一开始的时候不支持全屏输入，鼠标锁定，鼠标右键，还有鼠标中键。。。。

code:
[actionscript3]
stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;
[/actionscript3]

在潜入swf的html中开启允许全屏输入模式
[actionscript3]
&lt;param name=&quot;allowFullScreenInteractive&quot; value=&quot;true&quot; /&gt;
[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>463</wp:post_id>
		<wp:post_date>2012-04-30 11:48:58</wp:post_date>
		<wp:post_date_gmt>2012-04-30 03:48:58</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flashplayer-11-3-%e5%85%a8%e5%b1%8f%e9%94%ae%e7%9b%98%e8%be%93%e5%85%a5</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e5%85%a8%e5%b1%8f%e9%94%ae%e7%9b%98%e8%be%93%e5%85%a5"><![CDATA[全屏键盘输入]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于加班</title>
		<link>http://blog.as3er.com/?p=64</link>
		<pubDate>Sun, 10 Mar 2013 09:23:28 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[连续加班很多天了，也很多天没更新BLOG....看看现在已经凌晨 2：27了，太累了，偷懒写篇吧！
说说加班吧，这个项目终于赶完了，]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2013-03-10 17:23:28</wp:post_date>
		<wp:post_date_gmt>2013-03-10 09:23:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8e%e5%8a%a0%e7%8f%ad</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>又一年</title>
		<link>http://blog.as3er.com/?p=292</link>
		<pubDate>Sun, 10 Mar 2013 09:24:00 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=292</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date>2013-03-10 17:24:00</wp:post_date>
		<wp:post_date_gmt>2013-03-10 09:24:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%88%e4%b8%80%e5%b9%b4</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>链接收集</title>
		<link>http://blog.as3er.com/?p=324</link>
		<pubDate>Sun, 10 Mar 2013 09:24:00 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=324</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.cnblogs.com/vilyLei/articles/1587006.html  三次贝塞尔曲线]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>324</wp:post_id>
		<wp:post_date>2013-03-10 17:24:00</wp:post_date>
		<wp:post_date_gmt>2013-03-10 09:24:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%93%be%e6%8e%a5%e6%94%b6%e9%9b%86</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>利用 Particle Designer编辑 Flash 2D粒子</title>
		<link>http://blog.as3er.com/?p=465</link>
		<pubDate>Tue, 01 May 2012 08:57:52 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=465</guid>
		<description></description>
		<content:encoded><![CDATA[Starling框架有一个扩展包可以利用ParticleDesigner导出的*.pex文件来渲染粒子，整个Starling的渲染都是在Stage3D上进行的，我把它移植到2D上了，利用位图来渲染*.pex文件，展现粒子效果。

ParticleDesigner是支持Cocos2D上的一个粒子编辑器，它可以直接导出plist文件给Cocos2D来生成粒子动画。

<a href="http://www.as3er.com/blog/wp-content/uploads/2012/05/屏幕快照-2012-05-01-下午4.29.09.png"><img class="aligncenter size-medium wp-image-466" title="ParticleDesigner" src="http://www.as3er.com/blog/wp-content/uploads/2012/05/屏幕快照-2012-05-01-下午4.29.09-300x249.png" alt="" width="300" height="249" /></a>

该软件只有mac版并且免费版只能预览粒子效果，无法保存。完整版$7.99，不算贵。不过研究一下*.pex文件就大概知道这工具都做了什么事了，可以自己写一个工具来生成*.pex(就是一个xml文件)。像这位博主仿照这个编辑器用Flash做的<a href="http://blog.onebyonedesign.com/flash/particle-editor-for-starling-framework/" target="_blank">编辑器</a>。

用位图来渲染还是有些性能问题，最高只能到30帧，用Starling同一个粒子效果可达到60帧。

demo：
<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="500" height="375" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.as3er.com/blog/wp-content/uploads/2012/05/particle.swf" /><embed type="application/x-shockwave-flash" width="500" height="375" src="http://www.as3er.com/blog/wp-content/uploads/2012/05/particle.swf"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>465</wp:post_id>
		<wp:post_date>2012-05-01 16:57:52</wp:post_date>
		<wp:post_date_gmt>2012-05-01 08:57:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%88%a9%e7%94%a8-particle-designer%e7%bc%96%e8%be%91-flash-2d%e7%b2%92%e5%ad%90</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="starling"><![CDATA[Starling]]></category>
		<category domain="post_tag" nicename="%e7%b2%92%e5%ad%90"><![CDATA[粒子]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读《黑猩猩的政治--猿类社会中的权利与性》</title>
		<link>http://blog.as3er.com/?p=483</link>
		<pubDate>Sun, 06 May 2012 11:13:53 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=483</guid>
		<description></description>
		<content:encoded><![CDATA[权利欲望是人类所普遍具有的。

黑猩猩们都有坦率的性格。他们的每一张脸都富有特征，你可以像区别不同的人类个体一样容易的区别不同的黑猩猩个体。他们的嗓音听起来也各不相同，因此，几年之后，我仅仅用耳朵就能把他们一个个的区别开来。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>483</wp:post_id>
		<wp:post_date>2012-05-06 19:13:53</wp:post_date>
		<wp:post_date_gmt>2012-05-06 11:13:53</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb%e3%80%8a%e9%bb%91%e7%8c%a9%e7%8c%a9%e7%9a%84%e6%94%bf%e6%b2%bb-%e7%8c%bf%e7%b1%bb%e7%a4%be%e4%bc%9a%e4%b8%ad%e7%9a%84%e6%9d%83%e5%88%a9%e4%b8%8e%e6%80%a7%e3%80%8b</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[标准]]></category>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>更新AdobeAIR3.3时安装出错:管理员可能不允许安装此软件</title>
		<link>http://blog.as3er.com/?p=487</link>
		<pubDate>Mon, 07 May 2012 10:16:51 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=487</guid>
		<description></description>
		<content:encoded><![CDATA[安装新版本AIR3.3时 总是会出错安装不上。手动卸载旧版本也不行，官网提供了解决方案：

<a href="http://helpx.adobe.com/air/kb/troubleshoot-air-installation-windows.html">官网解决方案</a>

1.下载 <a href="http://download.microsoft.com/download/e/9/d/e9d80355-7ab4-45b8-80e8-983a48d5e1bd/msicuu2.exe">卸载工具</a>
2.安装完成后 选择Adobe AIR 卸载
3.重新安装新版本的AIR3.3]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>487</wp:post_id>
		<wp:post_date>2012-05-07 18:16:51</wp:post_date>
		<wp:post_date_gmt>2012-05-07 10:16:51</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%9b%b4%e6%96%b0adobeair3-3%e6%97%b6%e5%ae%89%e8%a3%85%e5%87%ba%e9%94%99%e7%ae%a1%e7%90%86%e5%91%98%e5%8f%af%e8%83%bd%e4%b8%8d%e5%85%81%e8%ae%b8%e5%ae%89%e8%a3%85%e6%ad%a4%e8%bd%af%e4%bb%b6</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3D基础_01</title>
		<link>http://blog.as3er.com/?p=499</link>
		<pubDate>Fri, 01 Jun 2012 09:29:49 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=499</guid>
		<description></description>
		<content:encoded><![CDATA[<p><b>Mesh :</b>  <p>在3D游戏中一个模型通常被称作为一个Mesh.利用一些3D建模工具Maya,3D Studio Max,Blender可构建一个Mesh.Mesh定义了3D图形以及绘制每个3D图形所使用的颜色.游戏中的人物有可能是一个或者多个Mesh组成，一辆车，一个建筑，或者一棵树都是一个Mesh.一个游戏场景的组成有肯能由成千上百个Mesh组成  <p><a href="http://www.as3er.com/blog/wp-content/uploads/2012/06/clip_image002.jpg" rel="shadowbox"><img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image002" border="0" alt="clip_image002" src="http://www.as3er.com/blog/wp-content/uploads/2012/06/clip_image002_thumb.jpg" width="244" height="212"></a>  <p><b>Polygon:</b>  <p>Mesh的每一个面都是一个平面的几何图形.单个Mesh包含上百或者上千个Polygon.一个Polygon可以是一个简单的三角形也可以是一个正方形或者长方形.例如一个3D立方体，它有六个正方形的面，每一个面都是一个Polygon.  <p>任何一个Polygon都是三角形的集合.例如一个正方形是由两个等边三角形组成.所以显卡会把3D图形当做一个三角形集合来处理。通常，如果有人告诉你一个Mesh由多少个Polygon组成，那么我们可以理解为这个Mesh由多少个三角形组成。当一个显卡的生产厂商吹嘘自己的最新显卡时，通常会说它们的显卡每秒可以同时渲染多少个Polygon。  <p><b>Vertex</b>  <p>每个Polygon都是由三个或者多个“角”（是不是可以理解为点？）组成。例如一个正方形有四个角。每个角就称为一个Vertex。一个Vertex就是在3D中定义的一个点。一个3D立方体有六个面，八个角。每个角都是一个Vertex。  <p>每个Mesh都包含很多个Polygon，每个Polygon又是由三个或者多个Vertex定义而成，所以在游戏中如果想要Molehill处理一个图形，就是需要它处理一个Vertex数组。  <p><b>Texture</b>  <p>为了渲染出一个Mesh（除非你只是渲染一条简单的线条），你会使用到一个或者多个图片，那么用来渲染Mesh的图片就称为Texture（贴图）。Texture可以想象为一个Mesh表面平铺开来得到的一张图片。你需要用PhotoShop或者GIMP来制作一张这样的图片（jpg或者png）来作为Texture。Molehill可以利用这张图片来给你的Mesh的每个面，每个点渲染出颜色值。  <p><b>Shaders</b>  <p>Shaders定义了绘制的视觉风格，它表示如何绘制。一个Shader(着色器程序)可以用来呈现金属光泽，而另个一可以用来呈现爆炸。  <p>在Stage3D的api中，shaders被存储在 Program3D类中，如果想创建一个Program3D,必须创建 fragment program(片段着色器)和vertex program(顶点着色器)，这两个着色器就组成了一个着色器程序。  <p><a name="_GoBack"></a><b>Vertex program(</b><b>顶点着色器)</b>  <p>当你渲染Mesh时，Mesh上的每个Vertex(点)都会执行一次顶点着色器。  <p>顶点着色器会保存Mesh中每个Vertex的当前状态，以提供给片段着色器(fragment program)使用。  <p>一个Vertex program决定了每一个Vertex的位置，颜色，贴图坐标…所有计算好的数据最终上传给片段着色器用来渲染。  <p><a href="http://www.as3er.com/blog/wp-content/uploads/2012/06/clip_image003.png" rel="shadowbox"><img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image003" border="0" alt="clip_image003" src="http://www.as3er.com/blog/wp-content/uploads/2012/06/clip_image003_thumb.png" width="244" height="66"></a>  <p>通过顶点着色器可以改变顶点的一些属性。在代码中你可以在每一帧都发送数据给顶点着色器来改变顶点的位置等。例如，如果你的顶点着色器控制着游戏中人物的头部模型，你可以在每帧发送一个0-360的角度值给着色器来决定人物的脸是朝哪个方向的。  <p>每个Mesh的渲染都需要一个顶点着色器，不管你的Mesh是简单的还是复杂的。  <p>Fragment program(片段着色器)  <p>片段着色器定义了如何渲染一个特定的Mesh。片段着色器都是用来描述和定义如何处理表面/材质。不同的材质需要不同的处理方式，所以需要编写不同的代码来实现。  <p><a href="http://www.as3er.com/blog/wp-content/uploads/2012/06/clip_image004.png" rel="shadowbox"><img style="background-image: none; border-right-width: 0px; margin: 10px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image004" border="0" alt="clip_image004" src="http://www.as3er.com/blog/wp-content/uploads/2012/06/clip_image004_thumb.png" width="244" height="84"></a>  <p>利用片段着色器你可以给材质动态的添加特殊效果，比如添加光照，阴影或者实时动画。片段着色器可以让物件淡出，或者拥有不同色调，并会告诉你的显卡如何渲染每个Mesh。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>499</wp:post_id>
		<wp:post_date>2012-06-01 17:29:49</wp:post_date>
		<wp:post_date_gmt>2012-06-01 09:29:49</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>3d%e5%9f%ba%e7%a1%80_01</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3D基础_02</title>
		<link>http://blog.as3er.com/?p=503</link>
		<pubDate>Sun, 03 Jun 2012 04:56:47 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=503</guid>
		<description></description>
		<content:encoded><![CDATA[Vectors
Vector3D用来描述一个对象在3D中的x,y,z位置信息。
每个对象都有唯一的坐标值（可以是正数，可以是负数，也可以是小数），并且坐标值是距（0，0，0）点的距离值。在Flash的2D中，（0，0）点表示舞台的左上角，Vector3D(0,0,0)表示“宇宙的中心”或者3D世界的中心。（0，0，0）即原点。
例如，你可以用Vector3D来定义Mesh中的每一个vertex，在游戏中你也可以用Vector3D来确定子弹的位置。
<img src="http://www.as3er.com/blog/wp-content/uploads/2012/06/NewImage.png" alt="NewImage" title="NewImage.png" border="0" width="538" height="143" />
 
如图，x轴代表从左到右运动，y轴代表从上到下，z轴代表从里到外。在正常的3D场景中，当对象的z轴增加时，对象会变小，因为对象远离了场景。
Vectors还包括第四个属性，w，但是非常少用到这个属性。它很方便的储存旋转值。
想象一下，如果想在一个3D场景中显示一个树的模型，在以前的2D游戏中，我们需要一个特殊的类来表示3D物件在2D场景中的x，y坐标值。在Molehill中，我们用Vector3D来处理这些。
例如：
[actionscript3]
import flash.geom.Vector3D;
var putTheTreeHere:Vector3D = new Vector3D(0,0,0);
var locationOfTreasure:Vector3D = new Vector3D(1000,0,-15000);
var aNormalPointingUp:Vector3D = new Vector3D(0,1,0);
[/actionscript3]
Matrices
有时我们需要对一个对象同时进行旋转，缩放操作。在AS3中可以通过Matrix3D类来实现。Matrix3D是一个4*4的矩阵。该矩阵描述对象的位置，角度和缩放。
你不需要知道Matrix是如何运算的，只要理解掌握如何使用它。Matrix有很多内建的数学运算方法。例如，改变缩放，旋转，位置等。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2012-06-03 12:56:47</wp:post_date>
		<wp:post_date_gmt>2012-06-03 04:56:47</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>3d%e5%9f%ba%e7%a1%80_02</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d-game-programming"><![CDATA[3D Game Programming]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读</title>
		<link>http://blog.as3er.com/?p=506</link>
		<pubDate>Mon, 04 Jun 2012 16:09:25 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=506</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.as3er.com/blog/wp-content/uploads/2012/06/20120605-000837.jpg"><img src="http://www.as3er.com/blog/wp-content/uploads/2012/06/20120605-000837.jpg" alt="20120605-000837.jpg" class="alignnone size-full" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>506</wp:post_id>
		<wp:post_date>2012-06-05 00:09:25</wp:post_date>
		<wp:post_date_gmt>2012-06-04 16:09:25</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb-3</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读《卡廷惨案真相》</title>
		<link>http://blog.as3er.com/?p=508</link>
		<pubDate>Tue, 24 Jul 2012 03:32:33 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=508</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>508</wp:post_id>
		<wp:post_date>2012-07-24 11:32:33</wp:post_date>
		<wp:post_date_gmt>2012-07-24 03:32:33</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb%e3%80%8a%e5%8d%a1%e5%bb%b7%e6%83%a8%e6%a1%88%e7%9c%9f%e6%83%b3%e3%80%8b</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[标准]]></category>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读《人体-人体结构、功能与疾病图解》</title>
		<link>http://blog.as3er.com/?p=510</link>
		<pubDate>Tue, 24 Jul 2012 03:36:08 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=510</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>510</wp:post_id>
		<wp:post_date>2012-07-24 11:36:08</wp:post_date>
		<wp:post_date_gmt>2012-07-24 03:36:08</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb%e3%80%8a%e4%ba%ba%e4%bd%93-%e4%ba%ba%e4%bd%93%e7%bb%93%e6%9e%84%e3%80%81%e5%8a%9f%e8%83%bd%e4%b8%8e%e7%96%be%e7%97%85%e5%9b%be%e8%a7%a3%e3%80%8b</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读</title>
		<link>http://blog.as3er.com/?p=523</link>
		<pubDate>Fri, 17 Aug 2012 01:46:28 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=523</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>523</wp:post_id>
		<wp:post_date>2012-08-17 09:46:28</wp:post_date>
		<wp:post_date_gmt>2012-08-17 01:46:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb-4</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>不太一样的2012年</title>
		<link>http://blog.as3er.com/?p=535</link>
		<pubDate>Sun, 10 Mar 2013 09:22:08 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=535</guid>
		<description></description>
		<content:encoded><![CDATA[今天是2012年9月14日，虽然还只是年中刚过。却已觉得的疲惫不堪。有太多的事总让我措手不及，我乐观些再乐观些，却还是累了。

2012.5.24日:整夜都没睡着，这是第一次如此的焦急。

2012.5.25日:妈妈被推进了手术室，两个小时后，手术室里的护士拿出一个脂肪状的肉瘤给我们看。说这是左乳的那个肿瘤，现在马上送去活检，如果是恶性的就继续手术。那一刻我心里的石头稍稍放下了一些。瘤子看起来像是脂肪瘤，我尽力的安慰着爸爸。可老天爷就是爱作弄人，活检结果瘤子是恶性的。爸爸哭了，这是我长这么大，第二次见爸爸流眼泪。妈妈被送回病房的时候，看着妈妈痛苦的样子。眼泪也没能忍住。
爸爸说，老天是不公的。妈妈辛苦了一辈子，才刚刚过上属于自己的生活。却

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>535</wp:post_id>
		<wp:post_date>2013-03-10 17:22:08</wp:post_date>
		<wp:post_date_gmt>2013-03-10 09:22:08</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%8d%e5%a4%aa%e4%b8%80%e6%a0%b7%e7%9a%842012%e5%b9%b4</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D 利用高度图实现地形</title>
		<link>http://blog.as3er.com/?p=539</link>
		<pubDate>Fri, 21 Sep 2012 08:49:50 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=539</guid>
		<description></description>
		<content:encoded><![CDATA[HeightMap:高度图一般是灰度图，图上的每个点的颜色值都代表一个采样点的高度，黑色（0）表示最低，白色（255）代表最高点。每个点的（x,y)映射到3D空间的（x,z) 颜色值映射为y轴。这样一个灰度图就可以描述一个完整的地形。
Away3D支持灰度图实现地形。
Demo:
<object width="800px" height="600px" type="application/x-shockwave-flash" data="http://www.as3er.com/blog/wp-content/uploads/2012/09/TerrainTest.swf"><param name="movie" value="http://www.as3er.com/blog/wp-content/uploads/2012/09/TerrainTest.swf" /><param name="wmode" value="direct" /></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>539</wp:post_id>
		<wp:post_date>2012-09-21 16:49:50</wp:post_date>
		<wp:post_date_gmt>2012-09-21 08:49:50</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-%e5%88%a9%e7%94%a8%e9%ab%98%e5%ba%a6%e5%9b%be%e5%ae%9e%e7%8e%b0%e5%9c%b0%e5%bd%a2</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="away3d"><![CDATA[Away3D]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D 实现场景中的三叉线以及辅助网格</title>
		<link>http://blog.as3er.com/?p=548</link>
		<pubDate>Mon, 24 Sep 2012 08:00:15 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=548</guid>
		<description></description>
		<content:encoded><![CDATA[Away3D中本身就含三叉线和辅助网格 这里只是封装了一下，以便在场景中利用。

Demo:
<object width="600px" height="500px" data="http://www.as3er.com/blog/wp-content/uploads/2012/09/DebugGridTest.swf" type="application/x-shockwave-flash"><param name="movie" value="http://www.as3er.com/blog/wp-content/uploads/2012/09/DebugGridTest.swf" /><param name="wmode" value="direct" /></object>

DebugGridTest.as 这是主文件
[actionscript3]
package test
{
	import away3d.controllers.HoverController;
	
	import com.copper.debug.DebugAxesGrid;
	
	import flash.events.Event;
	import flash.events.MouseEvent;
	
	/**
	 * 测试辅助网格
	 * @author vanCopper
	 */
	[SWF(width='600',height='500',backgroundColor='0x333333',frameRate=&quot;60&quot;)]
	public class DebugGridTest extends TestTemplate
	{
		public function DebugGridTest()
		{
			super();
		}
		
		private var _hoverController:HoverController;
		override protected function initEngine():void
		{
			super.initEngine();
			
			this.stage.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);
			this.stage.addEventListener(MouseEvent.MOUSE_UP, onMouseUp);
		}
		
		private function onMouseDown(e:MouseEvent):void
		{
			_lastPanAngle = _hoverController.panAngle;
			_lastTiltAngle = _hoverController.tiltAngle;
			_lastMouseX = stage.mouseX;
			_lastMouseY = stage.mouseY;
			_move = true;
			stage.addEventListener(Event.MOUSE_LEAVE, onStageMouseLeave);
		}
		
		private function onMouseUp(e:MouseEvent):void
		{
			_move = false;
			stage.removeEventListener(Event.MOUSE_LEAVE, onStageMouseLeave);
		}
		
		private function onStageMouseLeave(e:MouseEvent):void
		{
			_move = false;
			stage.removeEventListener(Event.MOUSE_LEAVE, onStageMouseLeave);
		}
		
		private var _move:Boolean = false;
		private var _lastPanAngle:Number;
		private var _lastTiltAngle:Number;
		private var _lastMouseX:Number;
		private var _lastMouseY:Number;
		override protected function onEnterFrame(event:Event = null):void
		{
			if (_move) 
			{
				_hoverController.panAngle = 0.3*(stage.mouseX - _lastMouseX) + _lastPanAngle;
				_hoverController.tiltAngle = 0.3*(stage.mouseY - _lastMouseY) + _lastTiltAngle;
			}
			super.onEnterFrame();
		}
		
		private var _debugAxesGrid:DebugAxesGrid;
		override protected function initObject():void
		{
			_debugAxesGrid = new DebugAxesGrid();
			_scene3D.addChild(_debugAxesGrid);
			_hoverController = new HoverController(_camera3D,_debugAxesGrid.centerObject,45,45,500);
		}
	}
}
[/actionscript3]

TestTemplate.as 为了测试方便 建了一个测试模版文件
[actionscript3]
package test
{
	import away3d.cameras.Camera3D;
	import away3d.containers.Scene3D;
	import away3d.containers.View3D;
	import away3d.debug.AwayStats;
	
	import flash.display.Sprite;
	import flash.display.StageAlign;
	import flash.display.StageScaleMode;
	import flash.events.Event;
	
	
	/**
	 * 测试用主程序模版
	 * @author vanCopper
	 */
	[SWF(width='800',height='600',backgroundColor='0x333333',frameRate=&quot;60&quot;)]
	public class TestTemplate extends Sprite
	{
		public function TestTemplate()
		{
			super();
			if(this.stage)
			{
				init();
			}else
			{
				addEventListener(Event.ADDED_TO_STAGE,init);
			}
		}
		
		protected function init(e:Event = null):void
		{
			removeEventListener(Event.ADDED_TO_STAGE,init);
			this.stage.align = StageAlign.TOP_LEFT;
			this.stage.scaleMode = StageScaleMode.NO_SCALE;
			initEngine();
			initObject();
		}
		
		protected function initObject():void
		{
			//Override
		}
		
		protected var _view3D:View3D;
		protected var _camera3D:Camera3D;
		protected var _scene3D:Scene3D;
		
		protected function initEngine():void
		{
			_view3D = new View3D();
			_camera3D = _view3D.camera;
			_scene3D = _view3D.scene;
			
			this.stage.addChild(_view3D);
			this.stage.addChild(new AwayStats(_view3D));
			this.stage.addEventListener(Event.ENTER_FRAME,onEnterFrame);
		}
		
		protected function onEnterFrame(event:Event = null):void
		{
			if(_view3D)
			{
				_view3D.render();
			}
		}
	}
}
[/actionscript3]

DebugAxesGrid.as 封装了三叉线和辅助网格
[actionscript3]
package com.copper.debug
{
	import away3d.containers.ObjectContainer3D;
	import away3d.core.base.Object3D;
	import away3d.debug.Trident;
	import away3d.primitives.WireframePlane;
	
	
	/**
	 * 场景辅助网格以及三叉线
	 * @author vanCopper
	 */
	public class DebugAxesGrid extends ObjectContainer3D
	{
		private var _gridSize:uint;
		private var _gridNum:uint;
		private var _panelW:Number;
		private var _panelH:Number;
		private var _gridColor:uint;
		/**
		 *  
		 * @param gridNum 网格对应的行列数
		 * @param gridSize 网格大小
		 * 
		 */		
		public function DebugAxesGrid(gridNum:uint = 15,gridSize:uint = 64,gridColor:uint = 0xFFFFFF)
		{
			super();
			_gridSize = gridSize;
			_gridNum = gridNum;
			_panelW = _gridSize * _gridNum;
			_panelH = _gridSize * _gridNum;
			_gridColor = gridColor;
			initView();
		}
		
		public function get centerObject():ObjectContainer3D
		{
			return _trident;
		}
		
		/**
		 * 设置三叉线 是否可见 
		 * @param value
		 * 
		 */		
		public function set tridentVisible(value:Boolean):void
		{
			_trident.visible = value;
		}
		
		public function set gridVisible(value:Boolean):void
		{
			_grid.visible = value;
		}
		
		private var _grid:WireframePlane;
		private var _trident:Trident;
		private function initView():void
		{
			_grid = new WireframePlane(_panelW,_panelH,_gridNum,_gridNum,_gridColor,1,&quot;xz&quot;);
			addChild(_grid);
			_trident = new Trident(200);
			addChild(_trident);
		}
		
	}
}
[/actionscript3] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>548</wp:post_id>
		<wp:post_date>2012-09-24 16:00:15</wp:post_date>
		<wp:post_date_gmt>2012-09-24 08:00:15</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-%e5%ae%9e%e7%8e%b0%e5%9c%ba%e6%99%af%e4%b8%ad%e7%9a%84%e4%b8%89%e5%8f%89%e7%ba%bf%e4%bb%a5%e5%8f%8a%e8%be%85%e5%8a%a9%e7%bd%91%e6%a0%bc</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="away3d"><![CDATA[Away3D]]></category>
		<category domain="category" nicename="game"><![CDATA[game]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读《汇编语言》</title>
		<link>http://blog.as3er.com/?p=555</link>
		<pubDate>Tue, 25 Sep 2012 10:10:21 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=555</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>555</wp:post_id>
		<wp:post_date>2012-09-25 18:10:21</wp:post_date>
		<wp:post_date_gmt>2012-09-25 10:10:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb%e3%80%8a%e6%b1%87%e7%bc%96%e8%af%ad%e8%a8%80%e3%80%8b</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="%e6%b1%87%e7%bc%96"><![CDATA[汇编]]></category>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读《卑鄙的圣人--曹操》</title>
		<link>http://blog.as3er.com/?p=567</link>
		<pubDate>Mon, 29 Oct 2012 02:14:52 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=567</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>567</wp:post_id>
		<wp:post_date>2012-10-29 10:14:52</wp:post_date>
		<wp:post_date_gmt>2012-10-29 02:14:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb%e3%80%8a%e5%8d%91%e9%84%99%e7%9a%84%e5%9c%a3%e4%ba%ba-%e6%9b%b9%e6%93%8d%e3%80%8b</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读《白鹿原》</title>
		<link>http://blog.as3er.com/?p=569</link>
		<pubDate>Mon, 29 Oct 2012 02:15:16 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=569</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>569</wp:post_id>
		<wp:post_date>2012-10-29 10:15:16</wp:post_date>
		<wp:post_date_gmt>2012-10-29 02:15:16</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb%e3%80%8a%e7%99%bd%e9%b9%bf%e5%8e%9f%e3%80%8b</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在读＜万物＞</title>
		<link>http://blog.as3er.com/?p=571</link>
		<pubDate>Wed, 21 Nov 2012 14:58:35 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=571</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>571</wp:post_id>
		<wp:post_date>2012-11-21 22:58:35</wp:post_date>
		<wp:post_date_gmt>2012-11-21 14:58:35</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e8%af%bb%ef%bc%9c%e4%b8%87%e7%89%a9%ef%bc%9e</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%af%bb%e4%b9%a6%e7%ac%94%e8%ae%b0"><![CDATA[读书笔记]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Everything has a reason</title>
		<link>http://blog.as3er.com/?p=597</link>
		<pubDate>Tue, 18 Dec 2012 14:36:57 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=597</guid>
		<description></description>
		<content:encoded><![CDATA[对于工作你有没有用心，持什么样的态度，身边的同事心里都很清楚。你想有所成绩就需要端正你的态度。
如果你只是把工作认为是赚钱工具，那我想你无论如何都不会觉得赚钱容易。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>597</wp:post_id>
		<wp:post_date>2012-12-18 22:36:57</wp:post_date>
		<wp:post_date_gmt>2012-12-18 14:36:57</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>everything-has-a-reason</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="%e5%b7%a5%e4%bd%9c"><![CDATA[工作]]></category>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://blog.as3er.com/?p=164</link>
		<pubDate>Sun, 10 Mar 2013 09:24:22 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=164</guid>
		<description></description>
		<content:encoded><![CDATA[<a rel="shadowbox[Mixed]; width=520;height=390" href="http://www.life-stone.cn/uploads/Demo01.swf">swf</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2013-03-10 17:24:22</wp:post_date>
		<wp:post_date_gmt>2013-03-10 09:24:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>164</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>lightboxoff</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS3 动态创建音效</title>
		<link>http://blog.as3er.com/?p=189</link>
		<pubDate>Sun, 10 Mar 2013 09:24:22 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2013-03-10 17:24:22</wp:post_date>
		<wp:post_date_gmt>2013-03-10 09:24:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>as3-%e5%8a%a8%e6%80%81%e5%88%9b%e5%bb%ba%e9%9f%b3%e6%95%88</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tes</title>
		<link>http://blog.as3er.com/?p=194</link>
		<pubDate>Sun, 10 Mar 2013 09:24:22 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=194</guid>
		<description></description>
		<content:encoded><![CDATA[<a  width=600;height=400" href="../../demo/Pendant/PendantDemo.swf">打开SWF</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2013-03-10 17:24:22</wp:post_date>
		<wp:post_date_gmt>2013-03-10 09:24:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>tes</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android UI 组件</title>
		<link>http://blog.as3er.com/?p=213</link>
		<pubDate>Sun, 10 Mar 2013 09:24:22 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.life-stone.cn/blog/?p=213</guid>
		<description></description>
		<content:encoded><![CDATA[TextView
<a href="http://www.life-stone.cn/blog/wp-content/uploads/2010/04/TextView.jpg"><img src="http://www.life-stone.cn/blog/wp-content/uploads/2010/04/TextView.jpg" alt="" title="TextView" width="322" height="146" class="alignnone size-full wp-image-216" /></a>
为了方便控制 文本框的各种属性 不修改配置文件的情况下 代码实现
[java]private void creatTxtView()
    {
    	textview = (TextView)this.findViewById(R.id.textview);

  		String string = &quot;TextView 示例！&quot;;

  		/* 设置文本的颜色 */
  		textview.setTextColor(Color.RED);
  		/* 设置字体大小 */
  		textview.setTextSize(12);
  		/* 设置文字背景 */
//  		textview.setBackgroundColor(Color.BLUE);
  		/* 设置TextView显示的文字 */
  		textview.setText(string);

    }[/java] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date>2013-03-10 17:24:22</wp:post_date>
		<wp:post_date_gmt>2013-03-10 09:24:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>android-ui-%e7%bb%84%e4%bb%b6</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>http://www.oyvindnordhagen.com/blog/olog/</title>
		<link>http://blog.as3er.com/?p=290</link>
		<pubDate>Sun, 10 Mar 2013 09:24:01 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=290</guid>
		<description></description>
		<content:encoded><![CDATA[保存  调试工具]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2013-03-10 17:24:01</wp:post_date>
		<wp:post_date_gmt>2013-03-10 09:24:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>httpwww-oyvindnordhagen-comblogolog</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2D地图中的 地图自动拼接</title>
		<link>http://blog.as3er.com/?p=360</link>
		<pubDate>Sun, 04 Mar 2012 08:45:10 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=360</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

终于折腾好了先来张效果图：
<a href="http://blog.as3er.com/wp-content/uploads/2012/03/地图自动拼接预览.png"><img class="alignnone size-medium wp-image-792" alt="地图自动拼接预览" src="http://blog.as3er.com/wp-content/uploads/2012/03/地图自动拼接预览-300x255.png" width="300" height="255" /></a>
<a href="http://www.as3er.com/blog/wp-content/uploads/2013/11/autoMontage.swf">autoMontage.swf</a>

很早之前就跟同事研究过帝国时代里的地形拼接，偶尔中看到了http://blog.csdn.net/changbaohua/article/details/3860503&amp;&amp;http://www.swfdiy.com/?p=1091这两篇文章(ps:话说跟博主还有过一面之缘，第一眼看过去就可以肯定这人是技术宅，可惜的是没能成为同事一起共事)于是研究了一下，读了博主的代码，这里分享并记录下来。

为什么要做这种自动拼接？
很多游戏的地图都是基于Tile拼接而成，拼接地图的主要目的是资源的重用性，降低美术成本。但拼接的地图对于游戏的地图的表现力是有部分损失的。
当我们游戏里需要拼接一条或者多条路再或者变态的九路十八弯的路，再或者是那弯弯的小溪….对于素材和游戏逻辑复杂度来讲绝对是蛋痛的。所以牛人们就想到了这种牛逼的地形的自动拼接。

资源图片

我们先来观察下资源图片

<a href="http://blog.as3er.com/wp-content/uploads/2012/03/资源图片.png"><img class="alignnone size-full wp-image-793" alt="资源图片" src="http://blog.as3er.com/wp-content/uploads/2012/03/资源图片.png" width="99" height="127" /></a>

仔细观察我们可以发现每个格子(16*16)的图片是有一定规律的，大致分为下面几种

A:内向转角 0,1,6,7 12,17,42,47
B:向外转角 4,5,10,11
C:上下连接 24,29,30,35
D:左右连接 14,15,44,45
E:填充物 26,27,32,33

再观察我们的拼接而成的地图 你会发现大格子的尺寸为 32*32 那么也就是说一个大格子是由四个小格子组合而成的。所以在生成填充的时候如何确定四个小格子应该使用的目标图片便是关键了

再继续观察我们利用小图片拼接成的大图片，我们又发现了规律。为了描述清楚，我们先定义一些名词(ps：我阅读上面的Blog时就读了好久没读明白那些名词)

块：把一个32*32的格子称为块
目标块：我们将要填充的32*32的格子
同类块：该32*32的格子已经被填充过

规律：
A: 对于每个块里面的16*16的小块 该小块斜方向的同类块对目标块的影响当且仅当斜方向相邻的两个垂直方向上都有同类块的时候才会出现，也就是目标小块的填充为 填充物
如图：

<a href="http://blog.as3er.com/wp-content/uploads/2012/03/填充物.png"><img class="alignnone size-full wp-image-794" alt="填充物" src="http://blog.as3er.com/wp-content/uploads/2012/03/填充物.png" width="63" height="63" /></a>

目标块为13 因为0,1,12均已被填充 那么块13的左上角的小块为填充物为 26(填充物)

B:对于每个块里面的16*16的小块 该小块两个相邻的垂直方向上都有同类块，且他们之间的斜方向没有同类块的时候，目标小块的填充为 向外转角
如图:

<a href="http://blog.as3er.com/wp-content/uploads/2012/03/填充物02.png"><img class="alignnone size-full wp-image-795" alt="填充物02" src="http://blog.as3er.com/wp-content/uploads/2012/03/填充物02.png" width="63" height="64" /></a>

目标块为13 因为 1, 12已被填充 0未被填充 所以块13的左上角的小块填充物为 4(向外转角)

C:对于每个块里面的16*16的小块 该小块的某个垂直方向上有同类块，且相邻的一个垂直方向上没有同类块，无论相邻的斜方向上有没有同类块，目标小块的填充为 向上下或者向左右连接物
如图:
<a href="http://blog.as3er.com/wp-content/uploads/2012/03/填充物03.png"><img class="alignnone size-full wp-image-796" alt="填充物03" src="http://blog.as3er.com/wp-content/uploads/2012/03/填充物03.png" width="64" height="66" /></a>

目标块为13 因为只有一个垂直方向上1被填充 所有块13的左上角的小块填充物为 24(上下连接)

D:对于每个块里面的16*16的小块 该小块的某个垂直方向上没有同类快，且相邻的方向也没有同类块，无论相邻的斜方向上有没有同类块，目标小块的填充为 内向转角
如图:
<a href="http://blog.as3er.com/wp-content/uploads/2012/03/填充物04.png"><img class="alignnone size-full wp-image-797" alt="填充物04" src="http://blog.as3er.com/wp-content/uploads/2012/03/填充物04.png" width="67" height="64" /></a>

目标块为13 1,12均无填充物，目标小块的填充物为 0(内转角）

ok到这里，自动拼接的原理基本上叙述完了。具体该怎么做呢？这个也许每个人的实现方法会有所不同，我把代码贴上来供有兴趣的朋友参考和自己备份
<pre class="brush:as3">package
{
	import flash.display.Bitmap;
	import flash.display.BitmapData;
	import flash.display.DisplayObject;
	import flash.display.Sprite;
	import flash.events.MouseEvent;
	import flash.filters.DropShadowFilter;
	import flash.geom.Rectangle;
	import flash.text.TextField;
	import flash.text.TextFormat;

	[SWF(width="550",height="450",backgroundColor="0xCCCCCC")]

	public class autoMontage extends Sprite
	{
		[Embed(source="./files/01.png")]
		private var IMG01:Class;

		[Embed(source="./files/02.png")]
		private var IMG02:Class

		public function autoMontage()
		{
			initView();
		}

		private function initView():void
		{
			initImgView();
			initCanvas();
			initMap();
		}

		private var _map:Array;
		/**
		 * 初始化地图信息
		 *
		 */
		private function initMap():void
		{
			_map = [];
			var i:int;
			var j:int;
			for(i=0;i&lt;CANVAS_ROWS;i++)
			{
				_map[i] = [];
				for(j=0;j&lt;CANVAS_COLS;j++)
				{
					_map[i][j] = 0;
				}
			}
		}

		private static var GRID_SIZE:int = 32;
		private static var CANVAS_ROWS:int = 12;
		private static var CANVAS_COLS:int = 12;
		private var _canvas:Bitmap;
		private var _canvasBitmapData:BitmapData;
		private var _canvasContainer:Sprite = new Sprite();
		/**
		 * 初始化目标画布
		 *
		 */
		private function initCanvas():void
		{
			var canvasW:int = CANVAS_ROWS*GRID_SIZE;
			var canvasH:int = CANVAS_COLS*GRID_SIZE;
			_canvasContainer.graphics.beginFill(0xFFFFFF);
			_canvasContainer.graphics.drawRect(0,0,canvasW,canvasH);
			_canvasContainer.graphics.endFill();
			_canvasContainer.x = IMG_W + GRID_SIZE;
			_canvasContainer.y = (this.stage.stageHeight - _canvasContainer.height)/2;
			addChild(_canvasContainer);
			_canvasBitmapData = new BitmapData(canvasW,canvasH,true,0);
			_canvas = new Bitmap(_canvasBitmapData);
			_canvasContainer.addChild(_canvas);

			var canvasGrid:Sprite = getGrid(CANVAS_ROWS,CANVAS_COLS,GRID_SIZE);
			_canvasContainer.addChild(canvasGrid);

			var numGrid:Sprite = getGridNum(CANVAS_ROWS,CANVAS_COLS,GRID_SIZE);
			_canvasContainer.addChild(numGrid);

			_canvasContainer.addEventListener(MouseEvent.CLICK,onMouseHandler);
			_canvasContainer.addEventListener(MouseEvent.MOUSE_MOVE,onMouseHandler);
		}

		private var _mouseGrid:Sprite;
		private function onMouseHandler(e:MouseEvent):void
		{
			switch(e.type)
			{
				case MouseEvent.CLICK:
					if(_canvasContainer.hitTestPoint(this.stage.mouseX,this.stage.mouseY))
					{
						var row:int = _canvasContainer.mouseX/GRID_SIZE;
						var col:int = _canvasContainer.mouseY/GRID_SIZE;
						render(row,col);
					}
					break;
				case MouseEvent.MOUSE_MOVE:
					if(!_mouseGrid)
					{
						_mouseGrid = getGrid(1,1,GRID_SIZE,2,0x00000);
						_canvasContainer.addChild(_mouseGrid);
					}
					_mouseGrid.x = Math.floor(_canvasContainer.mouseX/GRID_SIZE)*GRID_SIZE;
					_mouseGrid.y = Math.floor(_canvasContainer.mouseY/GRID_SIZE)*GRID_SIZE;
					break;
			}
		}

		private var _imgArr:Array = [new IMG01(),new IMG02()];
		private static var IMG_W:int = 96;
		private static var IMG_H:int = 128;
		private static var TILE_SIZE:int = 16;
		private var _targetBitmapData:BitmapData;//当前使用的位图资源
		private var _targetBitmapDataList:Array;
		private var _bitmapIndexArr:Array = [];

		private function initImgView():void
		{
			_targetBitmapDataList = [];
			for (var i:int = 0; i &lt; _imgArr.length; i++)
			{
				var container:Sprite = new Sprite();
				var bitmap:Bitmap = _imgArr[i];
				container.addChild(bitmap);
				_targetBitmapDataList.push(bitmap.bitmapData);
				var grid:Sprite = getGrid(IMG_W/TILE_SIZE,IMG_H/TILE_SIZE,TILE_SIZE);
				var gridNum:Sprite = getGridNum(IMG_W/TILE_SIZE,IMG_H/TILE_SIZE,TILE_SIZE,_bitmapIndexArr);
				container.addChild(grid);
				container.addChild(gridNum);
				container.y = i*IMG_H + 25*i + 25;
				container.name = ""+i;
				container.addEventListener(MouseEvent.CLICK,onChangeBitmapData);
				container.buttonMode = true;
				container.mouseChildren = false;
				addChild(container);
			}
			_targetBitmapData = _targetBitmapDataList[0];
		}

		private var _currentSelectDisplay:DisplayObject;
		private function onChangeBitmapData(e:MouseEvent):void
		{
			if(_currentSelectDisplay)
			{
				_currentSelectDisplay.filters = null;
			}
			var displayObject:DisplayObject = e.target as DisplayObject;
			displayObject.filters = [new DropShadowFilter()];
			_currentSelectDisplay = displayObject;
			var index:int = int(displayObject.name);
			_targetBitmapData = _targetBitmapDataList[index];
			_canvasBitmapData.fillRect(_canvasBitmapData.rect,0);
			initMap();
		}

		/**
		 * 生成格子
		 * @param rows
		 * @param cols
		 * @param size
		 * @return
		 *
		 */
		private function getGrid(rows:int,cols:int,size:int,thickNess:int=1,color:uint = 0x990033):Sprite
		{
			var sp:Sprite = new Sprite();
			var i:int;
			var j:int;
			sp.graphics.lineStyle(thickNess,color,.5);

			for (i=0;i&lt;cols+1;i++)
			{
				sp.graphics.moveTo(0, i*size);
				sp.graphics.lineTo(size*rows,i*size);
			}

			for(j=0; j&lt;rows + 1;j++)
			{
				sp.graphics.moveTo(j*size,0);
				sp.graphics.lineTo(j*size,size*cols);
			}
			return sp;
		}

		private function getGridNum(rows:int,cols:int,size:int,indexArr:Array=null):Sprite
		{
			var sp:Sprite = new Sprite();
			var text:TextField;
			var tf:TextFormat = new TextFormat;
			tf.align = "center";
			tf.size = 11;
			var i:int = 0;
			var j:int = 0;
			var num:int = 0;
			for (i=0;i&lt;cols; i++) {
				for (j=0;j&lt;rows;j++) {
					text = new TextField;
					text.mouseEnabled = false;
					text.defaultTextFormat = tf;
					text.width = 20;
					text.text = "" + num;
					// text.text = "" + j + ":" + i;
					if(indexArr)
					{
						indexArr.push([j,i]);
					}
					num++;
					text.x = j*size;
					text.y = i*size;
					sp.addChild(text);
				}
			}
			return sp;
		}

		private function render(row:int,col:int):void
		{
			if(_map[col][row]){return;}

			_map[col][row] = 1;
			var bitmapDataIndex:Array = getBitmapDataIndex(row,col);
			refreshCanvas(row,col,bitmapDataIndex);

			var nearArr:Array = getNear(row,col);
			for(var i:int = -1;i&lt;=1;i++)
			{
				for(var j:int = -1; j&lt;=1; j++)
				{
					var px:int = row + j;
					var py:int = col +i;
					if(nearArr[1+ i][1+j])
					{
						var near:Array = getBitmapDataIndex(px,py);
						refreshCanvas(px,py,near);
					}
				}
			}
		}

		/**
		 * 刷新画布
		 * @param row
		 * @param col
		 * @param indexArr
		 *
		 */
		private function refreshCanvas(row:int,col:int,indexArr:Array):void
		{
			var bmpList:Array = [];
			for(var i:int = 0;i&lt;indexArr.length;i++)
			{
				var posArr:Array = _bitmapIndexArr[indexArr[i]];
				var px:int = posArr[0]*TILE_SIZE;
				var py:int = posArr[1]*TILE_SIZE;

				var bmpVector:Vector.&lt;uint&gt; = _targetBitmapData.getVector(new Rectangle(px,py,TILE_SIZE,TILE_SIZE));
				bmpList.push(bmpVector);
			}

			var index:int = 0;
			for(var j:int = 0; j&lt;2;j++)
			{
				for(var n:int = 0; n&lt;2; n++)
				{
					var tx:int = row*GRID_SIZE + n*TILE_SIZE;
					var ty:int = col*GRID_SIZE + j*TILE_SIZE;
					var targetBmpV:Vector.&lt;uint&gt; = bmpList[index];
					_canvasBitmapData.setVector(new Rectangle(tx,ty,TILE_SIZE,TILE_SIZE),targetBmpV);
					index ++;
				}
			}
		}

		private function getBitmapDataIndex(row:int,col:int):Array
		{

			var returnIndex:Array = [12,17,42,47];
			var nearArr:Array = getNear(row,col);
			// A- 斜方向的同类块对目标块的影响当且仅当斜方向相邻的两个垂直方向上都有同类块的时候才会出现。也就是将目标块的对应小图块变成填充物。
			// B- 当两个相邻的垂直方向上都有同类块，且他们之间的斜方向上没有同类块的时候，目标快对应的小图块变成向外转角
			// C- 当某个垂直方向上有同类块，且相邻的一个垂直方向上没有同类块，无论相邻的斜方向上有没有同类块，目标块对应的小图块变成连接（向上下或者向左右连接）
			// D- 当某个垂直方向上没有同类块，且相邻的垂直方向上也没有同类块，无论相邻的斜方向上有没有同类块，目标块对应的小图块变成向内转角
			//目标区块的 左上角小区块
			if(nearArr[0][0] &amp;&amp; nearArr[0][1] &amp;&amp; nearArr[1][0])
			{
				returnIndex[0] = 20;//填充物
			}else if(nearArr[0][1] &amp;&amp; nearArr[1][0])
			{
				returnIndex[0] = 4;//外转角
			}else if(nearArr[0][1])
			{
				returnIndex[0] = 24;//向上
			}else if(nearArr[1][0])
			{
				returnIndex[0] = 14;//向左
			}

			//目标区块的 右上角小区块
			if(nearArr[0][2] &amp;&amp; nearArr[0][1] &amp;&amp; nearArr[1][2])
			{
				returnIndex[1] = 27;
			}else if(nearArr[0][1] &amp;&amp; nearArr[1][2])
			{
				returnIndex[1] = 5;
			}else if(nearArr[0][1])
			{
				returnIndex[1] = 29;
			}else if(nearArr[1][2])
			{
				returnIndex[1] = 15;
			}

			//目标区块的 左下角小区块
			if(nearArr[2][0] &amp;&amp; nearArr[1][0] &amp;&amp; nearArr[2][1])
			{
				returnIndex[2] = 32;
			}else if(nearArr[1][0] &amp;&amp; nearArr[2][1])
			{
				returnIndex[2] = 10;
			}else if(nearArr[1][0])
			{
				returnIndex[2] = 44;
			}else if(nearArr[2][1])
			{
				returnIndex[2] = 30;
			}

			//目标区块的 右下角小区块
			if (nearArr[2][1] &amp;&amp; nearArr[2][2] &amp;&amp; nearArr[1][2])
			{
				returnIndex[3] = 33;
			} else if (nearArr[2][1] &amp;&amp; nearArr[1][2])
			{
				returnIndex[3] = 11;
			} else if (nearArr[2][1])
			{
				returnIndex[3] = 35;
			}else if (nearArr[1][2])
			{
				returnIndex[3] = 45;
			}
			return returnIndex;
		}

		private function getNear(row:int,col:int):Array
		{

			var returnArr:Array = [];
			returnArr.push([0,0,0]);
			returnArr.push([0,0,0]);
			returnArr.push([0,0,0]);

			var tempIndex:int = 1;
			for(var i:int = -1; i&lt;=1;i++)
			{
				for(var j:int = -1; j&lt;= 1; j++)
				{
					var tRow:int = col + i;
					var tCol:int = row + j;

					if(tRow&lt;0 || tCol &lt; 0){continue;}
					if(tRow&gt;CANVAS_COLS || tCol &gt; CANVAS_ROWS){continue;}
					if(_map[tRow] &amp;&amp; _map[tRow][tCol])
					{
						//有填充物
						returnArr[tempIndex+i][tempIndex+j] = 1;
					}else
					{
						//无填充物
						returnArr[tempIndex+i][tempIndex+j] = 0;
					}
				}
			}
			return returnArr;
		}
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>360</wp:post_id>
		<wp:post_date>2012-03-04 08:45:10</wp:post_date>
		<wp:post_date_gmt>2012-03-04 08:45:10</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2d%e5%9c%b0%e5%9b%be%e4%b8%ad%e7%9a%84-%e5%9c%b0%e5%9b%be%e8%87%aa%e5%8a%a8%e6%8b%bc%e6%8e%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e5%8a%a8%e6%8b%bc%e6%8e%a5"><![CDATA[自动拼接]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[oyzm]]></wp:comment_author>
			<wp:comment_author_email>574781136@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.baidu.com</wp:comment_author_url>
			<wp:comment_author_IP>119.139.38.86</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 23:40:33</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 15:40:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:razz: 非常感谢楼主无私奉献啊，正研究到这个算法实现就看到你源码了，VERY GOOD!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[oyzm]]></wp:comment_author>
			<wp:comment_author_email>574781136@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.baidu.com</wp:comment_author_url>
			<wp:comment_author_IP>119.139.38.86</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 23:40:57</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 15:40:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:lol:]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[vanCopper]]></wp:comment_author>
			<wp:comment_author_email>vanCopperm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>180.168.174.218</wp:comment_author_IP>
			<wp:comment_date>2012-06-08 14:05:59</wp:comment_date>
			<wp:comment_date_gmt>2012-06-08 06:05:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不客气～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>122</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[killsoon]]></wp:comment_author>
			<wp:comment_author_email>12312321@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.baidu.com</wp:comment_author_url>
			<wp:comment_author_IP>116.228.52.34</wp:comment_author_IP>
			<wp:comment_date>2012-06-15 17:31:04</wp:comment_date>
			<wp:comment_date_gmt>2012-06-15 09:31:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个思路真心牛B]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>AS_RPC 解析库</title>
		<link>http://blog.as3er.com/?p=413</link>
		<pubDate>Tue, 13 Mar 2012 08:02:01 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=413</guid>
		<description></description>
		<content:encoded><![CDATA[把AS与XMLRPC服务器通讯以及数据解析写成了一个库，为BlogEdit做前期准备。不得不说对XML的操作写一次查一次文档，死都记不住。

XMLRPC有以下几种类型，在发送数据和处理返回数据的时候要处理一下
<table class="wikitable">
<tbody>
<tr>
<th>名称</th>
<th>标记范例</th>
<th>描述</th>
</tr>
<tr>
<td>array</td>
<td>
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;array<span class="re2">&gt;</span></span></span>
  <span class="sc3"><span class="re1">&lt;data<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;value<span class="re2">&gt;</span></span><span class="re1">&lt;i4<span class="re2">&gt;</span></span></span>1404<span class="sc3"><span class="re1">&lt;/i4<span class="re2">&gt;</span></span><span class="re1">&lt;/value<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;value<span class="re2">&gt;</span></span><span class="re1">&lt;string<span class="re2">&gt;</span></span></span>Something here<span class="sc3"><span class="re1">&lt;/string<span class="re2">&gt;</span></span><span class="re1">&lt;/value<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;value<span class="re2">&gt;</span></span><span class="re1">&lt;i4<span class="re2">&gt;</span></span></span>1<span class="sc3"><span class="re1">&lt;/i4<span class="re2">&gt;</span></span><span class="re1">&lt;/value<span class="re2">&gt;</span></span></span>
  <span class="sc3"><span class="re1">&lt;/data<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/array<span class="re2">&gt;</span></span></span></pre>
</div>
</div></td>
<td></td>
</tr>
<tr>
<td>base64</td>
<td>
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;base64<span class="re2">&gt;</span></span></span>eW91IGNhbid0IHJlYWQgdGhpcyE=<span class="sc3"><span class="re1">&lt;/base64<span class="re2">&gt;</span></span></span></pre>
</div>
</div></td>
<td></td>
</tr>
<tr>
<td>boolean</td>
<td>
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;boolean<span class="re2">&gt;</span></span></span>1<span class="sc3"><span class="re1">&lt;/boolean<span class="re2">&gt;</span></span></span></pre>
</div>
</div></td>
<td><a class="mw-redirect" title="布尔型" href="/wiki/%E5%B8%83%E5%B0%94%E5%9E%8B">布尔型</a>逻辑值 (0 或 1)</td>
</tr>
<tr>
<td>date/time</td>
<td>
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;dateTime.iso8601<span class="re2">&gt;</span></span></span>19980717T14:08:55<span class="sc3"><span class="re1">&lt;/dateTime.iso8601<span class="re2">&gt;</span></span></span></pre>
</div>
</div></td>
<td></td>
</tr>
<tr>
<td>double</td>
<td>
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;double<span class="re2">&gt;</span></span></span>-12.53<span class="sc3"><span class="re1">&lt;/double<span class="re2">&gt;</span></span></span></pre>
</div>
</div></td>
<td><a class="mw-redirect" title="双倍精确浮点数" href="/wiki/%E9%9B%99%E5%80%8D%E7%B2%BE%E7%A2%BA%E6%B5%AE%E9%BB%9E%E6%95%B8">双倍精确浮点数</a></td>
</tr>
<tr>
<td>integer</td>
<td>
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;i4<span class="re2">&gt;</span></span></span>42<span class="sc3"><span class="re1">&lt;/i4<span class="re2">&gt;</span></span></span></pre>
</div>
</div>
or
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;int<span class="re2">&gt;</span></span></span>42<span class="sc3"><span class="re1">&lt;/int<span class="re2">&gt;</span></span></span></pre>
</div>
</div></td>
<td><a class="mw-redirect" title="整数" href="/wiki/%E6%95%B4%E6%95%B8">整数</a></td>
</tr>
<tr>
<td>string</td>
<td>
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;string<span class="re2">&gt;</span></span></span>Hello world!<span class="sc3"><span class="re1">&lt;/string<span class="re2">&gt;</span></span></span></pre>
</div>
</div></td>
<td>字符串，必须遵守<a class="new" title="XML encoding" href="/w/index.php?title=XML_encoding&amp;action=edit&amp;redlink=1">XML encoding</a>（<a class="extiw" title="en:XML" href="//en.wikipedia.org/wiki/XML#Entity_references">XML encoding</a>）的格式。</td>
</tr>
<tr>
<td>struct</td>
<td>
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;struct<span class="re2">&gt;</span></span></span>
  <span class="sc3"><span class="re1">&lt;member<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;name<span class="re2">&gt;</span></span></span>foo<span class="sc3"><span class="re1">&lt;/name<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;value<span class="re2">&gt;</span></span><span class="re1">&lt;i4<span class="re2">&gt;</span></span></span>1<span class="sc3"><span class="re1">&lt;/i4<span class="re2">&gt;</span></span><span class="re1">&lt;/value<span class="re2">&gt;</span></span></span>
  <span class="sc3"><span class="re1">&lt;/member<span class="re2">&gt;</span></span></span>
  <span class="sc3"><span class="re1">&lt;member<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;name<span class="re2">&gt;</span></span></span>bar<span class="sc3"><span class="re1">&lt;/name<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;value<span class="re2">&gt;</span></span><span class="re1">&lt;i4<span class="re2">&gt;</span></span></span>2<span class="sc3"><span class="re1">&lt;/i4<span class="re2">&gt;</span></span><span class="re1">&lt;/value<span class="re2">&gt;</span></span></span>
  <span class="sc3"><span class="re1">&lt;/member<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/struct<span class="re2">&gt;</span></span></span></pre>
</div>
</div></td>
<td><a class="new" title="关联矩阵" href="/w/index.php?title=%E9%97%9C%E8%81%AF%E7%9F%A9%E9%99%A3&amp;action=edit&amp;redlink=1">关联矩阵</a></td>
</tr>
<tr>
<td>nil</td>
<td>
<div class="mw-geshi" dir="ltr" style="text-align: left;">
<div class="xml source-xml">
<pre class="de1"><span class="sc3"><span class="re1">&lt;nil</span><span class="re2">/&gt;</span></span></pre>
</div>
</div></td>
<td></td>
</tr>
</tbody>
</table>
把通讯和数据封装和解析封装好了，这里提供SWC给需要的朋友

<a href="http://www.as3er.com/blog/wp-content/uploads/2012/03/asRPC.rar">ASRPC.rar</a>

用法也很简单：
<pre class="brush:as3">package
{
	import com.data.RPCData;
	import com.net.RPCServer;

	import flash.display.Sprite;
	import flash.display.StageAlign;
	import flash.display.StageScaleMode;

	public class BlogEdit extends Sprite
	{
		public function BlogEdit()
		{
			super();

			// 支持 autoOrient
			stage.align = StageAlign.TOP_LEFT;
			stage.scaleMode = StageScaleMode.NO_SCALE;
			RPCServer.instance.serverUrl = "http://www.as3er.com/blog/xmlrpc.php";
			testRPC();
		}

		private function testRPC():void
		{
			RPCServer.instance.callMethod("wp.getCategories", ["0","user", "password"],onComplete);
		}

		private function onComplete(data:RPCData):void
		{
			trace(data);
		}
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2012-03-13 16:02:01</wp:post_date>
		<wp:post_date_gmt>2012-03-13 08:02:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>as_rpc-%e8%a7%a3%e6%9e%90%e5%ba%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="xmlrpc"><![CDATA[XMLRPC]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS3 读写 C++ 64位数字</title>
		<link>http://blog.as3er.com/?p=452</link>
		<pubDate>Mon, 23 Apr 2012 01:37:33 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=452</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

为框架添加了一套新的与C++通讯的数据协议，其中和C++的大爷们对于他们的64位数字(unsigned long long)读写的问题纠结了很久。真心觉得“学好C++走遍天下都不怕啊”

AS里Number最大支持53整数位，所以AS里面是没有办法表示超过53位的整数的，所以这里的读写64数字只是在数字大小不超过53位的情况下可用。

从字节流读出64数字：
<pre class="brush:as3">var long_h:uint;

var long_l:uint;

//C++传过来的数据包是打过pack的 所以字节流里 低位在前

long_l = byteArray.readUnsignedInt();

long_h = byteArray.readUnsignedInt();

var num:Number = long_h*4294967296 + long_l;// 4294967296 = 2^32</pre>
写入:
<pre class="brush:as3">var num:Number = 23212232;

var long_l:uint = uint(num);

var long_h:uint = (num - long_l)/4294967296;

byteArray.writeUnsignedInt(long_l);

byteArray.writeUnsignedInt(long_h);</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>452</wp:post_id>
		<wp:post_date>2012-04-23 09:37:33</wp:post_date>
		<wp:post_date_gmt>2012-04-23 01:37:33</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>as3-%e8%af%bb%e5%86%99-c-64%e4%bd%8d%e6%95%b0%e5%ad%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="c-64%e4%bd%8d"><![CDATA[C++ 64位]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>135</wp:comment_id>
			<wp:comment_author><![CDATA[Roland]]></wp:comment_author>
			<wp:comment_author_email>281442489@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.keydancer.com</wp:comment_author_url>
			<wp:comment_author_IP>180.168.174.218</wp:comment_author_IP>
			<wp:comment_date>2012-04-23 09:40:09</wp:comment_date>
			<wp:comment_date_gmt>2012-04-23 01:40:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[牛逼～，果断收藏]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>136</wp:comment_id>
			<wp:comment_author><![CDATA[yoyo]]></wp:comment_author>
			<wp:comment_author_email>yoyo@play175.com</wp:comment_author_email>
			<wp:comment_author_url>http://yoyo.play175.com/</wp:comment_author_url>
			<wp:comment_author_IP>116.204.97.129</wp:comment_author_IP>
			<wp:comment_date>2012-05-14 17:44:01</wp:comment_date>
			<wp:comment_date_gmt>2012-05-14 09:44:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[多谢楼主！ :razz:]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>AS3 Graphics 多次绘制</title>
		<link>http://blog.as3er.com/?p=516</link>
		<pubDate>Wed, 15 Aug 2012 06:01:42 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=516</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

AS3中 Sprite和Shape类都持有一个Graphics对象，利用Graphics对象可以方便的利用内置的绘图方法绘制一些简单的图形。

之前在游戏中做新手引导的时候利用显示对象的BlendMode可以实现一个镂空的光圈引导，后来看到有人用Graphics连续画两个形状就实现了。

<a href="http://blog.as3er.com/wp-content/uploads/2012/08/截屏13-5-1_下午3_26-5.png"><img class="alignnone size-medium wp-image-739" alt="镂空" src="http://blog.as3er.com/wp-content/uploads/2012/08/截屏13-5-1_下午3_26-5-300x241.png" width="300" height="241" /></a>

&nbsp;

&nbsp;
<pre class="brush:as3">package
{
	import flash.display.Sprite;

	/**
	 * 
	 * @author vanCopper
	 */
	public class Ts extends Sprite
	{
		public function Ts()
		{
			var sw:int = this.stage.stageWidth;
			var sh:int = this.stage.stageHeight;
			var hollowMask:Sprite = new Sprite;

			hollowMask.graphics.beginFill(0x333333,.8);
			hollowMask.graphics.drawRect(sw/4,sh/4,sw/2,sh/2);
			//hollowMask.graphics.beginFill(0xFF9aff);
			hollowMask.graphics.drawCircle(200,150,30);
			hollowMask.graphics.endFill();
			addChild(hollowMask);
		}
	}
}</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>516</wp:post_id>
		<wp:post_date>2012-08-15 14:01:42</wp:post_date>
		<wp:post_date_gmt>2012-08-15 06:01:42</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>as3-graphics-%e5%a4%9a%e6%ac%a1%e7%bb%98%e5%88%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e9%95%82%e7%a9%ba"><![CDATA[镂空]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>用于A*的 二叉堆 AS3实现</title>
		<link>http://blog.as3er.com/?p=526</link>
		<pubDate>Tue, 11 Sep 2012 08:08:52 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=526</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>
<pre class="brush:as3">package com.copper.isometric.pathing
{
	import flash.sampler.startSampling;

	/**
	 * A*中用于开放列表的 二叉堆
	 * @author vanCopper
	 *
	 */
	public class BinaryHeap
	{
		private var struct:Array = [-1];

		private var compareFunc:Function = function (x:Object,y:Object):Boolean
		{
			if(y == null)return true;
			return x &lt; y;
		};

		/**
		 *
		 * @param compareFunc n
		 *
		 * function (x:Object,y:Object):Boolean
		 * {
		 * return x &lt; y;
		 * };
		 */
		public function BinaryHeap(compareFunc:Function = null)
		{
			if(compareFunc != null)this.compareFunc = compareFunc;
		}

		/**
		 * 向二叉堆添加新元素
		 * @param value
		 *
		 */
		public function insert(value:Object):void
		{
			if(value == null)return;
			var len:int = struct.length;
			struct[len] = value;
			var parent:int = len &gt;&gt; 1;
			while(parent &gt;= 1 &amp;&amp; compareFunc(struct[len],struct[parent]))
			{
				var temp:Object = struct[parent];
				struct[len] = temp;
				struct[parent] = value;
				len = parent;
				parent = parent &gt;&gt; 1;
			}
		}

		/**
		 * 删除二叉堆的第一个元素 并返回该元素
		 * @return
		 *
		 */
		public function shift():Object
		{
			var n:int = 1;
			var shiftObj:Object = struct[n];
			if(shiftObj == null)return null;
			var len:int = struct.length;

			struct[n] = struct[len - 1];
			struct.length --;
			var moveObj:Object = struct[n];

			var left:int = n &lt;&lt; 1;
			var right:int = left + 1;
			var endLen:int = struct.length;
			while(right &lt; endLen)
			{

				var min:int = compareFunc(struct[left],struct[right]) ? left : right;

				if(compareFunc(moveObj,struct[min]))
				{
					// 停止 二叉堆完成
					break;
				}else
				{
					var tempObj:Object = struct[min];
					struct[min] = moveObj;
					struct[n] = tempObj;
					n = min;
					left = n &lt;&lt; 1;
					right = left + 1;
				}
			}
			return shiftObj;
		}

		public function get length():int
		{
			return struct.length;
		}

		public function toString():String
		{
			return struct.toString();
		}
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>526</wp:post_id>
		<wp:post_date>2012-09-11 16:08:52</wp:post_date>
		<wp:post_date_gmt>2012-09-11 08:08:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8%e4%ba%8ea%e7%9a%84-%e4%ba%8c%e5%8f%89%e5%a0%86-as3%e5%ae%9e%e7%8e%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="%e4%ba%8c%e5%8f%89%e5%a0%86"><![CDATA[二叉堆]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95%e5%ad%a6%e4%b9%a0"><![CDATA[算法学习]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Event 元标签中的代码提示问题</title>
		<link>http://blog.as3er.com/?p=575</link>
		<pubDate>Sat, 08 Dec 2012 10:21:56 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=575</guid>
		<description></description>
		<content:encoded><![CDATA[自定的事件可以利用Event元标签在支持该事件的类里面做绑定，绑定后FlashBuilder会有代码提示，以提示该类支持的事件类型
<pre class="brush:as3">package view
{
  import flash.events.EventDispatcher;
  import flash.events.IEventDispatcher;
  [Event(name=&amp;quot;all_resource_complete&amp;quot;, type=&amp;quot;events.TEvent&amp;quot;)]
  [Event(name=&amp;quot;iso&amp;quot;, type=&amp;quot;events.TEvent&amp;quot;)]

  public class TestView extends EventDispatcher
  {
   public function TestView(target:IEventDispatcher=null)
   {
     super(target);
// addEventListener(
   }
  }
}</pre>
但是要注意，在定义事件类型的时候，如果字符串是用的单引号，那么在FlashBuilder里面的代码提示就会变成字符串而不是常量
比如：
<pre class="brush:as3">package events
{
  import flash.events.Event;

public class TEvent extends Event
{
public function TEvent(type:String, bubbles:Boolean=false, cancelable:Boolean=false)
{
  super(type, bubbles, cancelable);
}

public static const ALL_RESOURCE_COMPLETE:String = 'all_resource_complete';//单引号

public static const ISO_MOUSE:String = &amp;quot;iso&amp;quot;//双引号
}
}</pre>
在FlashBuilder4.6里面的提示就会变成这样
<a href="http://blog.as3er.com/wp-content/uploads/2012/12/屏幕快照-2012-12-08-下午5.37.34.png"><img class="alignnone size-medium wp-image-733" alt="屏幕快照 2012-12-08 下午5.37.34" src="http://blog.as3er.com/wp-content/uploads/2012/12/屏幕快照-2012-12-08-下午5.37.34-300x137.png" width="300" height="137" /></a> <a href="http://blog.as3er.com/wp-content/uploads/2012/12/屏幕快照-2012-12-08-下午5.38.42.png"><img class="alignnone size-medium wp-image-734" alt="屏幕快照 2012-12-08 下午5.38.42" src="http://blog.as3er.com/wp-content/uploads/2012/12/屏幕快照-2012-12-08-下午5.38.42-300x146.png" width="300" height="146" /></a>
单引号的事件类型 会被提示为字符串
但是在FlashBuilder4.7里面的提示则是，单引号双引号都是正常的
<a href="http://blog.as3er.com/wp-content/uploads/2012/12/屏幕快照-2012-12-08-下午5.38.42.png"><img class="alignnone size-medium wp-image-734" alt="屏幕快照 2012-12-08 下午5.38.42" src="http://blog.as3er.com/wp-content/uploads/2012/12/屏幕快照-2012-12-08-下午5.38.42-300x146.png" width="300" height="146" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>575</wp:post_id>
		<wp:post_date>2012-12-08 18:21:56</wp:post_date>
		<wp:post_date_gmt>2012-12-08 10:21:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>event-%e5%85%83%e6%a0%87%e7%ad%be%e4%b8%ad%e7%9a%84%e4%bb%a3%e7%a0%81%e6%8f%90%e7%a4%ba%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="event%e5%85%83%e6%a0%87%e7%ad%be"><![CDATA[Event元标签]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stage3D_Game_Programming:渲染3D模型</title>
		<link>http://blog.as3er.com/?p=588</link>
		<pubDate>Sun, 16 Dec 2012 15:39:40 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://www.as3er.com/blog/?p=588</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

先扯点题外话，前日又和朋友讨论加班的事情。我说我不知道别人是怎样的，我连续编码4-5个小时就会精疲力尽，如果每天我都保证4-5个小时的编码时间，那么基本上我都是可以准时下班的。我跟同事们也是这么说的，从来都没觉得工作时间的长短可以说明什么问题。如果只是以工作时间的长短来评判一个员工的好坏是不公平且不科学的。不是吐槽哦~~

OBJ是文件，先来解释下OBJ文件。随便找一个OBJ文件，用文本查看：
<pre class="brush:as3"># Max2Obj Version 4.0 Mar 10th, 2001
#
# object (null) to come ...
#
v -0.257 0.191 0.423
v -0.115 0.29 -0.068
v -0.237 0 -0.074
v -0.237 0.071 0.646
...
# 82 vertices
vt 0.623 0.227 0
vt 0.615 0.53 0
vt 0.895 0.555 0
vt 0.825 0.246 0
vt 0.647 0.847 0
...
# 39 texture vertices
f 1/1 2/2 3/3
f 3/3 4/4 1/1
f 2/2 5/5 6/6
f 6/6 3/3 2/2
...
# 142 faces</pre>
v:是模型的顶点信息
vt:是贴图的UV坐标
f:是定义面的顶点索引和顶点对应的UV坐标索引
清楚了OBJ文件里各种数据所代表的信息，接下来就是如何把数据传递给显卡渲染。
那么我们需要一个解析OBJ文件的类(代码比较简单，注释就省了)
<pre class="brush:as3">package com.parser
{
	import flash.utils.ByteArray;

	/**
	 * OBJ文件解析器
	 * @author vanCopper
	 */
	public class OBJParser
	{
		private var _lines:Array;
		private const LINE_FEED:String = String.fromCharCode(10);
		private const SPACE:String = String.fromCharCode(32);
		private var _scale:Number;
		public function OBJParser(objfile:ByteArray,scale:Number = 1)
		{
			_scale = scale;
			if(objfile)
			{
				var lineStr:String = parserToStr(objfile);
				_lines = lineStr.split(LINE_FEED);
				var loop:uint = _lines.length;
				for(var i:uint = 0; i &lt; loop; i++)
				{
					parseLine(_lines[i]);
				}
			}	
		}

		private const VERTEX:String = 'v';
		private const UV:String = 'vt';
		private const INDEX_DATA:String = 'f';
		private function parseLine(lineStr:String):void
		{
			var data:Array = lineStr.split(SPACE);
			if(!data.length)return;
			var key:String = data[0];
			var parseData:Array = data.slice(1);
			switch(key)
			{
				case VERTEX:
					parseVertex(parseData);
					break;
				case UV:
					parseUV(parseData);
					break;
				case INDEX_DATA:
					parseIndexData(parseData);
					break;
			}
		}

		private var _vertices:Vector.&lt;Number&gt; = new Vector.&lt;Number&gt;();
		private function parseVertex(data:Array):void
		{
			if(data[0] == '' || data[0] == " ")
			{
				data = data.slice(1);
			}
			var loop:uint = data.length;
			for(var i:uint = 0; i &lt; loop; i++)
			{
				var value:Number = Number(data[i]);
				_vertices.push(value*_scale);
			}
		}

		private var _uvs:Vector.&lt;Number&gt; = new Vector.&lt;Number&gt;();
		private function parseUV(data:Array):void
		{
			if(data[0] == '' || data[0] == " ")
			{
				data = data.slice(1);
			}
			var loop:uint = 2;
			for(var i:uint = 0; i &lt; loop; i++)
			{
				var value:Number = Number(data[i]);
				_uvs.push(value*_scale);
			}
		}

		private const SLASH:String = "/";
		private var _indexData:Vector.&lt;uint&gt; = new Vector.&lt;uint&gt;();
		private var _vertexsData:Vector.&lt;Number&gt; = new Vector.&lt;Number&gt;();
		private var _uvData:Vector.&lt;Number&gt; = new Vector.&lt;Number&gt;();
		private var _faceIndex:uint;
		private function parseIndexData(data:Array):void
		{
			var index:uint = 0;
			while((data[index] == '') || (data[index] == ' '))index++;
			var loop:uint = index+3;

			var vertexIndex:int;
			var uvIndex:int;
			var normalIndex:int;
			for(var i:uint = index; i &lt; loop; i++)
			{
				var triplet:String = data[i];
				var subdata:Array = triplet.split(SLASH);
				vertexIndex = int(subdata[0]) - 1;
				uvIndex     = int(subdata[1]) - 1;

				if(vertexIndex &lt; 0) vertexIndex = 0;
				if(uvIndex &lt; 0) uvIndex = 0;

				index = 3*vertexIndex;
				_vertexsData.push(_vertices[index + 0], 
				_vertices[index + 1], _vertices[index + 2]);

				index = 2*uvIndex;
				_uvData.push(1-_uvs[index+0],1-_uvs[index+1]);
			}
			_indexData.push(_faceIndex+0,_faceIndex+1,_faceIndex+2);
			_faceIndex += 3;
		}

		private function parserToStr(objFileByteArray:ByteArray):String
		{
			return objFileByteArray.readUTFBytes(objFileByteArray.bytesAvailable);
		}

		/**
		 * 顶点数据 
		 * @return 
		 * 
		 */		
		public function get vertexsData():Vector.&lt;Number&gt;
		{
			return _vertexsData;
		}

		/**
		 * UV数据 
		 * @return 
		 * 
		 */		
		public function get uvData():Vector.&lt;Number&gt;
		{
			return _uvData;
		}

		/**
		 * 索引数据 
		 * @return 
		 * 
		 */		
		public function get indexData():Vector.&lt;uint&gt;
		{
			return _indexData;
		}

	}
}</pre>
<pre class="brush:applescript"></pre>
有了顶点信息，uv信息和面的索引信息接下来就可以把这货渲染出来了。
<pre class="brush:as3">package
{
	import com.adobe.utils.AGALMiniAssembler;
	import com.adobe.utils.PerspectiveMatrix3D;
	import com.parser.OBJParser;

	import flash.display.Bitmap;
	import flash.display.BitmapData;
	import flash.display.Sprite;
	import flash.display.Stage3D;
	import flash.display.StageAlign;
	import flash.display.StageScaleMode;
	import flash.display3D.Context3D;
	import flash.display3D.Context3DProgramType;
	import flash.display3D.Context3DTextureFormat;
	import flash.display3D.Context3DVertexBufferFormat;
	import flash.display3D.IndexBuffer3D;
	import flash.display3D.Program3D;
	import flash.display3D.VertexBuffer3D;
	import flash.display3D.textures.Texture;
	import flash.events.Event;
	import flash.geom.Matrix;
	import flash.geom.Matrix3D;
	import flash.geom.Vector3D;
	import flash.utils.ByteArray;

	[SWF(width='800',height='600',backgroundColor='0x333333',frameRate="60")]
	/**
	 * 
	 * @author vanCopper
	 */
	public class GameTest extends Sprite
	{
		[Embed (source = "art/spaceship.obj", 
		mimeType = "application/octet-stream")] 
		private var objData:Class;

		[Embed (source = "art/spaceship_texture.jpg")] 
		private var TextureBitmap:Class;
		private var textureData:Bitmap = new TextureBitmap();

		private var _stage3D:Stage3D;
		private var _context3D:Context3D;
		private const sw:uint = 700;
		private const sh:uint = 500;

		private var _objParser:OBJParser;
		//顶点缓冲 存储顶点信息
		private var _vertexBuffer:VertexBuffer3D;
		//顶点缓冲 存储UV信息
		private var _uvBuffer:VertexBuffer3D;
		//顶点索引
		private var _indexBuffer:IndexBuffer3D;
		private var _texture:Texture;
		private var _textureSize:uint = 512;
		private var _projectionmatrix:PerspectiveMatrix3D;
		private var _viewmatrix:Matrix3D;
		private var _modelmatrix:Matrix3D = new Matrix3D();
		private var _modelViewProjection:Matrix3D = new Matrix3D();

		private var _vertexShaderAssembler:AGALMiniAssembler;
		private var _fragmentAssembler:AGALMiniAssembler;
		private var _program:Program3D;

		public function GameTest()
		{
			if(this.stage)
			{
				init();
			}else
			{
				addEventListener(Event.ADDED_TO_STAGE,init);
			}
		}

		private function init(e:Event = null):void
		{
			if(hasEventListener(Event.ADDED_TO_STAGE))removeEventListener(Event.ADDED_TO_STAGE,init);
			this.stage.scaleMode = StageScaleMode.NO_SCALE;
			this.stage.align = StageAlign.TOP_LEFT;
			initStage3D();
		}

		private function initStage3D():void
		{
			_stage3D = this.stage.stage3Ds[0];
			if(_stage3D)
			{
				_stage3D.addEventListener(Event.CONTEXT3D_CREATE,onContext3DCreate);
				_stage3D.requestContext3D();
			}
		}

		private function onContext3DCreate(e:Event):void
		{
			_context3D = _stage3D.context3D;
			if(_context3D == null)
			{
				throw new Error("无法创建Context3D");
				return;
			}

			_stage3D.x = (this.stage.stageWidth - sw)/2;
			_stage3D.y = (this.stage.stageHeight - sh)/2;

			_context3D.configureBackBuffer(sw,sh,1);
			_context3D.clear(205,205,205);
			_context3D.enableErrorChecking = true;
			initData();
			initShader();
			this.stage.addEventListener(Event.ENTER_FRAME,onEnterFrame);
		}

		private function initData():void
		{
			var objdata:ByteArray = new objData() as ByteArray;
			_objParser = new OBJParser(objdata);

			var vertexCont:uint = _objParser.vertexsData.length/3;
			_vertexBuffer = _context3D.createVertexBuffer(vertexCont,3);
			_vertexBuffer.uploadFromVector(_objParser.vertexsData,0,vertexCont);

			var uvCont:uint = _objParser.uvData.length/2;
			_uvBuffer = _context3D.createVertexBuffer(uvCont,2);
			_uvBuffer.uploadFromVector(_objParser.uvData,0,uvCont);

			_context3D.setVertexBufferAt(0,_vertexBuffer,0,Context3DVertexBufferFormat.FLOAT_3);
			_context3D.setVertexBufferAt(1,_uvBuffer,0,Context3DVertexBufferFormat.FLOAT_2);

			var indexData:Vector.&lt;uint&gt; = _objParser.indexData;
			_indexBuffer = _context3D.createIndexBuffer(indexData.length);
			_indexBuffer.uploadFromVector(indexData,0,indexData.length);

			_texture = _context3D.createTexture(_textureSize,_textureSize,Context3DTextureFormat.BGRA,false);
			uploadTextureWithMipmaps(_texture,textureData.bitmapData);

			_projectionmatrix = new PerspectiveMatrix3D();
			_projectionmatrix.identity();
			// 45 degrees FOV, 640/480 aspect ratio, 0.1=near, 100=far
			_projectionmatrix.perspectiveFieldOfViewRH(
				45.0, sw / sh, 0.01, 100.0);

			_viewmatrix = new Matrix3D();
			// camera Matrix3D
			_viewmatrix.identity();
			// 移动镜头到(0,0,0)
			_viewmatrix.appendTranslation(0,0,0);
		}

		private function initShader():void
		{
			_vertexShaderAssembler = new AGALMiniAssembler();
			_vertexShaderAssembler.assemble(Context3DProgramType.VERTEX,
				"m44 op, va0, vc0\n" +
				"mov v0, va0\n" +
				"mov v1, va1\n");

			_fragmentAssembler= new AGALMiniAssembler();
			_fragmentAssembler..assemble
				( 
					Context3DProgramType.FRAGMENT,	
					"tex ft0, v1, fs0 &lt;2d,linear,repeat,miplinear&gt;\n"+
					"mov oc, ft0\n"
				);

			_program = _context3D.createProgram();
			_program.upload(_vertexShaderAssembler.agalcode,_fragmentAssembler.agalcode);
			_context3D.setTextureAt(0,_texture);			
			_context3D.setProgram(_program);
		}

		private var _t:Number = 0;
		private function onEnterFrame(e:Event):void
		{
			_context3D.clear(0,0,0,.7); 
			_t += 2.0;
			_modelmatrix.identity();
			//旋转模型
			_modelmatrix.appendRotation(_t*1.0, Vector3D.Y_AXIS);
			_modelmatrix.appendRotation(_t*-0.2, Vector3D.X_AXIS);
			_modelmatrix.appendRotation(_t*0.3, Vector3D.Y_AXIS);
			_modelmatrix.appendTranslation(-0.4, 0, -5);

			_modelViewProjection.identity();
			_modelViewProjection.append(_modelmatrix);
			_modelViewProjection.append(_viewmatrix);
			_modelViewProjection.append(_projectionmatrix);

			_context3D.setProgramConstantsFromMatrix(Context3DProgramType.VERTEX, 0, _modelViewProjection, true );
			//绘制模型
			_context3D.drawTriangles(_indexBuffer, 0, _objParser.indexData.length/3);
			//呈现至屏幕
			_context3D.present();
		}

		/**
		 * Mipmap 
		 * @param dest
		 * @param src
		 * 
		 */		
		private function uploadTextureWithMipmaps(dest:Texture, src:BitmapData):void
		{
			var ws:int = src.width;
			var hs:int = src.height;
			var level:int = 0;
			var tmp:BitmapData;
			var transform:Matrix = new Matrix();

			tmp = new BitmapData(src.width, src.height, true, 0);

			while ( ws &gt;= 1 &amp;&amp; hs &gt;= 1 )
			{ 
				tmp.draw(src, transform, null, null, null, true); 
				dest.uploadFromBitmapData(tmp, level);
				transform.scale(0.5, 0.5);
				level++;
				ws &gt;&gt;= 1;
				hs &gt;&gt;= 1;
				if (hs &amp;&amp; ws) 
				{
					tmp.dispose();
					tmp = new BitmapData(ws, hs, true, 0x00000000);
				}
			}
			tmp.dispose();
		}

	}
}</pre>
需要源码的朋友可邮件索取 492214810@qq.com]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>588</wp:post_id>
		<wp:post_date>2012-12-16 23:39:40</wp:post_date>
		<wp:post_date_gmt>2012-12-16 15:39:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>stage3d_game_programming%e6%b8%b2%e6%9f%933d%e6%a8%a1%e5%9e%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<wp:postmeta>
			<wp:meta_key>syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D 4.1.4 中实现骨骼绑定</title>
		<link>http://blog.as3er.com/?p=744</link>
		<pubDate>Sun, 10 Nov 2013 08:28:33 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=744</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

骨骼的绑定归根结底就是将目标骨骼的位置以及旋转数据，同步给要绑定的显示对象。

先来看BindingTag.as
<pre class="brush:as3">package away3d.entities
{
	import away3d.arcane;
	import away3d.animators.SkeletonAnimator;
	import away3d.animators.data.JointPose;
	import away3d.containers.ObjectContainer3D;

	use namespace arcane
	/**
	 * 骨骼绑定点 
	 * @author vancopper
	 * 
	 */	
	public class BindingTag extends ObjectContainer3D
	{
		private var _skeletonAnimator:SkeletonAnimator;
		private var _skeletonIndex:int;

		/**
		 * 
		 * @param skeletonAnimator
		 * @param skeletonIndex 要绑定的骨骼索引
		 * 
		 */		
		public function BindingTag(skeletonAnimator:SkeletonAnimator, skeletonIndex:int)
		{
			super();
			_skeletonAnimator = skeletonAnimator;
			_skeletonIndex = skeletonIndex;
		}

		public function notifyBindingTransformChange():void
		{
			invalidateTransform();
		}

		override protected function updateSceneTransform():void
		{
			if (_parent) 
			{
				var jointPoses:Vector.&lt;JointPose&gt; = _skeletonAnimator.globalPose.jointPoses;
				if(jointPoses &amp;&amp; jointPoses.length)
				{
                                        //取到骨骼数据并同步给当前对象
					_sceneTransform.copyFrom( jointPoses[_skeletonIndex].toMatrix3D() );
					_sceneTransform.append( _parent.sceneTransform );
					_sceneTransform.prepend(transform);
				}
			}
			_sceneTransformDirty = false;
		}

		override public function dispose():void
		{
			//TODO:
		}
	}
}</pre>
<pre>BindingTag即是绑定在指定骨骼上的容器，假如你想绑定武器或特效，
只要将他们addChild到该BindingTag就可以了。 
下面看怎样将BindingTag集成到Away3D里面。 
为AnimatorBase添加Exit_Frame事件，至于为什么要加这个Exit_Frame事件，后面再来解释。
分别在start()以及stop()方法里添加、移除Exit_Frame事件</pre>
<pre class="brush:as3">if(!_broadcaster.hasEventListener(Event.EXIT_FRAME))
	_broadcaster.addEventListener(Event.ENTER_FRAME, onExitFrame);

if(_broadcaster.hasEventListener(Event.EXIT_FRAME))
	_broadcaster.removeEventListener(Event.EXIT_FRAME, onExitFrame);

protected function onExitFrame(event:Event):void
{
	//Override
}</pre>
<pre>为SkeletonAnimator添加addBindingTagByName，addBindingTagByIndex方法
以及复写onExitFrame</pre>
<pre class="brush:as3">/**
		 * 绑定至通过名字指定的骨骼上 
		 * @param boneName
		 * @return 
		 * 
		 */		
		public function addBindingTagByName(boneName:String):BindingTag
		{
			var boneIndex : int = globalPose.jointPoseIndexFromName(boneName);
			if(boneIndex&lt;0)//骨骼不存在
				return null;
			return addBindingTagByIndex(boneIndex);
		}

		/**
		 * 绑定至通过骨骼索引指定的骨骼上 
		 * @param boneIndex
		 * @return 
		 * 
		 */		
		public function addBindingTagByIndex(boneIndex:int):BindingTag
		{
			var bindingTag:BindingTag = new BindingTag(this, boneIndex);

			for(var i:int = 0; i &lt; _owners.length; i++)
			{
				_owners[i].addChild(bindingTag);//将bindingTag添加至骨骼对应的Mesh
			}

			if(!_bindingTags)_bindingTags = new Vector.&lt;BindingTag&gt;();
			_bindingTags.push(bindingTag);			
			return bindingTag;
		}

		override protected function onExitFrame(event:Event):void
		{
			if(_bindingTags &amp;&amp; _bindingTags.length)
			{
				for (var i:int = 0; i &lt; _bindingTags.length; i++)
				{
					_bindingTags[i].notifyBindingTransformChange();
				}
			}
		}</pre>
<pre>到这里就已经代码已经都修改添加完成了，下面来说下为什么要在Exit_Frame事件中通知
BindingTag更新.骨骼的更新是在skeletonAnimatior的updateGlobalProperties方法中
进行的，他的更新是在引擎执行完traverse后执行的，所以为了保证每次执行traverse时都能让
BindingTag根据骨骼更新，需在Exit_Frame时通知，否则BindingTag的更新总会延迟一帧，
从而导致跟随出现错位问题。
下面利用官方例子Intermediate_MD5Animation测试了一下
在481行添加以下代码</pre>
<pre class="brush:as3">var bindingTag:BindingTag = animator.addBindingTagByIndex(11);
bindingTag.addChild(new Trident(100));</pre>
<pre>点击图片链接至demo，需加载3M左右资源</pre>
<a href="http://blog.as3er.com/demo/bindingTag.html" target="_blank"><img class="alignnone size-medium wp-image-762" alt="bindingTag" src="http://blog.as3er.com/wp-content/uploads/2013/11/bindingTag-300x232.png" width="300" height="232" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>744</wp:post_id>
		<wp:post_date>2013-11-10 16:28:33</wp:post_date>
		<wp:post_date_gmt>2013-11-10 08:28:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-4-1-4-%e4%b8%ad%e5%ae%9e%e7%8e%b0%e9%aa%a8%e9%aa%bc%e7%bb%91%e5%ae%9a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<category domain="post_tag" nicename="%e9%aa%a8%e9%aa%bc%e7%bb%91%e5%ae%9a"><![CDATA[骨骼绑定]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3D页游场景的加载优化</title>
		<link>http://blog.as3er.com/?p=783</link>
		<pubDate>Mon, 25 Nov 2013 10:55:30 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=783</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="color: #ff6600;">原创博文，转载请声明</span></strong>

3D页游场景资源量相对2D场景要大许多。如何保证玩家快速进入场景是场景优化的第一步。

首先，场景不可能用户进去就能一览无余。所以考虑将场景分批加载，分批加载需要解决

场景穿帮问题以及如何组织资源以便分批加载。

1.利用3dmax导出场景资源配置：3dmax里面利用layer工具就可以对场景进行组织以决定加载

的先后顺序。

<a href="http://blog.as3er.com/wp-content/uploads/2013/11/maxLayer.jpg"><img class="alignnone size-medium wp-image-784" alt="maxLayer" src="http://blog.as3er.com/wp-content/uploads/2013/11/maxLayer-300x176.jpg" width="300" height="176" /></a>

&nbsp;

2.场景配置导出的时候将物件所在的层索引一并导出

<a href="http://blog.as3er.com/wp-content/uploads/2013/11/mapxml.jpg"><img class="alignnone size-medium wp-image-786" alt="mapxml" src="http://blog.as3er.com/wp-content/uploads/2013/11/mapxml-300x96.jpg" width="300" height="96" /></a>

&nbsp;

3.导出的配置文件就是场景配置，在配置里还可以导出更多信息，比如场景物件位置，旋转以及是否

支持透贴，是否接受或响应阴影等信息。

4.最后通过场景配置来分批加载还原场景，通过分层可将进入场景的时间控制在很短的时间内。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>783</wp:post_id>
		<wp:post_date>2013-11-25 18:55:30</wp:post_date>
		<wp:post_date_gmt>2013-11-25 10:55:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3d%e9%a1%b5%e6%b8%b8%e5%9c%ba%e6%99%af%e7%9a%84%e5%8a%a0%e8%bd%bd%e4%bc%98%e5%8c%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于我</title>
		<link>http://blog.as3er.com/?p=799</link>
		<pubDate>Mon, 25 Nov 2013 13:34:13 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=799</guid>
		<description></description>
		<content:encoded><![CDATA[如对blog内容有疑问或其他问题可邮件或微博联系我

Mail:  <strong>vancopperm@gmail.com</strong>

Weibo: <a href="http://weibo.com/jasonluck" target="_blank"><strong>VanCopper</strong></a>

QQ: 四922一四八10]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>799</wp:post_id>
		<wp:post_date>2013-11-25 21:34:13</wp:post_date>
		<wp:post_date_gmt>2013-11-25 13:34:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>1</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D 灰度图全屏滤镜（GrayScale）</title>
		<link>http://blog.as3er.com/?p=811</link>
		<pubDate>Thu, 28 Nov 2013 12:44:44 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=811</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

away3d里面提供几种全屏特效：BloomFilter3D，BlurFilter3D，DepthOfFieldFilter3D，HBlurFilter3D，
HDepthOfFieldFilter3D，HueSaturationFilter3D，MotionBlurFilter3D，RadialBlurFilter3D，
VBlurFilter3D，VDepthOfFieldFilter3D

今天lipi提到了灰度图效果，花时间弄了一个。先看下最终效果：

<a href="http://blog.as3er.com/wp-content/uploads/2013/11/灰度图.jpg"><img class="alignnone size-medium wp-image-812" alt="灰度图" src="http://blog.as3er.com/wp-content/uploads/2013/11/灰度图-300x224.jpg" width="300" height="224" /></a>

<a title="GrayScaleDemo" href="http://blog.as3er.com/demo/GrayScale.html" target="_blank">Demo链接</a>

1.添加滤镜Task：Filter3DGrayScaleTask.as 用了两种实现方法，第一种灰度效果会偏暗，第二种效果稍微好些，并且几个参数都是可调的。公式来自Google，所以里面的0.3，0.59，0.11是公式推导出来的，有兴趣的可以去Google下。
<pre class="brush:as3">package away3d.filters.tasks
{
	import flash.display3D.Context3DProgramType;
	import flash.display3D.textures.Texture;

	import away3d.cameras.Camera3D;
	import away3d.core.managers.Stage3DProxy;

	/**
	 *  
	 * @author vancopper
	 * 
	 */	
	public class Filter3DGrayScaleTask extends Filter3DTaskBase
	{
		private var _rfactor:Number = 0.3;
		private var _gfactor:Number = 0.59;
		private var _bfactor:Number = 0.11;
		public function Filter3DGrayScaleTask(requireDepthRender:Boolean=false)
		{
			super(requireDepthRender);
		}

		public function get bfactor():Number
		{
			return _bfactor;
		}

		public function set bfactor(value:Number):void
		{
			_bfactor = value;
		}

		public function get gfactor():Number
		{
			return _gfactor;
		}

		public function set gfactor(value:Number):void
		{
			_gfactor = value;
		}

		public function get rfactor():Number
		{
			return _rfactor;
		}

		public function set rfactor(value:Number):void
		{
			_rfactor = value;
		}

		override protected function getFragmentCode():String
		{
//-------------公式一 偏暗 ----------------//
//			var code:String = "tex ft0, v0, fs0 &lt;2d,clamp,linear&gt;\n" +
//
//				"dp3 ft0.x, ft0, fc0\n" +
//				
//				"mov ft0.y, ft0.x\n" +
//				
//				"mov ft0.z, ft0.x\n" +
//				
//				"mov oc, ft0\n";
//			
//-------------公式二-------------------//			
//			val = 0.3*R + 0.59*G + 0.11*B;
//			R = val;
//			G = val;
//			B = val;
			var code:String = 
				"tex ft0, v0, fs0 &lt;2d,linear,nomip&gt;\n" +
				"mul ft1.x, ft0.x, fc1.x\n" +
				"mul ft1.y, ft0.y, fc1.y\n" +
				"mul ft1.z, ft0.z, fc1.z\n" +
				"add ft1.w, ft1.x, ft1.y\n" +
				"add ft1.w, ft1.w, ft1.z\n" +
				"mov ft0.x, ft1.w\n" +
				"mov ft0.y, ft1.w\n" +
				"mov ft0.z, ft1.w\n" +
				"mov oc,ft0";

			return code;
		}

		override public function activate(stage3DProxy:Stage3DProxy, camera:Camera3D, depthTexture:Texture):void
		{
			stage3DProxy.context3D.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 1, Vector.&lt;Number&gt;([_rfactor, _gfactor, _bfactor,0]) );
		}
	}
}</pre>
2.GrayScaleFilter3D.as 公开Task的几个可调的参数。
<pre class="brush:as3">package away3d.filters
{
	import away3d.filters.tasks.Filter3DGrayScaleTask;

	/**
	 * 灰度滤镜 
	 * @author vancopper
	 * 
	 */	
	public class GrayScaleFilter3D extends Filter3DBase
	{
		private var _grayScaleTask:Filter3DGrayScaleTask;
		public function GrayScaleFilter3D()
		{
			super();
			_grayScaleTask = new Filter3DGrayScaleTask();
			addTask(_grayScaleTask);
		}

		public function get bfactor():Number
		{
			return _grayScaleTask.bfactor;
		}

		public function set bfactor(value:Number):void
		{
			_grayScaleTask.bfactor = value;
		}

		public function get gfactor():Number
		{
			return _grayScaleTask.gfactor;
		}

		public function set gfactor(value:Number):void
		{
			_grayScaleTask.gfactor = value;
		}

		public function get rfactor():Number
		{
			return _grayScaleTask.rfactor;
		}

		public function set rfactor(value:Number):void
		{
			_grayScaleTask.rfactor = value;
		}

	}
}</pre>
3.用法就更简单了添加Filter到View3D就可以了
<pre class="brush:as3">var grayScaleFilter:GrayScaleFilter3D = new GrayScaleFilter3D();
view.filters3d = [grayScaleFilter];</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>811</wp:post_id>
		<wp:post_date>2013-11-28 20:44:44</wp:post_date>
		<wp:post_date_gmt>2013-11-28 12:44:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-%e7%81%b0%e5%ba%a6%e5%9b%be%e5%85%a8%e5%b1%8f%e6%bb%a4%e9%95%9c%ef%bc%88grayscale%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>openGL ES Game</title>
		<link>http://blog.as3er.com/?p=823</link>
		<pubDate>Thu, 28 Nov 2013 15:31:17 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=823</guid>
		<description></description>
		<content:encoded><![CDATA[准备开始学习openGL ES相关知识。本想买书来参考，国内的书找来找去也没找到合适的。最终找到一本国外的书：Game and Graphics Programming for iOS and Android® with OpenGL® ES 2.0 作者提供了一套轻量级跨平台的C++底层库。

接下来的事情就是按照书上的内容，进一步学习。先把书中用到的SDK和示例代码下载下来：<a href="http://gfx.sio2interactive.com/download.php" target="_blank">http://gfx.sio2interactive.com/download.php</a> 如果是IOS平台，例子运行很简单，直接找到IOS下对应的templateApp.xcodeproj就可以编译运行了。

<a href="http://blog.as3er.com/wp-content/uploads/2013/11/game_01.png"><img class="alignnone size-medium wp-image-827" alt="game_01" src="http://blog.as3er.com/wp-content/uploads/2013/11/game_01-156x300.png" width="156" height="300" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>823</wp:post_id>
		<wp:post_date>2013-11-28 23:31:17</wp:post_date>
		<wp:post_date_gmt>2013-11-28 15:31:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opengl-es-game</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[openGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mac OS搭建 openGL开发环境</title>
		<link>http://blog.as3er.com/?p=836</link>
		<pubDate>Fri, 13 Dec 2013 08:53:33 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=836</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="color: #ff6600;">原创博文，转载请声明</span></strong>

参考自&lt;openGL超级宝典&gt;

1.从<a href="https://code.google.com/p/oglsuperbible5/source/checkout" target="_blank">https://code.google.com/p/oglsuperbible5/source/checkout</a>下载源码

2.在xCode中创建Cocoa application

<a href="http://blog.as3er.com/wp-content/uploads/2013/12/01.png"><img class="alignnone size-medium wp-image-838" alt="01" src="http://blog.as3er.com/wp-content/uploads/2013/12/01-300x206.png" width="300" height="206" /></a>

&nbsp;

3.删除项目中的AppDelegate.h,AppDelegate.m,MainMenu.xib,main.m

<a href="http://blog.as3er.com/wp-content/uploads/2013/12/02.png"><img class="alignnone size-medium wp-image-839" alt="02" src="http://blog.as3er.com/wp-content/uploads/2013/12/02-300x167.png" width="300" height="167" /></a>

&nbsp;

4.添加GLTools搜索路径，GLTools在第一步下载的src文件夹中

<a href="http://blog.as3er.com/wp-content/uploads/2013/12/03.png"><img class="alignnone size-medium wp-image-840" alt="03" src="http://blog.as3er.com/wp-content/uploads/2013/12/03-300x71.png" width="300" height="71" /></a>

&nbsp;

<a href="http://blog.as3er.com/wp-content/uploads/2013/12/04.png"><img class="alignnone size-medium wp-image-841" alt="04" src="http://blog.as3er.com/wp-content/uploads/2013/12/04-300x184.png" width="300" height="184" /></a>

5.右键单击"Frameworks"文件夹，添加"OpenGL.framework"和"GLUT.framework"(System/Library/Frameworks/GLUT.framework&amp;OpenGL.framework)

6.在Supporting Files中新建C++ Files 编写对应代码，编译运行

<a href="http://blog.as3er.com/wp-content/uploads/2013/12/05.png"><img class="alignnone size-medium wp-image-842" alt="05" src="http://blog.as3er.com/wp-content/uploads/2013/12/05-300x190.png" width="300" height="190" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>836</wp:post_id>
		<wp:post_date>2013-12-13 16:53:33</wp:post_date>
		<wp:post_date_gmt>2013-12-13 08:53:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mac-os%e6%90%ad%e5%bb%ba-opengl%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[openGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D 扩展WireframeTriangle（线框三角）</title>
		<link>http://blog.as3er.com/?p=848</link>
		<pubDate>Sun, 05 Jan 2014 14:58:54 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=848</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

本是想以线框的方式查看一下地形模型，不想Away3D中的线框材质非常不友好，不支持透明也就算了，还有各种报错。

其实直接换模型材质也不好，最好的还是用根据模型生成线框实体来的方便。花时间弄了一个，效果如图:

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/wireframe_img.jpg"><img class="alignnone size-medium wp-image-850" alt="wireframe_img" src="http://blog.as3er.com/wp-content/uploads/2014/01/wireframe_img-300x268.jpg" width="300" height="268" /></a>

WireframeTriangle.as
<pre class="brush:as3">package copper3d.primitives
{
	import flash.geom.Vector3D;

	import away3d.primitives.WireframePrimitiveBase;

	/**
	 * 线框三角 
	 * @author vancopper
	 * 
	 */	
	public class WireframeTriangle extends WireframePrimitiveBase
	{
		/**
		 * 三角形顶点索引 
		 */		
		private var _vertexIndices:Vector.&lt;uint&gt;;
		/**
		 * 顶点 
		 */		
		private var _vertices:Vector.&lt;Number&gt;;

		/**
		 *  
		 * @param vertexIndices 三角形顶点索引
		 * @param vertices 顶点
		 * @param color
		 * @param thickness
		 * 
		 */		
		public function WireframeTriangle(vertexIndices:Vector.&lt;uint&gt;, vertices:Vector.&lt;Number&gt;, color:uint=0xffffff, thickness:Number=1)
		{
			_vertexIndices = vertexIndices;
			_vertices = vertices;
			super(color, thickness);
		}

		override protected function buildGeometry():void
		{
			var numTriangle:uint = _vertexIndices.length/3;
			var indexA:uint;
			var indexB:uint;
			var indexC:uint;

			var posA:Vector3D;
			var posB:Vector3D;
			var posC:Vector3D;
			var segmentIndex:uint = 0;
			for(var i:int=0; i&lt;numTriangle; i++)
			{
				indexA = _vertexIndices[i*3];
			    indexB = _vertexIndices[i*3 + 1];
				indexC = _vertexIndices[i*3 + 2];

				posA = new Vector3D(_vertices[indexA*3], _vertices[indexA*3 + 1], _vertices[indexA*3 + 2]);
				posB = new Vector3D(_vertices[indexB*3], _vertices[indexB*3 + 1], _vertices[indexB*3 + 2]);
				posC = new Vector3D(_vertices[indexC*3], _vertices[indexC*3 + 1], _vertices[indexC*3 + 2]);
				//线段AB
				updateOrAddSegment(++segmentIndex, posA, posB);
				//线段BC
				updateOrAddSegment(++segmentIndex, posB, posC);
				//线段CA
				updateOrAddSegment(++segmentIndex, posC, posA);
			}
		}
	}
}</pre>
用法：
<pre class="brush:as3">//将需要以线框查看的模型顶点索引以及顶点数据传入即可
_wireframeTriangle =  new WireframeTriangle(mesh.geometry.subGeometries[0].indexData, mesh.geometry.subGeometries[0].vertexPositionData, 0xffffff);
_view.scene.addChild(_wireframeTriangle);</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>848</wp:post_id>
		<wp:post_date>2014-01-05 22:58:54</wp:post_date>
		<wp:post_date_gmt>2014-01-05 14:58:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-%e6%89%a9%e5%b1%95wireframetriangle%ef%bc%88%e7%ba%bf%e6%a1%86%e4%b8%89%e8%a7%92%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D 地形追踪（一）</title>
		<link>http://blog.as3er.com/?p=856</link>
		<pubDate>Mon, 13 Jan 2014 08:46:23 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=856</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

away3d官方例子中有一个关于地形追踪的例子，用的是通过高度图<a href="http://udn.epicgameschina.com/Three/TerrainHeightmapsCH.html" target="_blank">(关于高度图)</a>获取地形指定点(x,z)上的高度(y)值。使用高度图的方法有一些弊端：

1.需要额外加载一张美术根据地形导出的高度图

2.每次修改地形都需要美术重新生成高度图

另外一种常用思路是先获取指定点(x,z)所在的三角形，然后通过插值计算得出正确的高度(y)值。这里的思路是利用地形模型来完成高度的追踪，然后将高度写入程序动态生成的位图上。将已经计算过的高度写入位图是为了优化性能，避免一个点多次计算。

那么完成地形追踪需要两个步骤：

一.根据地形模型组织用于追踪的三角形数据,并获取到指定点(x,z)所在的三角形

二.根据指定点(x,z)计算出高度，并写入高度图

先看第一步:

如何在地形模型中找到指定点(x,z)所在的三角形？遍历地形模型中所有的三角形来确定目标三角形？那对性能的牺牲太大了，一个不是很大的而且相对简单场景地形也得有上千个三角形。这里可以利用四叉树<a href="http://zh.wikipedia.org/wiki/四叉树" target="_blank">(关于四叉树)</a>来组织和管理这些三角形(因为管理的xz这个二维平面所以采用了四叉树)。

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/TerrainPick.jpg"><img class="alignnone size-medium wp-image-870" alt="TerrainPick" src="http://blog.as3er.com/wp-content/uploads/2014/01/TerrainPick-300x228.jpg" width="300" height="228" /></a>

<a href="http://blog.as3er.com/demo/TerrainPickTest.html" target="_blank">打开Demo</a>

<span style="color: #ff4747;">Demo.as:</span>
<pre class="brush:as3">package
{
	import flash.display.Sprite;
	import flash.display.StageAlign;
	import flash.display.StageScaleMode;
	import flash.events.Event;
	import flash.events.KeyboardEvent;
	import flash.events.MouseEvent;
	import flash.geom.Rectangle;
	import flash.geom.Vector3D;
	import flash.ui.Keyboard;
	
	import away3d.containers.View3D;
	import away3d.controllers.HoverController;
	import away3d.debug.AwayStats;
	import away3d.debug.Trident;
	import away3d.entities.Mesh;
	import away3d.events.AssetEvent;
	import away3d.events.MouseEvent3D;
	import away3d.library.assets.AssetType;
	import away3d.loaders.Loader3D;
	import away3d.loaders.parsers.Parsers;
	import away3d.primitives.CubeGeometry;
	
	import copper3d.primitives.WireframeTriangle;
	import copper3d.terrain.TerrainBoundingBox;
	import copper3d.terrain.TerrainQuadTree;
	import copper3d.terrain.TerrainTriangle;
	
	[SWF(backgroundColor="#FF0000", frameRate="30", width="800", height="600")]
	
	public class TerrainPickTest extends Sprite
	{
		[Embed(source="./assets/terrain_03.3ds",mimeType="application/octet-stream")]
		public static var Terrain:Class;
		
		private var _view:View3D;
		private var _cameraController:HoverController;
		
		private var _move:Boolean = false;
		private var _lastPanAngle:Number;
		private var _lastTiltAngle:Number;
		private var _lastMouseX:Number;
		private var _lastMouseY:Number;

		private var _wireframeTriangle:WireframeTriangle;
		private var _terrainQuadTree:TerrainQuadTree;
		private var _sp:Sprite = new Sprite();
		
		private var _triNum:int = 0;//三角数量
		
		public function TerrainPickTest()
		{
			super();
			init();
		}
		
		private function init():void
		{
			stage.scaleMode = StageScaleMode.NO_SCALE;
			stage.align = StageAlign.TOP_LEFT;
			
			initEng();
			initObject();
		}
		
		private function initEng():void
		{
			_view = new View3D();
			addChild(_view);
			
			_view.camera.lens.far = 10000;
			
			_cameraController = new HoverController(_view.camera, null, 45, 20, 1000);
			
			addChild(new AwayStats(_view));
			
			addEventListener(Event.ENTER_FRAME, onEnterFrame);
			stage.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);
			stage.addEventListener(MouseEvent.MOUSE_UP, onMouseUp);
			stage.addEventListener(MouseEvent.MOUSE_WHEEL, onMouseWheel);
			stage.addEventListener(Event.RESIZE, onResize);
		}
		
		private function initObject():void
		{
			Parsers.enableAllBundled();
			var loader:Loader3D = new Loader3D();
			loader.addEventListener(AssetEvent.ASSET_COMPLETE, onAssetComplete);
			loader.loadData(new Terrain());
			_view.scene.addChild(loader);
			_view.scene.addChild(new Trident());
		}
		
		private function onAssetComplete(event:AssetEvent):void
		{
			if(event.asset.assetType == AssetType.MESH)
			{
				var mesh:Mesh = event.asset as Mesh;
				_wireframeTriangle =  new WireframeTriangle(mesh.geometry.subGeometries[0].indexData, mesh.geometry.subGeometries[0].vertexPositionData);
				_view.scene.addChild(_wireframeTriangle);
				_terrainQuadTree = new TerrainQuadTree();
				_terrainQuadTree.setTerrainGeo(mesh.geometry.subGeometries[0]);
				_terrainQuadTree.buildQuadTree(10, 100);
				
				_sp.graphics.lineStyle(2, 0xFF0000);
				
				_terrainQuadTree.drawTree(_sp.graphics);
				
				var rect:Rectangle = _sp.getRect(_sp);
				_sp.x = Math.abs(rect.topLeft.x);
				_sp.y = Math.abs(rect.topLeft.y);
				addChild(_sp);
				
				_triNum = mesh.geometry.subGeometries[0].numTriangles;
				
				mesh.mouseEnabled = true;
				mesh.addEventListener(MouseEvent3D.MOUSE_DOWN, on3DMouseDown);
			}
		}
		
		private function on3DMouseDown(e:MouseEvent3D):void
		{
			var cube:Mesh = new Mesh(new CubeGeometry());
			cube.position = e.localPosition;
			_view.scene.addChild(cube);
			var color:uint = 0xffffff*Math.random();
			var testTbbox:TerrainBoundingBox = new TerrainBoundingBox();
			testTbbox.reset(e.localPosition.x, e.localPosition.z, 10, 10);
			_sp.graphics.lineStyle(2, 0xFFFFFF*Math.random());
			testTbbox.draw(_sp.graphics);
			
			var v:Vector.&lt;TerrainTriangle&gt; = _terrainQuadTree.getTriangles(testTbbox);
			
			for(var i:int = 0; i &lt; v.length; i ++)
			{
				if(TerrainTriangle.checkPointInTriangle(e.localPosition.x, e.localPosition.z, 
														v[i].getVertex(0), v[i].getVertex(1),
														v[i].getVertex(2)))
					{
						v[i].tbbox.draw(_sp.graphics);
						_wireframeTriangle.updateTriangleColor(v[i].index, color);
					}
			}
		}
		
		//-----------------------------------------------------------------------------//
		//-----------------------------------------------------------------------------//
		private function onEnterFrame(event:Event):void
		{
			if (_move) 
			{
				_cameraController.panAngle = 0.3*(stage.mouseX - _lastMouseX) + _lastPanAngle;
				_cameraController.tiltAngle = 0.3*(stage.mouseY - _lastMouseY) + _lastTiltAngle;
			}
			
			_view.render();
		}
		
		private function onMouseWheel(event:MouseEvent) : void
		{
			_cameraController.distance -= event.delta*5;
			
			if (_cameraController.distance &lt; 400)
				_cameraController.distance = 400;
			else if (_cameraController.distance &gt; 10000)
				_cameraController.distance = 10000;
		}
		
		private function onMouseDown(event:MouseEvent):void
		{
			_lastPanAngle = _cameraController.panAngle;
			_lastTiltAngle = _cameraController.tiltAngle;
			_lastMouseX = stage.mouseX;
			_lastMouseY = stage.mouseY;
			_move = true;
			stage.addEventListener(Event.MOUSE_LEAVE, onStageMouseLeave);
		}
		
		private function onMouseUp(event:MouseEvent):void
		{
			_move = false;
			stage.removeEventListener(Event.MOUSE_LEAVE, onStageMouseLeave);
		}
		
		private function onStageMouseLeave(event:Event):void
		{
			_move = false;
			stage.removeEventListener(Event.MOUSE_LEAVE, onStageMouseLeave);
		}
		
		private function onResize(event:Event = null):void
		{
			_view.width = stage.stageWidth;
			_view.height = stage.stageHeight;
		}
	}
}</pre>
TerrainQuadTree.as 地形用四叉树

TerrainQuadTreeNode.as 树的节点

TerrainBoundingBox.as 地形用包围框

TerrainTriangle.as 地形用三角形

<span style="color: #ff4747;">1.TerrainTriangle.as  存储三角形的顶点以及索引等信息</span>
<pre class="brush:as3">package copper3d.terrain
{
	import flash.geom.Vector3D;

	/**
	 * 地形用Triangle 
	 * @author vancopper
	 * 
	 */	
	public class TerrainTriangle
	{
		/**
		 * 三角形顶点索引 
		 */		
		private var _vertexIndices:Vector.&lt;uint&gt;

		/**
		 * 顶点数组 
		 */		
		private var _vertexes:Vector.&lt;Vector3D&gt;;
		/**
		 * 该三角的包围框 
		 */		
		private var _tbbox:TerrainBoundingBox;

		public var index:int;

		public var counter:int = 0;

		public function TerrainTriangle()
		{
			_vertexIndices = new Vector.&lt;uint&gt;(3, true);
			_vertexes = new Vector.&lt;Vector3D&gt;(3, true);
			_tbbox = new TerrainBoundingBox();
		}

		public function setVertexIndices(index0:uint, index1:uint, index2:uint, vertexArray:Vector.&lt;Vector3D&gt;):void
		{
			_vertexIndices[0] = index0;
			_vertexIndices[1] = index1;
			_vertexIndices[2] = index2;

			_vertexes[0] = vertexArray[index0];
			_vertexes[1] = vertexArray[index1];
			_vertexes[2] = vertexArray[index2];

			_tbbox.insertVector3D(vertexArray[index0]);
			_tbbox.insertVector3D(vertexArray[index1]);
			_tbbox.insertVector3D(vertexArray[index2]);
		}

		public function get tbbox():TerrainBoundingBox
		{
			return _tbbox;
		}

		public function get vertextIndices():Vector.&lt;uint&gt;
		{
			return _vertexIndices;
		}

		public function getVertexIndex(interiorIndex:uint):uint
		{
			return _vertexIndices[interiorIndex];
		}

		/**
		 * 三角形顶点 
		 * @param pIndex
		 * @return 
		 * 
		 */		
		public function getVertex(pIndex:uint):Vector3D
		{
			return _vertexes[pIndex];
		}

		/**
		 * 判断点是否在三角形内 
		 * @param x
		 * @param z
		 * @param triP1
		 * @param triP2
		 * @param triP3
		 * @return 
		 * 
		 */		
		public static function checkPointInTriangle(x:Number, z:Number, triP1:Vector3D, triP2:Vector3D, triP3:Vector3D):Boolean
		{
			var p1 : Vector3D = triP1;
			var p2 : Vector3D = triP2;
			var p3 : Vector3D = triP3;

			// 直线方程p1-p2
			var A1 : Number = p1.z - p2.z;
			var B1 : Number = p2.x - p1.x;
			var C1 : Number = p1.x * p2.z - p2.x * p1.z;
			// 直线方程p2-p3
			var A2 : Number = p2.z - p3.z;
			var B2 : Number = p3.x - p2.x;
			var C2 : Number = p2.x * p3.z - p3.x * p2.z;
			// 直线方程p3-p1
			var A3 : Number = p3.z - p1.z;
			var B3 : Number = p1.x - p3.x;
			var C3 : Number = p3.x * p1.z - p1.x * p3.z;

			var isInTri : Boolean = false;
			var D1 : Number = A1*x+B1*z+C1;
			var D2 : Number = A2*x+B2*z+C2;
			var D3 : Number = A3*x+B3*z+C3;

			const Tiny : Number = 0.01;
			if( (D1 &gt;= -Tiny &amp;&amp; D2 &gt;= -Tiny &amp;&amp; D3 &gt;= -Tiny) || (D1 &lt;= Tiny &amp;&amp; D2 &lt;= Tiny &amp;&amp; D3 &lt;= Tiny) )
				isInTri = true;

			return isInTri;
		}
	}
}</pre>
<span style="color: #ff4747;">2. TerrainBoundingBox.as 包围框(矩形) 用于碰撞检测等</span>
<pre class="brush:as3">package copper3d.terrain
{
	import flash.display.Graphics;
	import flash.geom.Vector3D;

	/**
	 * 地形四叉树用包围框 (xz平面)
	 * @author vancopper
	 * 
	 */	
	public class TerrainBoundingBox
	{
		
		private var _minX:Number;
		private var _maxX:Number;
		private var _minZ:Number;
		private var _maxZ:Number;
		
		private static var tiny:Number=0.000001;
		
		public function TerrainBoundingBox()
		{
			minX = minZ = 10000000;
			maxX = maxZ = -10000000;
		}
		
		/**
		 * 重设包围框 
		 * @param centerX
		 * @param centerZ
		 * @param sideX
		 * @param sideZ
		 * 
		 */		
		public function reset(centerX:Number, centerZ:Number, sideX:Number, sideZ:Number):void
		{
			_minX = centerX - sideX/2 - tiny;
			_maxX = centerX + sideX/2 + tiny;
			_minZ = centerZ - sideZ/2 - tiny;
			_maxZ = centerZ + sideZ/2 + tiny;
		}
		
		public function insertVector3D(pos:Vector3D):void
		{
			if (pos.x &lt; minX) minX = pos.x - tiny;
			if (pos.x &gt; maxX) maxX = pos.x + tiny;
			if (pos.z &lt; minZ) minZ = pos.z - tiny;
			if (pos.z &gt; maxZ) maxZ = pos.z + tiny;
		}
		
		public function clone():TerrainBoundingBox
		{
			var tbb:TerrainBoundingBox = new TerrainBoundingBox();
			tbb.reset(centerX, centerZ, sideX, sideZ);
			return tbb;
		}
		
		/**
		 * 对角线长度 
		 * @return 
		 * 
		 */		
		public function get diagonal():Number
		{
			return Math.sqrt((maxX - minX)*(maxX - minX) + (maxZ - minZ)*(maxZ - minZ));
		}
		
		/**
		 * 检测两个TerrainBoundingBox是否重叠或包含
		 * @param tbb
		 * @return 
		 * 
		 */		
		public function checkIsOverlap(tbb:TerrainBoundingBox):Boolean
		{
			if(minX &gt;= tbb.maxX || 
			   maxX &lt;= tbb.minX ||
			   minZ &gt;= tbb.maxZ ||
			   maxZ &lt;= tbb.minZ)
			{
				return false;
			}
			return true;
		}
		
		/**
		 * 检测点是否在包围框内 
		 * @param pos
		 * @return 
		 * 
		 */		
		public function checkPosIsInside(pos:Vector3D):Boolean
		{
			if( pos.x &gt;= minX &amp;&amp;
				pos.x &lt;= maxX &amp;&amp;
				pos.z &gt;= minZ &amp;&amp;
				pos.z &lt;= maxX)
			{
				return true;
			}
			return false;
		}
		
		/**
		 * 检测线段是否与包围框的边相交 
		 * @param p1x
		 * @param p1z
		 * @param p2x
		 * @param p2z
		 * @return 
		 * 
		 */		
		public function checkLineIsInside(p1x:Number, p1z:Number, p2x:Number, p2z:Number):Boolean
		{
			var bool:Boolean = false;
			
			var A1 : Number = p1z - p2z;
			var B1 : Number = p2x - p1x;
			var C1 : Number = p1x * p2z - p2x * p1z;
			
			var lineZ : Number = (-C1 - A1*minX) / B1;
			if(lineZ &lt;= maxZ &amp;&amp; lineZ &gt;= minZ) bool = true;
			lineZ = (-C1 - A1*maxZ) / B1;
			if(lineZ &lt;= maxZ &amp;&amp; lineZ &gt;= minZ) bool = true;
			var lineX : Number = (-C1 - B1*minZ) / A1;
			if(lineX &lt;= maxX &amp;&amp; lineX &gt;= minX) bool = true;
			lineX = (-C1 - B1*maxZ) / A1;
			if(lineX &lt;= maxX &amp;&amp; lineX &gt;= minX) bool = true;
			
			return bool;
		}
		
		public function draw(g:Graphics, scale:Number = 0.03):void
		{
			g.moveTo(minX * scale, minZ * scale);
			g.lineTo(maxX * scale, minZ * scale);
			g.lineTo(maxX * scale, maxZ * scale);
			g.lineTo(minX * scale, maxZ * scale);
			g.lineTo(minX * scale, minZ * scale);
		}
		
		public function dispose():void
		{
			//TODO:
		}

		public function get minX():Number
		{
			return _minX;
		}

		public function set minX(value:Number):void
		{
			_minX = value;
		}

		public function get maxX():Number
		{
			return _maxX;
		}

		public function set maxX(value:Number):void
		{
			_maxX = value;
		}

		public function get minZ():Number
		{
			return _minZ;
		}

		public function set minZ(value:Number):void
		{
			_minZ = value;
		}

		public function get maxZ():Number
		{
			return _maxZ;
		}

		public function set maxZ(value:Number):void
		{
			_maxZ = value;
		}

		public function get centerX():Number
		{
			return (maxX - minX)/2 + minX;
		}

		public function get centerZ():Number
		{
			return (maxZ - minZ)/2 + minZ;
		}

		public function get sideX():Number
		{
			return maxX - minX;
		}
		
		public function get sideZ():Number
		{
			return maxZ - minZ;
		}

	}
}</pre>
<span style="color: #ff4747;">3.TerrainQuadTreeNode.as 四叉树节点</span>
<pre class="brush:as3">package copper3d.terrain
{
	/**
	 * 地形用四叉树节点 
	 * @author vancopper
	 * 
	 */	
	public class TerrainQuadTreeNode
	{
		private var _childNodeIndices:Vector.&lt;int&gt;;
		private var _triangleIndices:Vector.&lt;int&gt;;
		private var _tbbox:TerrainBoundingBox;
		
		public static const QUADTREE_NODE_NUM:uint = 4;
		
		public function TerrainQuadTreeNode(nodeTbbox:TerrainBoundingBox)
		{
			if(nodeTbbox)
			{
				_tbbox = nodeTbbox.clone();
			}else
			{
				_tbbox = new TerrainBoundingBox();
			}
			_childNodeIndices = new Vector.&lt;int&gt;(QUADTREE_NODE_NUM, true);
			_childNodeIndices[0] = -1;
			_triangleIndices = new Vector.&lt;int&gt;();
		}
		
		public function isLeaf():Boolean
		{
			return _childNodeIndices[0] == -1;
		}
		
		public function dispose():void
		{
			//TODO:
		}

		/**
		 * 子节点索引数组 
		 */
		public function get childNodeIndices():Vector.&lt;int&gt;
		{
			return _childNodeIndices;
		}

		/**
		 * @private
		 */
		public function set childNodeIndices(value:Vector.&lt;int&gt;):void
		{
			_childNodeIndices = value;
		}

		/**
		 * 该节点包含的三角面索引 
		 */
		public function get triangleIndices():Vector.&lt;int&gt;
		{
			return _triangleIndices;
		}

		/**
		 * @private
		 */
		public function set triangleIndices(value:Vector.&lt;int&gt;):void
		{
			_triangleIndices = value;
		}

		/**
		 * 该节点的包围框 
		 */
		public function get tbbox():TerrainBoundingBox
		{
			return _tbbox;
		}

		/**
		 * @private
		 */
		public function set tbbox(value:TerrainBoundingBox):void
		{
			_tbbox = value;
		}


	}
}</pre>
<span style="color: #ff4747;">4.TerrainQuadTree.as 地形用四叉树</span>
<pre class="brush:as3">package copper3d.terrain
{
	import flash.display.Graphics;
	import flash.geom.Vector3D;
	
	import away3d.core.base.CompactSubGeometry;

	/**
	 * 地形用四叉树 &lt;/br&gt;
	 * 基于XZ平面 
	 * @author vancopper
	 * 
	 */	
	public class TerrainQuadTree
	{
		private var _nodes:Vector.&lt;TerrainQuadTreeNode&gt;;//所有节点
		private var _vertices:Vector.&lt;Vector3D&gt;;// 所有顶点
		private var _triangles:Vector.&lt;TerrainTriangle&gt;;// 所有三角形
		private var _rootNode:TerrainQuadTreeNode;//树的根节点
		private var _rootTBBox:TerrainBoundingBox;//树的包围框
		
		private var _minY:Number = Number.MAX_VALUE;//地形中的最低点
		private var _maxY:Number = Number.MIN_VALUE;//地形中的最高点
		
		private var _counter:int = 0;//当前检测次数
		
		public function TerrainQuadTree()
		{
			_nodes = new Vector.&lt;TerrainQuadTreeNode&gt;();
			_vertices = new Vector.&lt;Vector3D&gt;();
			_triangles = new Vector.&lt;TerrainTriangle&gt;();
			_rootTBBox = new TerrainBoundingBox();
		}
		
		/**
		 * 设置四叉树地形 &lt;/br&gt;
		 * 每次设置后需调用 buildQuadTree来构建树
		 * @param geo
		 * 
		 */		
		public function setTerrainGeo(geo:CompactSubGeometry):void
		{
			if(!geo)return;
			//添加顶点到 _vertices
			var index:uint = 0;
			var tempVector3D:Vector3D
			while(index &lt; geo.numVertices)
			{
				tempVector3D = new Vector3D();
				tempVector3D.x = geo.vertexPositionData[index*3];
				tempVector3D.y = geo.vertexPositionData[index*3 + 1];
				tempVector3D.z = geo.vertexPositionData[index*3 + 2];
				_vertices.push(tempVector3D);
				index ++;
			}
			
			//添加三角形到 _triangles
			var triIndex:uint = 0;
			var index0:uint;
			var index1:uint;
			var index2:uint;
			var terrainTriangle:TerrainTriangle;
			while(triIndex &lt; geo.numTriangles)
			{
				index0 = geo.indexData[triIndex*3];
				index1 = geo.indexData[triIndex*3 + 1];
				index2 = geo.indexData[triIndex*3 + 2];
				
				terrainTriangle = new TerrainTriangle();
				terrainTriangle.setVertexIndices(index0, index1, index2, _vertices);
				terrainTriangle.index = triIndex;
				_triangles.push(terrainTriangle);
				triIndex ++;
			}
		}
		
		/**
		 * 构建四叉树 
		 * @param numTrianglePerNode 一个节点最多可放置的三角形数量
		 * @param minNodeSize	节点的TerrainBoundingBox大小的最小值
		 * 
		 */		
		public function buildQuadTree(numTrianglePerNode:int, minNodeSize:Number):void
		{
			//TODO: 应重新构建整个树
			for each(var vec:Vector3D in _vertices)
			{
				_rootTBBox.insertVector3D(vec);
				_minY = Math.min(vec.y, _minY);
				_maxY = Math.max(vec.y, _maxY);
			}
			
			_rootNode = new TerrainQuadTreeNode(_rootTBBox);
			_nodes.push(_rootNode);//根节点
			
			var totalTri:uint = _triangles.length;
			for(var i:uint = 0; i &lt; totalTri; i++)
			{
				_rootNode.triangleIndices.push(i);//将所有三角放在根节点
			}
			
			var processNodes:Vector.&lt;int&gt; = new Vector.&lt;int&gt;();
			processNodes.push(0);
			var triIndex:int;
			var nodeIndex:int;
			var childNode:TerrainQuadTreeNode;
			
			while(processNodes.length != 0)
			{
				nodeIndex = processNodes.pop();
				
				if(_nodes[nodeIndex].triangleIndices.length &lt;= numTrianglePerNode ||
					_nodes[nodeIndex].tbbox.diagonal &lt; minNodeSize)
				{
					continue;
				}
				
				for(var n:uint = 0; n &lt; TerrainQuadTreeNode.QUADTREE_NODE_NUM; n++)
				{
					_nodes[nodeIndex].childNodeIndices[n] = _nodes.length;
					processNodes.push(_nodes.length);
					_nodes.push(new TerrainQuadTreeNode(getNodeTBBox(_nodes[nodeIndex].tbbox, n)));
					
					childNode = _nodes[_nodes.length - 1];
					
					totalTri = _nodes[nodeIndex].triangleIndices.length;
					for(var j:uint = 0; j &lt; totalTri; j++)
					{
						triIndex = _nodes[nodeIndex].triangleIndices[j];
						if(checkIsTriangleIntersectNode(_triangles[triIndex], childNode))
						{
							childNode.triangleIndices.push(triIndex);
						}
					}
				}
				_nodes[nodeIndex].triangleIndices.length = 0;
			}
			
		}
		
		/**
		 * 获取某位置下的三角形 
		 * @param tbb
		 * @return 
		 * 
		 */		
		public function getTriangles(tbbox:TerrainBoundingBox):Vector.&lt;TerrainTriangle&gt;
		{
			if(!_nodes || !_nodes.length)return null;
			
			resetTriangleCount();
			
			var returnTris:Vector.&lt;TerrainTriangle&gt; = new Vector.&lt;TerrainTriangle&gt;();
			++_counter;
			var nodeTest:Vector.&lt;int&gt; = new Vector.&lt;int&gt;();
			nodeTest.push(0);
			
			var nodeIndex:int;
			var nodeTri:uint;
			var node:TerrainQuadTreeNode;
			var tTri:TerrainTriangle;
			
			while(nodeTest.length != 0)
			{
				nodeIndex = nodeTest.pop();
				node = _nodes[nodeIndex];
				if(!tbbox.checkIsOverlap(node.tbbox))
				{
					continue;
				}
				
				if(node.isLeaf())
				{
					nodeTri = node.triangleIndices.length;
					for(var i:int = 0; i &lt; nodeTri; i++)
					{
						tTri = _triangles[node.triangleIndices[i]];
						if(tTri.counter != _counter)
						{
							tTri.counter = _counter;
							if(tbbox.checkIsOverlap(tTri.tbbox))
							{
								returnTris.push(tTri);
							}
						}
					}
				}else
				{
					for(var n:int = 0; n &lt; TerrainQuadTreeNode.QUADTREE_NODE_NUM; n++)
					{
						nodeTest.push(node.childNodeIndices[n]);
					}
				}
			}
			
			_counter = 0;
			return returnTris;
		}
		
		/**
		 * 获取triangle 
		 * @param index
		 * @return 
		 * 
		 */		
		public function getTriangleByIndex(index:int):TerrainTriangle
		{
			return _triangles[index];
		}
		
		public function get rootNode():TerrainQuadTreeNode
		{
			return _rootNode;
		}
		
		/**
		 * 绘制树
		 * @param g
		 * @param scale
		 * 
		 */		
		public function drawTree(g:Graphics, scale:Number = 0.03):void
		{
			if(!_nodes || !_nodes.length)return;
			var node:TerrainQuadTreeNode;
			for(var i:int = 0; i &lt; _nodes.length; i++)
			{
				node = _nodes[i];
				node.tbbox.draw(g, scale);
			}
			
		}
		
		public function dispose():void
		{
			//TODO:
		}
		
		/**
		 * 重置测试用计数 
		 * 
		 */		
		private function resetTriangleCount():void
		{
			var i:int = 0;
			var totalTri:int = _triangles.length;
			for(i = 0; i &lt; totalTri; i++)
			{
				_triangles[i].counter = 0;
			}
		}
		
		private function getNodeTBBox(parentTbbox:TerrainBoundingBox, index:uint):TerrainBoundingBox
		{
			var centerX:Number = parentTbbox.centerX;
			var centerZ:Number = parentTbbox.centerZ;
			var sideX:Number = parentTbbox.sideX;
			var sideZ:Number = parentTbbox.sideZ;
			var returnTBBox:TerrainBoundingBox = new TerrainBoundingBox();
			
			switch(index)
			{
				case 0:		// 节点1
					returnTBBox.reset(centerX+sideX/4, centerZ+sideZ/4, sideX/2, sideZ/2);
					break;
				case 1:		// 节点2
					returnTBBox.reset(centerX-sideX/4, centerZ+sideZ/4, sideX/2, sideZ/2);
					break;
				case 2:		// 节点3
					returnTBBox.reset(centerX-sideX/4, centerZ-sideZ/4, sideX/2, sideZ/2);
					break;
				case 3:		// 节点4
					returnTBBox.reset(centerX+sideX/4, centerZ-sideZ/4, sideX/2, sideZ/2);
					break;
				default:
					returnTBBox.reset(centerX+sideX/4, centerZ-sideZ/4, sideX/2, sideZ/2);
					break;
			}			
			return returnTBBox;
		}
		
		/**
		 * 检测三角形是否和节点相交 
		 * @param triangle
		 * @param node
		 * @return 
		 * 
		 */		
		private function checkIsTriangleIntersectNode(triangle:TerrainTriangle, node:TerrainQuadTreeNode):Boolean 
		{
			if(!triangle.tbbox.checkIsOverlap(node.tbbox))
			{
				return false;
			}
			
			var p1:Vector3D = _vertices[triangle.getVertexIndex(0)];
			var p2:Vector3D = _vertices[triangle.getVertexIndex(1)];
			var p3:Vector3D = _vertices[triangle.getVertexIndex(2)];
			
			// 三角形有顶点在node中
			if(node.tbbox.checkPosIsInside(p1) ||
				node.tbbox.checkPosIsInside(p2) ||
				node.tbbox.checkPosIsInside(p3))
			{
				return true;
			}
			
			// node的顶点在三角型中
			var isIntersect : Boolean =
				TerrainTriangle.checkPointInTriangle( node.tbbox.minX, node.tbbox.minZ, p1, p2, p3) ||
				TerrainTriangle.checkPointInTriangle( node.tbbox.minX, node.tbbox.maxZ, p1, p2, p3) ||
				TerrainTriangle.checkPointInTriangle( node.tbbox.maxX, node.tbbox.maxZ, p1, p2, p3) ||
				TerrainTriangle.checkPointInTriangle( node.tbbox.maxX, node.tbbox.minZ, p1, p2, p3);
			
			if(isIntersect)
				return true;
			
			
			// 三角形的边是否与tbbox的边相交
			isIntersect = node.tbbox.checkLineIsInside(p1.x, p1.z, p2.x ,p2.z) ||
				node.tbbox.checkLineIsInside(p1.x, p1.z, p3.x ,p3.z) ||
				node.tbbox.checkLineIsInside(p2.x, p2.z, p3.x ,p3.z);
			
			return isIntersect;
		}
	}
}</pre>
&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>856</wp:post_id>
		<wp:post_date>2014-01-13 16:46:23</wp:post_date>
		<wp:post_date_gmt>2014-01-13 08:46:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-%e5%9c%b0%e5%bd%a2%e8%bf%bd%e8%b8%aa%ef%bc%88%e4%b8%80%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D 地形追踪（二）</title>
		<link>http://blog.as3er.com/?p=876</link>
		<pubDate>Sun, 19 Jan 2014 14:15:23 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=876</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

上一篇的例子中，已经通过四叉树找到了目标三角形。所以已经完成了第一步。

第二步：

根据指定点(x,z)计算出高度，并写入高度图。

其中高度图的写入不是必须的，因为有了三角形，只需要将点带入平面方程就可以得到该点的高度。所以高度图只是作为一种优化方法。

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/TerrainMesh.jpg"><img class="alignnone size-medium wp-image-879" alt="TerrainMesh" src="http://blog.as3er.com/wp-content/uploads/2014/01/TerrainMesh-300x227.jpg" width="300" height="227" /></a>

<a href="http://blog.as3er.com/demo/TerrainMeshTest.html" target="_blank">打开Demo</a>(地形模型的面有点多(2w面)，初始化并构建树时有点慢)

TerrainMesh.as 地形追踪类
<pre class="brush:as3">package copper3d.terrain
{
	import flash.geom.Vector3D;
	
	import away3d.core.base.CompactSubGeometry;

	/**
	 * 地形追踪用Mesh 
	 * @author vancopper
	 * 
	 */	
	public class TerrainMesh
	{
		private var _terrainQuadTree:TerrainQuadTree;
		private var _numTrianglePerNode:int;
		private var _minNodeSize:Number;
		private var _geo:CompactSubGeometry;
		private var _textTbbox:TerrainBoundingBox;
		/**
		 *  
		 * @param geo 地形Geometry
		 * @param numTrianglePerNode 地形四叉树节点最大三角数量
		 * @param minNodeSize 地形四叉树节点包围框对角线大小
		 * 
		 */		
		public function TerrainMesh(geo:CompactSubGeometry, numTrianglePerNode:int = 10, minNodeSize:Number = 400)
		{
			if(!geo)return;
			_geo = geo;
			_numTrianglePerNode = numTrianglePerNode;
			_minNodeSize = minNodeSize;
			_textTbbox = new TerrainBoundingBox();
			buildTerrain();
		}
		
		public function getTerrainHeight(posX:Number, posZ:Number):Number
		{
			var terrainTriV:Vector.&lt;TerrainTriangle&gt; = getCollisionTriangle(posX, posZ);
			var height:Number = -10000000;
			for(var i:int = 0; i &lt; terrainTriV.length; i++)
			{
				height = Math.max(height, getHeightInTriangle(posX, posZ, terrainTriV[i]));
			}
			return height;
		}
		
		private function buildTerrain():void
		{
			_terrainQuadTree = new TerrainQuadTree();
			_terrainQuadTree.setTerrainGeo(_geo);
			_terrainQuadTree.buildQuadTree(_numTrianglePerNode, _minNodeSize);
		}
		
		/**
		 * 获取点所在的三角形 
		 * @param posX
		 * @param posZ
		 * @return 
		 * 
		 */		
		private function getCollisionTriangle(posX:Number, posZ:Number):Vector.&lt;TerrainTriangle&gt;
		{
			var terrainTriV:Vector.&lt;TerrainTriangle&gt; = new Vector.&lt;TerrainTriangle&gt;();
			_textTbbox.reset(posX, posZ, 10, 10);
			var v:Vector.&lt;TerrainTriangle&gt; = _terrainQuadTree.getTriangles(_textTbbox);
			for(var i:int = 0; i &lt; v.length; i ++)
			{
				if(TerrainTriangle.checkPointInTriangle(posX, posZ, 
					v[i].getVertex(0), v[i].getVertex(1),
					v[i].getVertex(2)))
				{
					terrainTriV.push(v[i]);
				}
			}
			return terrainTriV;
		}
		
		/**
		 * 获取点(x,z)在三角形平面上的高度 
		 * @param x
		 * @param z
		 * @param terrainTri
		 * @return 
		 * 
		 */		
		private function getHeightInTriangle(x:Number, z:Number, terrainTri:TerrainTriangle):Number
		{
			var h:Number;
			var a:Number;
			var b:Number;
			var c:Number;
			var d:Number;
			var p1 : Vector3D = terrainTri.getVertex(0);
			var p2 : Vector3D = terrainTri.getVertex(1);
			var p3 : Vector3D = terrainTri.getVertex(2);

			a = ( (p2.y-p1.y)*(p3.z-p1.z)-(p2.z-p1.z)*(p3.y-p1.y) );
			b = ( (p2.z-p1.z)*(p3.x-p1.x)-(p2.x-p1.x)*(p3.z-p1.z) );
			c = ( (p2.x-p1.x)*(p3.y-p1.y)-(p2.y-p1.y)*(p3.x-p1.x) );
			d = ( 0-(a*p1.x+b*p1.y+c*p1.z) );
			
			//Ax+By+Cz+D=0的一般方程
			h = -(a*x + c*z + d)/b
			
			return h;
		}
	}
}</pre>
TerrainMeshTest.as 测试类
<pre class="brush:as3">package
{
	import flash.display.Sprite;
	import flash.display.StageAlign;
	import flash.display.StageScaleMode;
	import flash.events.Event;
	import flash.events.KeyboardEvent;
	import flash.events.MouseEvent;
	import flash.ui.Keyboard;
	
	import away3d.containers.View3D;
	import away3d.controllers.HoverController;
	import away3d.debug.AwayStats;
	import away3d.debug.Trident;
	import away3d.entities.Mesh;
	import away3d.events.AssetEvent;
	import away3d.library.assets.AssetType;
	import away3d.lights.DirectionalLight;
	import away3d.loaders.Loader3D;
	import away3d.loaders.parsers.Parsers;
	import away3d.materials.TextureMaterial;
	import away3d.materials.lightpickers.StaticLightPicker;
	import away3d.primitives.SphereGeometry;
	import away3d.utils.Cast;
	
	import copper3d.primitives.WireframeTriangle;
	import copper3d.terrain.TerrainMesh;
	
	[SWF(backgroundColor="#FF0000", frameRate="30", width="800", height="600")]
	
	public class TerrainMeshTest extends Sprite
	{
		[Embed(source="./assets/1.3DS",mimeType="application/octet-stream")]
		public static var Terrain:Class;
		
		[Embed(source="./assets/a1dun_ca.png")]
		public static var TerrainTexture:Class;
		
		private var _view:View3D;
		private var _cameraController:HoverController;
		
		private var _move:Boolean = false;
		private var _lastPanAngle:Number;
		private var _lastTiltAngle:Number;
		private var _lastMouseX:Number;
		private var _lastMouseY:Number;
		
		private var _wireframeTriangle:WireframeTriangle;
		private var _terrainMesh:TerrainMesh;
		
		private var _sphereMesh:Mesh;
		private var _xSpeed:Number = 0;
		private var _zSpeed:Number = 0;
		private var _speed:Number = 8;
		
		private var _dirLight:DirectionalLight;
		private var _lightPicker:StaticLightPicker;
		public function TerrainMeshTest()
		{
			super();
			init();
		}
		
		private function init():void
		{
			stage.scaleMode = StageScaleMode.NO_SCALE;
			stage.align = StageAlign.TOP_LEFT;
			
			initEng();
			initLight();
			initObject();
		}
		
		private function initEng():void
		{
			_view = new View3D();
			addChild(_view);
			
			addChild(new AwayStats(_view));
			
			addEventListener(Event.ENTER_FRAME, onEnterFrame);
			stage.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);
			stage.addEventListener(MouseEvent.MOUSE_UP, onMouseUp);
			stage.addEventListener(MouseEvent.MOUSE_WHEEL, onMouseWheel);
			stage.addEventListener(Event.RESIZE, onResize);
			
			stage.addEventListener(KeyboardEvent.KEY_DOWN, onkeyDown);
			stage.addEventListener(KeyboardEvent.KEY_UP, onkeyUp);
		}
		
		private function initObject():void
		{
			Parsers.enableAllBundled();
			var loader:Loader3D = new Loader3D();
			loader.addEventListener(AssetEvent.ASSET_COMPLETE, onAssetComplete);
			loader.loadData(new Terrain());
			_view.scene.addChild(loader);
			_view.scene.addChild(new Trident());
			
			var sphereGeo:SphereGeometry = new SphereGeometry();
			_sphereMesh = new Mesh(sphereGeo);
			_view.scene.addChild(_sphereMesh);
			
			_view.camera.lens.far = 10000;
			_cameraController = new HoverController(_view.camera, _sphereMesh, 45, 20, 1000);
		}
		
		private function initLight():void
		{
			_dirLight = new DirectionalLight(-50, -20, 10);
			_dirLight.color = 0xffffff;
			_dirLight.ambient = 10;
			_dirLight.ambientColor = 0xffffee;
			_view.scene.addChild(_dirLight);
			
			_lightPicker = new StaticLightPicker([_dirLight]);
		}
		
		private function onAssetComplete(event:AssetEvent):void
		{
			if(event.asset.assetType == AssetType.MESH)
			{
				var mesh:Mesh = event.asset as Mesh;
//				_wireframeTriangle =  new WireframeTriangle(mesh.geometry.subGeometries[0].indexData, mesh.geometry.subGeometries[0].vertexPositionData);
//				_view.scene.addChild(_wireframeTriangle);
				_terrainMesh = new TerrainMesh(mesh.geometry.subGeometries[0]);
				var mat:TextureMaterial = new TextureMaterial(Cast.bitmapTexture(TerrainTexture));
				mat.lightPicker = _lightPicker;
				mat.repeat = true;
				mesh.material = mat; 
			}
		}
		
		private function onkeyDown(event:KeyboardEvent):void
		{
			switch(event.keyCode)
			{
				case Keyboard.LEFT:
					_xSpeed = _speed;
					break;
				case Keyboard.RIGHT:
					_xSpeed = -_speed;
					break;
				case Keyboard.UP:
					_zSpeed = -_speed;
					break;
				case Keyboard.DOWN:
					_zSpeed = _speed;
					break;
			}
		}
		
		private function onkeyUp(event:KeyboardEvent):void
		{
			_zSpeed = 0;
			_xSpeed = 0;
		}
		//-----------------------------------------------------------------------------//
		//-----------------------------------------------------------------------------//
		private function onEnterFrame(event:Event):void
		{
			if (_move) 
			{
				_cameraController.panAngle = 0.3*(stage.mouseX - _lastMouseX) + _lastPanAngle;
				_cameraController.tiltAngle = 0.3*(stage.mouseY - _lastMouseY) + _lastTiltAngle;
			}
			
			if(_sphereMesh &amp;&amp; _terrainMesh)
			{
				_sphereMesh.z += _zSpeed;
				_sphereMesh.rotationZ -= _xSpeed;
				_sphereMesh.x += _xSpeed;
				_sphereMesh.rotationX += _zSpeed;
				_sphereMesh.y = _terrainMesh.getTerrainHeight(_sphereMesh.x, _sphereMesh.z) + 50;
			}
			
			_view.render();
		}
		
		private function onMouseWheel(event:MouseEvent) : void
		{
			_cameraController.distance -= event.delta*5;
			
			if (_cameraController.distance &lt; 400)
				_cameraController.distance = 400;
			else if (_cameraController.distance &gt; 10000)
				_cameraController.distance = 10000;
		}
		
		private function onMouseDown(event:MouseEvent):void
		{
			_lastPanAngle = _cameraController.panAngle;
			_lastTiltAngle = _cameraController.tiltAngle;
			_lastMouseX = stage.mouseX;
			_lastMouseY = stage.mouseY;
			_move = true;
			stage.addEventListener(Event.MOUSE_LEAVE, onStageMouseLeave);
		}
		
		private function onMouseUp(event:MouseEvent):void
		{
			_move = false;
			stage.removeEventListener(Event.MOUSE_LEAVE, onStageMouseLeave);
		}
		
		private function onStageMouseLeave(event:Event):void
		{
			_move = false;
			stage.removeEventListener(Event.MOUSE_LEAVE, onStageMouseLeave);
		}
		
		private function onResize(event:Event = null):void
		{
			_view.width = stage.stageWidth;
			_view.height = stage.stageHeight;
		}
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>876</wp:post_id>
		<wp:post_date>2014-01-19 22:15:23</wp:post_date>
		<wp:post_date_gmt>2014-01-19 14:15:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-%e5%9c%b0%e5%bd%a2%e8%bf%bd%e8%b8%aa%ef%bc%88%e4%ba%8c%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="away3d"><![CDATA[Away3D]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<category domain="post_tag" nicename="%e5%9c%b0%e5%bd%a2%e8%bf%bd%e8%b8%aa"><![CDATA[地形追踪]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D xRay Effect</title>
		<link>http://blog.as3er.com/?p=889</link>
		<pubDate>Tue, 21 Jan 2014 13:51:38 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=889</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

首先要跟各位认真阅读该篇文章的朋友说声Sorry，由于“分割线”一下的内容对该效果的说明不是很清楚，并且的确存在很严重的Bug，以至于已经有好几位朋友通过QQ和邮件联系我说明相关问题。在此谢谢关注该Blog的朋友。

修改了一下这个效果，解决了掉帧严重的问题，但不知道是否还能满足各位对效果的要求。如果还有问题还请邮件我(qq邮箱)。效果图如下：

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/xRayDemo.png"><img class="alignnone  wp-image-972" alt="xRayDemo" src="http://blog.as3er.com/wp-content/uploads/2014/01/xRayDemo.png" width="472" height="355" /></a>

&nbsp;

分割线以下内容 我已修复更新。

---------------------------------我是分割线----------------------------------------------

xRay Effect 先来看张效果图：

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/step03.jpg"><img class="alignnone size-medium wp-image-890" alt="step03" src="http://blog.as3er.com/wp-content/uploads/2014/01/step03-300x225.jpg" width="300" height="225" /></a>

分三个步骤来完成这个效果。

第一步：正常渲染场景物件以及遮挡物

在away3d里面对应的代码是  DefaultRenderer.as 的draw()方法
<pre class="brush:as3">drawRenderables(entityCollector.opaqueRenderableHead, entityCollector, which);
drawRenderables(entityCollector.blendedRenderableHead, entityCollector, which);</pre>
到这里先把场景物件以及遮挡物渲染完成了

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/step01.jpg"><img class="alignnone size-medium wp-image-894" alt="step01" src="http://blog.as3er.com/wp-content/uploads/2014/01/step01-300x225.jpg" width="300" height="225" /></a>

第二步：渲染人物被遮挡的部分

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/step02.jpg"><img class="alignnone size-medium wp-image-895" alt="step02" src="http://blog.as3er.com/wp-content/uploads/2014/01/step02-300x225.jpg" width="300" height="225" /></a>

在DefaultRenderer.as的draw()方法中添加遮挡部分的渲染代码
<pre class="brush:as3">//xRay层渲染
drawRenderables(entityCollector.xRayRenderableHead, entityCollector, which, true);</pre>
下面是修改过的drawRenderables方法
<pre class="brush:as3">
private function drawRenderables(item:RenderableListItem, entityCollector:EntityCollector, which:int, isXRay:Boolean = false):void
		{
			var numPasses:uint;
			var j:uint;
			var camera:Camera3D = entityCollector.camera;
			var item2:RenderableListItem;
			var singlePassMat:SinglePassMaterialBase;
			while (item) {
				_activeMaterial = item.renderable.material;
				_activeMaterial.updateMaterial(_context);
				
				singlePassMat = _activeMaterial as SinglePassMaterialBase;
				if(isXRay &amp;&amp; singlePassMat)
				{
					singlePassMat.activateMaterialForXRay(_stage3DProxy);
				}
				
				numPasses = _activeMaterial.numPasses;
				j = 0;
				
				do {
					item2 = item;
					
					var rttMask:int = _activeMaterial.passRendersToTexture(j)? 1 : 2;
					
					if ((rttMask &amp; which) != 0) {
						_activeMaterial.activatePass(j, _stage3DProxy, camera);
						do {
							_activeMaterial.renderPass(j, item2.renderable, _stage3DProxy, entityCollector, _rttViewProjectionMatrix);
							item2 = item2.next;
						} while (item2 &amp;&amp; item2.renderable.material == _activeMaterial);
						_activeMaterial.deactivatePass(j, _stage3DProxy);
					} else {
						do
							item2 = item2.next;
						while (item2 &amp;&amp; item2.renderable.material == _activeMaterial);
					}
					
				} while (++j &lt; numPasses);
				
				if(isXRay &amp;&amp; singlePassMat)
				{
					singlePassMat.deactivateMaterialForXRay(_stage3DProxy);
				}
				item = item2;
			}
		}</pre>
还有一处修改是比较重要的，就是在SinglePassMaterialBase.as中添加activateMaterialForXRay，deactivateMaterialForXRay方法并且在EffectMethodBase.as中添加activateEffect,deactivateEffect方法，并在XRayMethod中复写。
<pre class="brush:as3">public function activateMaterialForXRay(stage3DProxy:Stage3DProxy):void
{
	if(xRayMethod)
	{
		xRayMethod.activateEffect();
	}
}
		
public function deactivateMaterialForXRay(stage3DProxy:Stage3DProxy):void
{
	if(xRayMethod)
	{
		xRayMethod.deactiveEffect();
	}
}
//--------------------------------------------
public function activateEffect():void
{
	//Override
}
		
public function deactiveEffect():void
{
	//Override
}</pre>
xRayRenderableHead是添加过xRay 效果的渲染列表，这里需要在EntityCollector.as里面添加对应的处理代码以收集到已添加xRay效果的渲染项。
<pre class="brush:as3">// xray渲染项
var singlePassMat:SinglePassMaterialBase = material as SinglePassMaterialBase;
if(singlePassMat &amp;&amp; singlePassMat.xRayMethod)
{
   item.next = _xRayRenderableHead;
   _xRayRenderableHead = item;
}</pre>
SinglePassMaterialBase的xRayMethod属性是EffectMethodBase类型，就是我们自己扩展的xray的shader。在该博文最后会提供出代码。

第三步：正常渲染人物，就可以得到下面的效果

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/step03.jpg"><img class="alignnone size-medium wp-image-890" alt="step03" src="http://blog.as3er.com/wp-content/uploads/2014/01/step03-300x225.jpg" width="300" height="225" /></a>

在DefaultRenderer.as的draw()方法中添加人物的渲染代码
<pre class="brush:as3">//avatar层渲染
_context.setBlendFactors(Context3DBlendFactor.ONE, Context3DBlendFactor.ZERO);
_context.setDepthTest(true, Context3DCompareMode.LESS_EQUAL);
drawRenderables(entityCollector.avatarRenderableHead, entityCollector, which);</pre>
avatarRenderableHead是人物渲染列表，这里需要在EntityCollector.as里面添加对应的处理代码来收集人物渲染项
<pre class="brush:as3">if(renderable.sourceEntity.renderLayer == Entity.AVATAR_LAYER)//Avatar层
{
	item.next = _avatarRenderableHead;
	_avatarRenderableHead = item;
}else if(material.requiresBlending) 
{
	item.next = _blendedRenderableHead;
	_blendedRenderableHead = item;
} else
{
	item.next = _opaqueRenderableHead;
	_opaqueRenderableHead = item;
}</pre>
至此就完成了xray效果的渲染。现将XRayMethod.as提供。如有问题可在置顶的About页面中找到我的联系方式。
XRayMethod.as
<pre class="brush:as3">
package copper3d.materials.methods
{
	import flash.display3D.Context3DBlendFactor;
	import flash.display3D.Context3DCompareMode;
	
	import away3d.arcane;
	import away3d.core.managers.Stage3DProxy;
	import away3d.materials.compilation.ShaderRegisterCache;
	import away3d.materials.compilation.ShaderRegisterElement;
	import away3d.materials.methods.EffectMethodBase;
	import away3d.materials.methods.MethodVO;

	/**
	 * xRay效果 
	 * @author vancopper
	 * 
	 */	
	public class XRayMethod extends EffectMethodBase
	{
		private var _color:uint;
		private var _r:Number = 0;
		private var _g:Number = 0;
		private var _b:Number = 0;
		private var _a:Number = 0;
		
		public function XRayMethod()
		{
			super();
		}
		
		public function get xRayColor():uint
		{
			return _color;
		}
		
		public function set xRayColor(value:uint):void
		{
			_color = value;
			_r = ((_color >> 16) & 0xff) / 0xff;
			_g = ((_color >> 8) & 0xff) / 0xff;
			_b = (_color & 0xff) / 0xff;
		}
		
		arcane override function initVO(vo:MethodVO):void
		{
			vo.needsNormals = true;
			vo.needsProjection = true;
		}
		
		arcane override function activate(vo:MethodVO, stage3DProxy:Stage3DProxy):void
		{
//			if(!_isActive)return;
			var vData:Vector.<Number> = vo.vertexData
			var index:int = vo.fragmentConstantsIndex;
			var data:Vector.<Number> = vo.fragmentData;
			if(_isActive)
			{
				data[index] = _r;
				data[index + 1] = _g;
				data[index + 2] = _b;
				data[index + 3] = _a;
				stage3DProxy.context3D.setBlendFactors(Context3DBlendFactor.ONE, Context3DBlendFactor.ONE);
				stage3DProxy.context3D.setDepthTest(false, Context3DCompareMode.GREATER);
			}else
			{
				data[index] = 1;
				data[index + 1] = 1;
				data[index + 2] = 1;
				data[index + 3] = 0;
				stage3DProxy.context3D.setBlendFactors(Context3DBlendFactor.ONE, Context3DBlendFactor.ZERO);
				stage3DProxy.context3D.setDepthTest(true, Context3DCompareMode.LESS_EQUAL);
			}
		}
		
		private var _isActive:Boolean = false;
		override public function activateEffect():void
		{
			_isActive = true;
		}
		
		override public function deactiveEffect():void
		{
			_isActive = false;
		}
		
		arcane override function getFragmentCode(vo:MethodVO, regCache:ShaderRegisterCache, targetReg:ShaderRegisterElement):String
		{
			var dataRegister:ShaderRegisterElement = regCache.getFreeFragmentConstant();
			vo.fragmentConstantsIndex = dataRegister.index * 4;
			
			var temp1:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();
			var temp2:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();
			var code:String = "";
			
//			code += "nrm " + temp1 + ".xyz, " + _sharedRegisters.normalVarying + ".xyz \n" +
//				"dp3 " + temp2 + ".a, " + targetReg + ".xyz, " + _sharedRegisters.projectionFragment + ".xyz \n" +
//				"sat " + temp2 + ".a, " + temp2 + ".a \n" +
//				"mov " + temp2 +  ".r, " + dataRegister + ".r \n" +
//				"mov " + temp2 + ".g, " + dataRegister + ".g \n" +
//				"mov " + temp2 + ".b, " + dataRegister + ".b \n" +
//				"mul " + temp2 + ".rgb, " + temp2 + ".rgb, " + temp2 + ".aaa \n" +
//				"mov " + targetReg + "," + temp2 + "\n";
//			return code;

			code += "mov " + temp2 + ".r, " + dataRegister + ".r \n" +
				"mov " + temp2 + ".g, " + dataRegister + ".g \n" +
				"mov " + temp2 + ".b, " + dataRegister + ".b \n" +
				"mov " + temp2 + ".a, " + dataRegister + ".a \n" +
				"mul " + temp2 + ".rgb, " + targetReg + ".rgb, " + temp2 + ".rgb \n" +
 				"mov " + targetReg + ", " + temp2 + "\n";
			return code;
		}
	}
}

</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>889</wp:post_id>
		<wp:post_date>2014-01-21 21:51:38</wp:post_date>
		<wp:post_date_gmt>2014-01-21 13:51:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-xray-effect</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>闲来无事</title>
		<link>http://blog.as3er.com/?p=907</link>
		<pubDate>Tue, 28 Jan 2014 15:16:45 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=907</guid>
		<description></description>
		<content:encoded><![CDATA[Lego 城市反叛者

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/20140128-231501.jpg"><img class="alignnone size-medium wp-image-904" alt="20140128-231501.jpg" src="http://blog.as3er.com/wp-content/uploads/2014/01/20140128-231501-300x168.jpg" width="300" height="168" /></a>

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/20140128-231518.jpg"><img class="alignnone size-medium wp-image-906" alt="20140128-231518.jpg" src="http://blog.as3er.com/wp-content/uploads/2014/01/20140128-231518-300x168.jpg" width="300" height="168" /></a>

<a href="http://blog.as3er.com/wp-content/uploads/2014/01/20140128-231512.jpg"><img class="alignnone size-medium wp-image-905" alt="20140128-231512.jpg" src="http://blog.as3er.com/wp-content/uploads/2014/01/20140128-231512-300x168.jpg" width="300" height="168" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>907</wp:post_id>
		<wp:post_date>2014-01-28 23:16:45</wp:post_date>
		<wp:post_date_gmt>2014-01-28 15:16:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%97%b2%e6%9d%a5%e6%97%a0%e4%ba%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>利用 Node.js &amp; Pushover 消息推送</title>
		<link>http://blog.as3er.com/?p=913</link>
		<pubDate>Thu, 06 Feb 2014 13:27:12 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=913</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

谢 @lipi 送的&lt;深入浅出 Node.js&gt;

利用Node.js的http服务处理消息输入，然后转发给Pushover，最终推送到ios设备。

<a href="http://www.infoq.com/cn/articles/nodejs-npm-install-config" target="_blank">Node.js安装</a>

<a href="https://pushover.net" target="_blank">Pushover官网</a>

Pushover安装并注册完成后，网站会提供一个userKey，但只有userKey还不能利用接口推送消息，还需要申请一个API Token/Key。API Token/Key的申请很简单：

<a href="http://blog.as3er.com/wp-content/uploads/2014/02/AppKey.jpg"><img class="alignnone  wp-image-915" alt="AppKey" src="http://blog.as3er.com/wp-content/uploads/2014/02/AppKey-1024x483.jpg" width="573" height="270" /></a>

&nbsp;

填写完这些信息，就可以得到一个API Token/Key,有了userKey和API Token/Key准备工作就搞定了。

<strong><a href="https://github.com/SamDecrock/node-pushover">node-pushover</a>
</strong>是Pushover的Node.js平台的扩展包，利用npm安装此扩展包。扩展包的安装还真是历尽千辛万苦，如有朋友安装过程中遇到什么问题，可与我联系。

服务器端代码：
<pre class="brush:applescript">var http = require('http');
var url = require('url');
var Pushover = require('node-pushover');
var push = new Pushover
    ({
  		token: 你的API Token/Key',
  		user: '你的userKey'
    });
    
http.createServer(function(req, res)
{
	var title = url.parse(req.url,true).query.title;
   	var message = url.parse(req.url,true).query.message;
    res.writeHead(200, {'Content-Type' : 'text/plain'});
   	push.send(title, message);
    res.end('Succeed');
}).listen(端口, IP);
console.log('httpServer');</pre>
运行服务：

<b>➜ </b><b> </b><b>nodeTest </b><b> </b>node httpServer.js

httpServer

在httpServer.html页面输入要发送的通知

<a href="http://blog.as3er.com/wp-content/uploads/2014/02/sendForm.jpg"><img class="alignnone size-full wp-image-923" alt="sendForm" src="http://blog.as3er.com/wp-content/uploads/2014/02/sendForm.jpg" width="396" height="258" /></a>

发送成功后即可在IOS设备收到通知

<a href="http://blog.as3er.com/wp-content/uploads/2014/02/NodeNotice.jpg"><img class="alignnone  wp-image-924" alt="NodeNotice" src="http://blog.as3er.com/wp-content/uploads/2014/02/NodeNotice-768x1024.jpg" width="461" height="614" /></a>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>913</wp:post_id>
		<wp:post_date>2014-02-06 21:27:12</wp:post_date>
		<wp:post_date_gmt>2014-02-06 13:27:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%a9%e7%94%a8-node-js-pushover-%e6%b6%88%e6%81%af%e6%8e%a8%e9%80%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios"><![CDATA[IOS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>137</wp:comment_id>
			<wp:comment_author><![CDATA[vanCopper]]></wp:comment_author>
			<wp:comment_author_email>vancopperm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>120.195.99.222</wp:comment_author_IP>
			<wp:comment_date>2014-02-07 11:24:56</wp:comment_date>
			<wp:comment_date_gmt>2014-02-07 03:24:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Away3D 幻影效果(Phantom Effect)</title>
		<link>http://blog.as3er.com/?p=928</link>
		<pubDate>Tue, 11 Feb 2014 16:28:46 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=928</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

幻影(或者残影)效果通常用来表现角色的快速移动效果。如下图：

关闭了Alpha的过渡效果，因为有透贴所以开启Alpha过渡有问题。

<a href="http://blog.as3er.com/wp-content/uploads/2014/02/phantom.jpg"><img class="alignnone  wp-image-929" alt="phantom" src="http://blog.as3er.com/wp-content/uploads/2014/02/phantom.jpg" width="640" height="498" /></a>

开启Alpha过渡效果：

<a href="http://blog.as3er.com/wp-content/uploads/2014/02/phantom02.jpg"><img class="alignnone size-full wp-image-932" alt="phantom02" src="http://blog.as3er.com/wp-content/uploads/2014/02/phantom02.jpg" width="587" height="419" /></a>

&nbsp;

PhantomMesh.as

幻影体，用于clone目标对象
<pre class="brush:as3">package copper3d.entities
{
	import flash.utils.getTimer;
	
	import away3d.arcane;
	import away3d.core.base.Geometry;
	import away3d.entities.Mesh;
	import away3d.materials.MaterialBase;
	import away3d.materials.TextureMaterial;
	
	use namespace arcane;

	/**
	 * 幻影体 
	 * @author vancopper
	 * 
	 */	
	public class PhantomMesh extends Mesh
	{
		public var lifecycle:Number = 0;
		private var _creatTime:Number;
		public function PhantomMesh(geometry:Geometry, material:MaterialBase=null)
		{
			super(geometry, material);
			_creatTime = getTimer();
		}
		
		public function tick(time:Number):Boolean
		{
			var passTime:Number = time - _creatTime;
			if(passTime &gt;= lifecycle)
			{
				if(this.parent)
				{
					this.parent.removeChild(this);
				}
				return true;
			}
			TextureMaterial(material).alpha = (1 - passTime/lifecycle) + 0.3;
			return false;
		}
		
		public static function getCloneByMesh(mesh:Mesh):PhantomMesh
		{
			var phantomMesh:PhantomMesh = new PhantomMesh(mesh.geometry.cloneAnimationGeo());
			var mat:TextureMaterial = new TextureMaterial(TextureMaterial(mesh.material).texture);
//			mat.alphaBlending = true;
			phantomMesh.material = mat;
			
			phantomMesh.transform = mesh.transform;
			phantomMesh.pivotPoint = mesh.pivotPoint;
			phantomMesh.partition = mesh.partition;
			phantomMesh.mouseEnabled = mesh.mouseEnabled;
			phantomMesh.mouseChildren = mesh.mouseChildren;
			phantomMesh.castsShadows = false;
			return phantomMesh;
		}
	}
}</pre>
有个地方需要注意：
<pre class="brush:as3">			var phantomMesh:PhantomMesh = new PhantomMesh(mesh.geometry.cloneAnimationGeo());</pre>
这里为Geometry以及ISubGeometry扩展了一个cloneAnimationGeo()方法，原来的clone方法得到的是Mesh BindPose下的Geometry,所以在克隆有动画的ISubGeometry时，需要把_vertexData替换为_animatedData以获得当前动作下的ISubGeometry。下面是SkinnedSubGeometry.as的cloneAnimationGeo()方法
<pre class="brush:as3">override public function cloneAnimationGeo():ISubGeometry
		{
			var clone:SkinnedSubGeometry = new SkinnedSubGeometry(_jointsPerVertex);
			clone.updateData(_animatedData.concat());//替换为当前动作对应的顶点数据
			clone.updateIndexData(_indices.concat());
			clone.updateJointIndexData(_jointIndexData.concat());
			clone.updateJointWeightsData(_jointWeightsData.concat());
			clone._autoDeriveVertexNormals = _autoDeriveVertexNormals;
			clone._autoDeriveVertexTangents = _autoDeriveVertexTangents;
			clone._numCondensedJoints = _numCondensedJoints;
			clone._condensedIndexLookUp = _condensedIndexLookUp;
			clone._condensedJointIndexData = _condensedJointIndexData;
			return clone;
		}</pre>
用于clone目标的mesh有了，下面只要有一个管理器来管理这些PhantomMesh就可以了。

PhantomRenderManager.as
<pre class="brush:as3">package copper3d.manager
{
	import flash.utils.Dictionary;
	import flash.utils.getTimer;
	
	import away3d.arcane;
	import away3d.containers.ObjectContainer3D;
	import away3d.entities.Mesh;
	import away3d.materials.methods.EffectMethodBase;
	
	import copper3d.entities.PhantomMesh;
	
	use namespace arcane;

	/**
	 * 幻影管理器 
	 * @author vancopper
	 * 
	 */	
	public class PhantomRenderManager
	{
		private static var _instance:PhantomRenderManager;
		
		private var _targetMeshDic:Dictionary = new Dictionary(true);
		private var _phantomMeshV:Vector.&lt;PhantomMesh&gt;;
		
		public function PhantomRenderManager()
		{
			if(_instance == null)
			{
				_instance = this;
				_phantomMeshV = new Vector.&lt;PhantomMesh&gt;();
			}else
			{
				throw new Error("实例化单例类出错-PhantomRenderManager");
			}
		}
		
		public static function get instance():PhantomRenderManager
		{
			if(_instance == null)
			{
				_instance = new PhantomRenderManager();	
			}
			return _instance;
		}
		
		/**
		 * 播放幻影
		 * @param target 要生成幻影的对象
		 * @param parentContainer 幻影的容器
		 * @param interval 幻影生成间隔
		 * @param lifecycle 幻影生命周期
		 * @param effectMethod 幻影效果Sharder
		 * 
		 */		
		public function playPhantom(target:Mesh, parentContainer:ObjectContainer3D, interval:uint = 50, lifecycle:uint = 1000, effectMethod:EffectMethodBase = null ):void
		{
			if(!target || !parentContainer)return;
			var phantomVO:PhantomVO = new PhantomVO();
			phantomVO.target = target;
			phantomVO.parentContainer = parentContainer;
			phantomVO.interval = interval;
			phantomVO.lifecycle = lifecycle;
			phantomVO.effectMethod = effectMethod;
			phantomVO.time = getTimer();
			phantomVO.lastX = target.x;
			phantomVO.lastY = target.y;
			phantomVO.lastZ = target.z;
			_targetMeshDic[target] = phantomVO;
		}
		
		/**
		 * 停止播放幻影 
		 * @param target
		 * 
		 */		
		public function stopPhantom(target:Mesh):void
		{
			delete _targetMeshDic[target];
		}
		
		/**
		 * 每帧都执行更新 
		 * 
		 */		
		public function tick():void
		{
			var phantomVO:PhantomVO;
			for(var i:* in _targetMeshDic)
			{
				phantomVO = _targetMeshDic[i];
				if(phantomVO.interval &lt; (getTimer() - phantomVO.time))
				{
					if(phantomVO.lastX == phantomVO.target.x &amp;&amp; phantomVO.lastY == phantomVO.target.y
						&amp;&amp; phantomVO.lastZ == phantomVO.target.z)continue;
					var phantomMesh:PhantomMesh = PhantomMesh.getCloneByMesh(phantomVO.target);
					phantomMesh.x = phantomVO.lastX = phantomVO.target.x;
					phantomMesh.y = phantomVO.lastY = phantomVO.target.y;
					phantomMesh.z = phantomVO.lastZ = phantomVO.target.z;
					phantomMesh.lifecycle = phantomVO.lifecycle;
					phantomVO.parentContainer.addChild(phantomMesh);
					phantomVO.time = getTimer();
					_phantomMeshV.push(phantomMesh);
				}
			}
			
			for(var j:int = 0; j &lt; _phantomMeshV.length; j++)
			{
				var mesh:PhantomMesh = _phantomMeshV[j];
				if(mesh.tick(getTimer()))
				{
					_phantomMeshV.splice(j, 1);
				}
			}
		}
	}
}
import away3d.containers.ObjectContainer3D;
import away3d.entities.Mesh;
import away3d.materials.methods.EffectMethodBase;

class PhantomVO
{
	public var target:Mesh;
	public var parentContainer:ObjectContainer3D;
	public var interval:uint;
	public var lifecycle:uint;
	public var effectMethod:EffectMethodBase;
	public var time:Number;
	public var lastX:Number;
	public var lastY:Number;
	public var lastZ:Number;
}</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>928</wp:post_id>
		<wp:post_date>2014-02-12 00:28:46</wp:post_date>
		<wp:post_date_gmt>2014-02-11 16:28:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-%e5%b9%bb%e5%bd%b1%e6%95%88%e6%9e%9cphantom-effect</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在Mac OSX上创建SSH配置</title>
		<link>http://blog.as3er.com/?p=942</link>
		<pubDate>Tue, 18 Feb 2014 04:51:51 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=942</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

在终端利用vim或者nano创建SSH Config配置文件
<pre class="brush:shell">nano ~/.ssh/config</pre>
填写配置：

<a href="http://blog.as3er.com/wp-content/uploads/2014/02/nano.jpg"><img class="alignnone size-full wp-image-944" alt="nano" src="http://blog.as3er.com/wp-content/uploads/2014/02/nano.jpg" width="570" height="341" /></a>

&nbsp;

保存，执行ssh 命令
<pre class="brush:shell">ssh serverName</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>942</wp:post_id>
		<wp:post_date>2014-02-18 12:51:51</wp:post_date>
		<wp:post_date_gmt>2014-02-18 04:51:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8mac-osx%e4%b8%8a%e5%88%9b%e5%bb%bassh%e9%85%8d%e7%bd%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%8d%e5%8a%a1%e7%ab%af"><![CDATA[服务端]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Xcode  Copper3D项目模板</title>
		<link>http://blog.as3er.com/?p=955</link>
		<pubDate>Tue, 04 Mar 2014 04:01:55 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=955</guid>
		<description></description>
		<content:encoded><![CDATA[俗话说：工欲善其事必先利其器。Xcode是可以自定义 文件模板&amp;项目模板的，对于特定的项目配置一个模板是非常有必要的，不然每次都配置库，编译参数一堆东西是非常头痛的。像Cocos2D,Ogre都有现成的项目模板，截图是Copper3D。

<a href="http://blog.copper3d.org/wp-content/uploads/2014/03/截屏14-3-4_上午11_01.png"><img class="alignnone size-full wp-image-22" title="Xcode Start" src="http://blog.copper3d.org/wp-content/uploads/2014/03/截屏14-3-4_上午11_01.png" alt="" width="727" height="487" /></a>

首先最好新建一个基础（父）模板。进入 ：
<pre class="brush:shell">/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/Xcode/Templates/Project Templates/Application/</pre>
复制Cocoa Touch Application.xctemplate后重命名为Copper3D Base.xctemplate ，接下来就只要编辑TemplateInfo.plist了，关于TemplateInfo.plist详细介绍可查看<a href="http://www.learn-cocos2d.com/store/xcode4-template-documentation/" target="_blank">这里</a>。需要先删除AppDelegate.h,AppDelegate.m,main.m相关的配置，如图：

<a href="http://blog.copper3d.org/wp-content/uploads/2014/03/TemplateInfo_plist.png"><img class="alignnone size-full wp-image-28" title="TemplateInfo_plist" src="http://blog.copper3d.org/wp-content/uploads/2014/03/TemplateInfo_plist.png" alt="" width="830" height="612" /></a>

父模板配置好了以后，就可以配置实际使用模板的相关文件和库等。进入用户目录~/Library/Developer/Xcode/Templates/新建项目模板目录

<a href="http://blog.copper3d.org/wp-content/uploads/2014/03/Templates.png"><img class="alignnone size-full wp-image-31" title="Templates" src="http://blog.copper3d.org/wp-content/uploads/2014/03/Templates.png" alt="" width="423" height="228" /></a>

最后编辑Copper3D.xctemplate中的 TemplateInfo.plist文件，将AppDelegate.h/mm 以及Classes,Shaders文件配置进模板，然后在Xcode中新建Copper3D项目应用程序。

<a href="http://blog.copper3d.org/wp-content/uploads/2014/03/Copper3DF_xcodeproj.png"><img class="alignnone size-full wp-image-32" title="Copper3DF_xcodeproj" src="http://blog.copper3d.org/wp-content/uploads/2014/03/Copper3DF_xcodeproj.png" alt="" width="285" height="452" /></a>

最后把Objective-C Automatic Reference Counting选项设置为NO。搞定，编译运行。

<a href="http://blog.copper3d.org/wp-content/uploads/2014/03/Tri.png"><img class="alignnone size-full wp-image-33" title="Tri" src="http://blog.copper3d.org/wp-content/uploads/2014/03/Tri.png" alt="" width="461" height="485" /></a>

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>955</wp:post_id>
		<wp:post_date>2014-03-04 12:01:55</wp:post_date>
		<wp:post_date_gmt>2014-03-04 04:01:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xcode-copper3d%e9%a1%b9%e7%9b%ae%e6%a8%a1%e6%9d%bf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[openGL]]></category>
	</item>
	<item>
		<title>Node.js 接入微信公众号平台</title>
		<link>http://blog.as3er.com/?p=965</link>
		<pubDate>Wed, 05 Mar 2014 07:35:19 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=965</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

先看最终演示的结果：

<a href="http://blog.as3er.com/wp-content/uploads/2014/03/screenshot.jpg"><img class="alignnone  wp-image-966" alt="screenshot" src="http://blog.as3er.com/wp-content/uploads/2014/03/screenshot.jpg" width="269" height="403" /></a>

&nbsp;

实现了简单的文本回复。lipi觉得这篇Blog会是篇水文，所以。。。（请参考截图）

1.公众号的申请不复杂，而且很快就能通过审核。通过审核后到后台开启开发者模式，在服务器配置上填上你的接口地址和Token.

2.配置好以后微信平台需要验证你的接口是否可用，按照消息规则返回消息就可以验证通过了

3.接下来就可以进行消息（文本消息，图片消息，位置消息）的处理了。这里只处理了文本消息，接收并自动回复。
<pre class="brush:js">/**
 * Created by vancopper on 14-2-18.
 */
var http = require('http');
var url = require('url');
var sha1 = require('sha1');
var xml2js = require('xml2js');
var token = '你的token';


http.createServer(onCreateServer).listen(端口, 'ip');


function onCreateServer(req, res)
{
    if(checkSignature(req))
    {
//        console.log('Signature OK')
        if(req.method == 'POST')
        {
            parsePostData(req, res);
        }
//        res.end('onCreateServer');
    }else
    {
        console.log('Signature FAILURE');
        res.end('error')
    }

}

function checkSignature(req)
{
    var gURL = url.parse(req.url, true);
    // 获取校验参数
    var signature = gURL.query.signature;
    var timestamp = gURL.query.timestamp;
    var nonce = gURL.query.nonce;
    var echostr = gURL.query.echostr;

    // 按照字典排序
    var array = [token, timestamp, nonce];
    array.sort();


    var str = sha1(array.join(""));

    // 对比签名
    if(str == signature)
    {
        return true;
    } else {
        return false;
    }
}

function parsePostData(req, res)
{
    req.setEncoding("utf8");
    var postStr = '';
    req.addListener('data', function(postDataChunk)
    {
        postStr += postDataChunk;
    })

    req.addListener('end', function()
    {
        xml2js.parseString(postStr, function(error, json)
        {
            if(error)
            {
                //TODO;
            }else
            {
               // console.log(json.xml.MsgType[0], json.xml.Content[0]);
               this.parseData = json.xml;
               parse(res);
            }
        })
    })
}

function parse(res)
{
    var msgType = this.parseData.MsgType[0] ? this.parseData.MsgType[0] : 'text';
    switch(msgType)
    {
        case 'text':
            switch (this.parseData.Content[0])
            {
                case 'lipi':
                    sendTextMsg('二货',res)
                    break;
                default :
                    sendTextMsg('不懂~', res);
                    break;
            }
        break;
    }
}

function sendTextMsg(str, res)
{
    var time = Math.round(new Date().getTime() / 1000);

    var output = "" +
        "&lt;xml&gt;" +
        "&lt;ToUserName&gt;&lt;![CDATA[" + this.parseData.FromUserName[0] + "]]&gt;&lt;/ToUserName&gt;" +
        "&lt;FromUserName&gt;&lt;![CDATA[" + this.parseData.ToUserName[0] + "]]&gt;&lt;/FromUserName&gt;" +
        "&lt;CreateTime&gt;" + time + "&lt;/CreateTime&gt;" +
        "&lt;MsgType&gt;&lt;![CDATA[" + this.parseData.MsgType[0] + "]]&gt;&lt;/MsgType&gt;" +
        "&lt;Content&gt;&lt;![CDATA[" + str + "]]&gt;&lt;/Content&gt;&lt;/xml&gt;";

//    console.log(output);
    res.type = 'xml';
    res.method = 'GET';
    res.end(output);
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>965</wp:post_id>
		<wp:post_date>2014-03-05 15:35:19</wp:post_date>
		<wp:post_date_gmt>2014-03-05 07:35:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>node-js-%e6%8e%a5%e5%85%a5%e5%be%ae%e4%bf%a1%e5%85%ac%e4%bc%97%e5%8f%b7%e5%b9%b3%e5%8f%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%8d%e5%8a%a1%e7%ab%af"><![CDATA[服务端]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D 热扰动特效（HeatHaze）</title>
		<link>http://blog.as3er.com/?p=975</link>
		<pubDate>Fri, 09 May 2014 03:57:27 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=975</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

热扰动其实就是折射。就像看夏天烈日下的柏油马路时，路面好像扭曲了一样。折射的产生是因为不同的介质对光线有不同的折射率。折射的模拟大概有两种方法：1.事前将环境中的折射渲染至一张用来扰动的图片，然后在游戏运行时加载图片后对场景进行扰动。2.将扰动体RTT，然后动态分配一个扰动参数来实时模拟。下面的实现是第二种方案。

效果图：（点击图片直接链接至Demo,在Demo中按A键切换效果）

<a href="http://blog.as3er.com/demo/HeatHaze.html"><img class="alignnone size-full wp-image-976" alt="heatDemo" src="http://blog.as3er.com/wp-content/uploads/2014/05/heatDemo.jpg" width="800" height="606" /></a>

&nbsp;

1.大多数情况下，都是在播放特效的时候需要这种扭曲效果（如上图）。所以要将正常的渲染对象和扰动体做一个区分。要在Entity.as中添加如下代码:
<pre class="brush:as3">/**
* 粒子层 
*/		
public static const PARTICLE_LAYER:uint = 2;

/**
* 热干扰类型
* 0不是热干扰体，1是热干扰体并渲染干扰体本身，2是热干扰体但不渲染干扰体本身 
*/		
public var heatHazeType:uint = 0;</pre>
2.在收集器里，也要讲Particle单独收集至RenderableListItem。在EntityCollector.as中添加对应代码:
<pre class="brush:as3">protected var _particleRenderableHead:RenderableListItem;//Particle Renderable
//在applyRenderable方法中修改收集判断
if(renderable.sourceEntity.renderLayer == Entity.AVATAR_LAYER)//Avatar层
{
	item.next = _avatarRenderableHead;
	_avatarRenderableHead = item;
}else if(renderable.sourceEntity.renderLayer == Entity.PARTICLE_LAYER)//Particle层
{
	item.next = _particleRenderableHead;
	_particleRenderableHead = item;
}else if(material.requiresBlending)
{
	item.next = _blendedRenderableHead;
	_blendedRenderableHead = item;
} else
{
	item.next = _opaqueRenderableHead;
	_opaqueRenderableHead = item;
}
//要在clear方法中清楚收集
_particleRenderableHead = null;</pre>
3.根据heatHazeType来确定渲染方式，修改DefaultRenderer.as的drawRenderables方法，还要修改draw方法来正常渲染粒子层
<pre class="brush:as3">//修改drawRenderables方法
var numPasses:uint;
var j:uint;
var camera:Camera3D = entityCollector.camera;
var item2:RenderableListItem;
var singlePassMat:SinglePassMaterialBase;

while (item) 
{
	if(item.renderable.sourceEntity.heatHazeType == 2)
	{
		item = item.next;
		continue;
	}
}
//修改draw方法，添加粒子的渲染
drawRenderables(entityCollector.opaqueRenderableHead, entityCollector, which);
drawRenderables(entityCollector.blendedRenderableHead, entityCollector, which);
drawRenderables(entityCollector.particleRenderableHead, entityCollector, which);
//还要将扰动体RTT，所以要在executeRender方法中添加对应代码
if(_view3D &amp;&amp; _view3D.filters3d)
{
	for each(var filter:Filter3DBase in _view3D.filters3d)
	{
		if(filter is HeatHazeFilter3D)
		{
			filter.helpRender(stage3DProxy, entityCollector, _textureRatioX, _textureRatioY);
			break;
		}
	}
}</pre>
4.最后是Filter：Filter3DHeatHazeTask.as,HeatHazeFilter3D.as,HeatHazeRenderer.as其中Filter3DheatHazeTask中的shader可参考<a href="http://http.developer.nvidia.com/GPUGems2/gpugems2_chapter19.html">GUP精粹2的第19章</a>

Filter3DHeatHazeTask.as
<pre class="brush:as3">package copper3d.filters.tasks
{
	import flash.display3D.Context3DBlendFactor;
	import flash.display3D.Context3DProgramType;
	import flash.display3D.textures.Texture;

	import away3d.cameras.Camera3D;
	import away3d.core.managers.Stage3DProxy;
	import away3d.filters.tasks.Filter3DTaskBase;
	import away3d.textures.RenderTexture;

	/**
	 * 热扰动 
	 * @author vancopper
	 * 
	 */	
	public class Filter3DHeatHazeTask extends Filter3DTaskBase
	{
		private var _data:Vector.;
		public var heatMap:RenderTexture;

		public function Filter3DHeatHazeTask()
		{
			_data = Vector.([1, 1, 0.0015, 1, 2, 2, 0, 0]);
		}

		override protected function getFragmentCode():String
		{
			var code:String = "";

			code += "tex ft1, v0, fs1 &lt;2d, nearest&gt;\n"
				+ "mul ft0,ft1,fc1\n"
				+ "sub ft0,ft0,fc0\n"
				+ "mul ft0,ft0,fc0.z\n"
				+ "add ft0,v0,ft0\n"
				+ "tex oc, ft0, fs0 &lt;2d, nearest&gt;\n";
			return code;
		}

		override public function activate(stage3DProxy:Stage3DProxy, camera:Camera3D, depthTexture:Texture):void
		{
			stage3DProxy.context3D.setBlendFactors(Context3DBlendFactor.ONE, Context3DBlendFactor.ZERO);
			stage3DProxy.context3D.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 0, _data, 2);
			stage3DProxy.context3D.setTextureAt(1, heatMap.getTextureForStage3D(stage3DProxy));
		}

		override public function deactivate(stage3DProxy:Stage3DProxy):void
		{
			stage3DProxy.context3D.setTextureAt(1, null);
		}

		/**
		 * 扰动强度 
		 */
		public function get disturb():Number
		{
			return _data[2];
		}

		/**
		 * @private
		 */
		public function set disturb(value:Number):void
		{
			_data[2] = value;
		}

	}
}</pre>
HeatHazeFilter3D.as
<pre class="brush:as3">package copper3d.filters
{
	import away3d.arcane;
	import away3d.core.managers.Stage3DProxy;
	import away3d.core.traverse.EntityCollector;
	import away3d.filters.Filter3DBase;
	import away3d.textures.RenderTexture;

	import copper3d.core.render.HeatHazeRenderer;
	import copper3d.filters.tasks.Filter3DHeatHazeTask;

	use namespace arcane;

	/**
	 * 热扰动 
	 * @author vancopper
	 * 
	 */	
	public class HeatHazeFilter3D extends Filter3DBase
	{
		private var _heatFilterTask:Filter3DHeatHazeTask;
		private var _renderTexture:RenderTexture;
		private var _render:HeatHazeRenderer;

		public function HeatHazeFilter3D()
		{
			_renderTexture = new RenderTexture(2,2);
			_heatFilterTask = new Filter3DHeatHazeTask();
			_render = new HeatHazeRenderer();
			addTask(_heatFilterTask);
		}

		override public function helpRender(stage3DProxy : Stage3DProxy, collector:EntityCollector, textureRatioX:Number, textureRatioY:Number):void
		{
			var stage3DIndex:int = stage3DProxy.stage3DIndex;
			_render.stage3DProxy = stage3DProxy;
			_render.textureRatioX = textureRatioX;
			_render.textureRatioY = textureRatioY;
			_heatFilterTask.heatMap = _renderTexture;
			_render.render(collector, _renderTexture.getTextureForStage3D(stage3DProxy));
		}

		override public function dispose():void
		{
			super.dispose();
			_renderTexture.dispose();
		}

		override public function set textureWidth(value : int):void
		{
			super.textureWidth = value;
			_renderTexture.width = value;
		}

		override public function set textureHeight(value:int):void
		{
			super.textureHeight = value;
			_renderTexture.height = value;
		}

		/**
		 * 热扰动强度 
		 */
		public function get disturb():Number
		{
			return _heatFilterTask.disturb;
		}

		/**
		 * @private
		 */
		public function set disturb(value:Number):void
		{
			_heatFilterTask.disturb = value;
		}

	}
}</pre>
<pre> 
HeatHazeRenderer.as
</pre>
<pre class="brush:as3">
package copper3d.core.render
{
	import flash.display3D.textures.TextureBase;

	import away3d.arcane;
	import away3d.cameras.Camera3D;
	import away3d.core.data.RenderableListItem;
	import away3d.core.render.RendererBase;
	import away3d.core.traverse.EntityCollector;
	import away3d.materials.MaterialBase;

	use namespace arcane;

	public class HeatHazeRenderer extends RendererBase
	{

		private var _activeMaterial:MaterialBase;

		public function HeatHazeRenderer()
		{
		}

		override protected function draw(entityCollector:EntityCollector, target:TextureBase):void
		{
			drawRenderables(entityCollector.particleRenderableHead, entityCollector, true);
			if (_activeMaterial)
			{
				_activeMaterial.deactivate(_stage3DProxy);
			}
			_activeMaterial = null;
		}

		private function drawRenderables(renderableListItem:RenderableListItem, entityCollector:EntityCollector, flag:Boolean):void
		{
			var numPasses:uint;
			var i:uint;
			var renderableListItem1:RenderableListItem;
			var heatHazeType:int;
			var camera:Camera3D = entityCollector.camera;
			while (renderableListItem) {
				_activeMaterial = renderableListItem.renderable.material;
				_activeMaterial.updateMaterial(_stage3DProxy.context3D);
				numPasses = _activeMaterial.numPasses;
				i = 0;
				do  
				{
					renderableListItem1 = renderableListItem;
					_activeMaterial.activatePass(i, _stage3DProxy, camera);
					do  
					{
						heatHazeType = renderableListItem1.renderable.sourceEntity.heatHazeType;
						if (heatHazeType != 0)
						{
							_activeMaterial.renderPass(i, renderableListItem1.renderable, _stage3DProxy, entityCollector, _rttViewProjectionMatrix);
						} 
						renderableListItem1 = renderableListItem1.next;
					} while (renderableListItem1 &amp;&amp; renderableListItem1.renderable.material == _activeMaterial);

					_activeMaterial.deactivatePass(i, _stage3DProxy);
				} while (++i &lt; numPasses)
				renderableListItem = renderableListItem1;
			}
		}
	}
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>975</wp:post_id>
		<wp:post_date>2014-05-09 11:57:27</wp:post_date>
		<wp:post_date_gmt>2014-05-09 03:57:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-%e7%83%ad%e6%89%b0%e5%8a%a8%e7%89%b9%e6%95%88%ef%bc%88heathaze%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="away3d"><![CDATA[Away3D]]></category>
		<category domain="post_tag" nicename="heathazeeffect"><![CDATA[HeatHazeEffect]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D 武器刀光的实现</title>
		<link>http://blog.as3er.com/?p=987</link>
		<pubDate>Wed, 14 May 2014 11:25:29 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=987</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

感谢网友<strong>@panda_星</strong>提供的例子以及模型文件，很高兴认识关注该Blog的网友们。并非常感谢你们对文章的反馈。

效果图：（点击图片直接链接至Demo)

<a href="http://blog.as3er.com/demo/WeaponTarilTest.html"><img class="alignnone size-full wp-image-988" alt="WeaponTaril" src="http://blog.as3er.com/wp-content/uploads/2014/05/WeaponTaril.jpg" width="682" height="449" /></a>

&nbsp;

实现刀光有两种方式：1.利用粒子来做，U3D里就有一个现有的组件来做这个效果而且貌似就是粒子特效。2.动态采集武器的运动轨迹来生成刀光用Geometry，然后贴上刀光贴图。上面的Demo是基于第二种的实现。

第一步：你需要有两个点作为采集点，例子里也就是刀尖和刀把对应的两根骨骼。在武器运动的同时收集这两根骨骼的位置。

第二步：这一步比较重要的一点就是需要对收集的点做平滑处理，也就是先将两帧之间的点均分，并调整点之间的距离为武器的长度。这样生成的Geometry就是平滑的了。

第三步：根据设定的最大Geometry数量来剔除前面生成的多余的Geometry,这样刀光也就有了跟随效果。

第四步：计算每个Geometry对应的UV坐标，然后上传，搞定。

看代码最清楚了。

WeaponTaril.as
<pre class="brush:as3">package copper3d.effect.weapon
{
	import flash.events.Event;
	import flash.geom.Vector3D;

	import away3d.animators.SkeletonAnimator;
	import away3d.animators.data.JointPose;
	import away3d.animators.data.Skeleton;
	import away3d.containers.View3D;
	import away3d.core.base.Geometry;
	import away3d.core.base.SubGeometry;
	import away3d.core.math.Vector3DUtils;
	import away3d.entities.Mesh;
	import away3d.events.AnimatorEvent;
	import away3d.materials.TextureMaterial;

	/**
	 * 武器拖尾 
	 * @author vancopper
	 * 
	 */	
	public class WeaponTaril
	{
		private var _view3D:View3D;
		private var _tarilMat:TextureMaterial;
		private var _tarilSkeletonAni:SkeletonAnimator;
		private var _startBoneIndex:int;
		private var _endBoneIndex:int;
		private var _sJointPose:JointPose;
		private var _eJointPose:JointPose;
		private var _currentAniName:String;//当前播放的动作
		private var _tarilMesh:Mesh;
		private var _samplingMeshV:Vector.&lt;Mesh&gt; = new Vector.&lt;Mesh&gt;();// 采样
		private var _samplingGap:int = 20;//采样间隔为 50ms 未使用
		private var _timestamp:int;//时间戳
		private var _maxSamples:int = 60;
		private var _divide:int = 8;
		private var _weaponDis:Number = NaN;

		private var _isPlaying:Boolean;

		private var _bindingTags:Vector.&lt;String&gt;;

		public function WeaponTaril(view3d:View3D, mat:TextureMaterial)
		{
			_view3D = view3d;
			_tarilMat = mat;
		}

		/**
		 * 显示武器拖尾
		 * @param skeletonAin 要跟踪的SkeletonAnimator
		 * @param startTag 用来生成拖尾的第一个骨骼点
		 * @param endTag	用来生成拖尾的第二个骨骼点
		 * 
		 */		
		public function startTaril(mesh:Mesh, skeletonAni:SkeletonAnimator, startTag:String, endTag:String):void
		{
			if(!skeletonAni){throw new Error("SkeletonAnimator is Null");}

			_tarilSkeletonAni = skeletonAni;
			var skeleton:Skeleton = _tarilSkeletonAni.skeleton;
			if(!skeleton){throw new Error("skeleton is Null");}

			_weaponDis = NaN;
			_startBoneIndex = skeleton.jointIndexFromName(startTag);
			_endBoneIndex = skeleton.jointIndexFromName(endTag);
			if(_view3D)
			{
				_view3D.addEventListener(Event.EXIT_FRAME, onExitFrame);
			}
			_tarilMesh = mesh;
			_tarilSkeletonAni.addEventListener(AnimatorEvent.START, onAniStart);
		}

		/**
		 * 停止拖尾 
		 * 
		 */		
		public function stopTaril():void
		{
			if(!_isPlaying)return;
			_isPlaying = false;
			if(_samplingMeshV)
			{
				for(var i:int = 0; i &lt; _samplingMeshV.length; i++)
				{
					var mesh:Mesh = _samplingMeshV[i];
					if(mesh &amp;&amp; mesh.parent)
					{
						mesh.parent.removeChild(mesh);
						mesh.dispose();
					}
				}
			}
			if(_view3D)_view3D.removeEventListener(Event.EXIT_FRAME, onExitFrame);
//			_timestamp = getTimer();
			if(_tarilSkeletonAni)_tarilSkeletonAni.removeEventListener(AnimatorEvent.START, onAniStart);
			_tarilSkeletonAni = null;
		}

		public function dispose():void
		{
			//TODO:
		}

		/**
		 * 要显示拖尾效果的动作 
		 */
		public function get bindingTags():Vector.&lt;String&gt;
		{
			return _bindingTags;
		}

		/**
		 * @private
		 */
		public function set bindingTags(value:Vector.&lt;String&gt;):void
		{
			_bindingTags = value;
		}

		/**
		 * 武器拖尾的采样间隔 
		 */
		public function get samplingGap():int
		{
			return _samplingGap;
		}

		/**
		 * @private
		 */
		public function set samplingGap(value:int):void
		{
			_samplingGap = value;
		}

		/**
		 * 最大采样值（可生成面片的最大数） 
		 */
		public function get maxSamples():int
		{
			return _maxSamples;
		}

		/**
		 * @private
		 */
		public function set maxSamples(value:int):void
		{
			_maxSamples = value;
		}

		private function onExitFrame(e:Event):void
		{
			if(!bindingTags || bindingTags.length == 0)return;

			if(_tarilSkeletonAni.globalPose.jointPoses.length &gt; 0 &amp;&amp; !_sJointPose &amp;&amp; !_eJointPose)
			{
				_sJointPose = _tarilSkeletonAni.globalPose.jointPoses[_startBoneIndex];
				_eJointPose = _tarilSkeletonAni.globalPose.jointPoses[_endBoneIndex];
			}

			if(bindingTags.indexOf(_currentAniName) == -1)
			{
				stopTaril();
				return;
			}
			if(_sJointPose &amp;&amp; _eJointPose)
			{
				samplingMesh();
			}
		}

		/**
		 * 插值 
		 * 
		 */		
		private function interpolation():void
		{
			var s1:Vector3D = _tempV[0];
			var e1:Vector3D = _tempV[1];
			var s2:Vector3D = _tempV[2];
			var e2:Vector3D = _tempV[3];

			if(isNaN(_weaponDis))
			{
				_weaponDis = Vector3D.distance(s1, e1);
			}

			if(s1.nearEquals(s2, 10) || e1.nearEquals(e2, 10))
			{
				_posV = _tempV.concat();
				return;
			}

			var v1:Vector.&lt;Vector3D&gt; = Vector3DUtils.divide(s1, s2, _divide);
			var v2:Vector.&lt;Vector3D&gt; = Vector3DUtils.divide(e1, e2, _divide);
			for(var i:int = 0; i &lt; _divide + 1; i++)
			{
				_posV.push(v1[i]);
				_posV.push(getEndVector3D(v1[i], v2[i], _weaponDis));
			}
		}

		private function getEndVector3D(p1:Vector3D, p2:Vector3D, mDistance:Number ):Vector3D
		{
			var v:Vector3D = new Vector3D();
			var distance:Number = Vector3D.distance(p1, p2);
			var theta:Number = Math.asin((p2.z-p1.z)/distance);

			v.x = p1.x+ ((mDistance/Math.cos(theta))/distance)*(p2.x-p1.x);
			v.y = p1.y+ ((mDistance/Math.cos(theta))/distance)*(p2.y-p1.y);
			//TODO: z轴变化 会导致过度变形 
			v.z = p2.z;//p1.z+ ((mDistance/Math.cos(theta))/distance)*(p2.z-p1.z);
			return v;
		}

		private var _tempV:Vector.&lt;Vector3D&gt; = new Vector.&lt;Vector3D&gt;();
		private var _posV:Vector.&lt;Vector3D&gt; = new Vector.&lt;Vector3D&gt;();
		private function samplingMesh():void
		{
			_tempV.push(_sJointPose.toMatrix3D().position);
			_tempV.push(_eJointPose.toMatrix3D().position);
			if(_tempV.length &gt;= 4 &amp;&amp; _tempV.length % 2 == 0)
			{
				interpolation();
				_tempV.shift();
				_tempV.shift();
			}

			if(_posV.length &gt; 0)
			{
				var num:int = _posV.length/2 - 1;
				var i:int = 0;
				var j:int = 0;
				for( i = 0; i &lt; num; i++)
				{
					var vData:Vector.&lt;Number&gt; = new Vector.&lt;Number&gt;();
					for(j = 0; j &lt; 4; j++)
					{
						vData.push(_posV[i*2 + j].x, _posV[i*2 +j].y, _posV[i*2 + j].z); 
					}

					var geometry:SubGeometry = new SubGeometry();
					geometry.updateVertexData(vData);
					geometry.updateIndexData(Vector.&lt;uint&gt;([0,1,3,0,2,3]));
					var geo:Geometry = new Geometry();
					geo.addSubGeometry(geometry);
					var tempmesh:Mesh = new Mesh(geo, _tarilMat);
					_tarilMesh.addChild(tempmesh);
					_samplingMeshV.push(tempmesh);
				}
			}

			for (var n:int = 0; n &lt; _samplingMeshV.length; n++) 
			{
				var uvData:Vector.&lt;Number&gt; = Vector.&lt;Number&gt;([1-n/_maxSamples,0,
					1-n/_maxSamples,1, 
					1-(n+1)/_maxSamples,0, 
					1-(n+1)/_maxSamples,1])
				SubGeometry(_samplingMeshV[n].geometry.subGeometries[0]).updateUVData(uvData)
			}

			if(_samplingMeshV.length &gt; _maxSamples)
			{
				var loop:int = _samplingMeshV.length - _maxSamples;
				while(loop --)
				{
					var clearMesh:Mesh = _samplingMeshV.shift();
					_tarilMesh.removeChild(clearMesh);
					clearMesh.dispose();
				}
			}

			var len:int = _posV.length;
			if(len)
			{
				_tempV[0] = _posV[len - 2];
				_tempV[1] = _posV[len - 1];
				_posV.length = 0;
			}	
		}

		private function onAniStart(event:AnimatorEvent):void
		{
			_isPlaying = true;
			_currentAniName = _tarilSkeletonAni.activeAnimationName;
		}
	}
}</pre>
在Vector3DUtils.as里添加一个工具方法
<pre class="brush:as3">public static function divide(startVal:Vector3D, endVal:Vector3D, divideNum:int):Vector.&lt;Vector3D&gt;
{
	var result:Vector.&lt;Vector3D&gt; = new Vector.&lt;Vector3D&gt;();

	var stepx:Number = (endVal.x - startVal.x)/divideNum;
	var stepy:Number = (endVal.y - startVal.y)/divideNum;
	var stepz:Number = (endVal.z - startVal.z)/divideNum;

	var step:int = 1;
	var index:int = 1;
	var scalestep:Vector3D;
	result[0] = startVal;

	while(step &lt; divideNum)
	{
		scalestep = new Vector3D();
		scalestep.x = startVal.x + (stepx*step);
		scalestep.y = startVal.y + (stepy*step);
		scalestep.z = startVal.z + (stepz*step);
		result[step] = scalestep;
		step ++;
	}

	result[step] = endVal;

	return result;
}</pre>
用法：
<pre class="brush:as3">weaponT = new WeaponTaril(view, bodyMaterial);
weaponT.startTaril(mesh, animator, "WQ", "WQ1");//后面两个参数为武器上骨骼的名字
weaponT.bindingTags = Vector.&lt;String&gt;(["atk"]);//要播放刀光的动作名称
animator.play("atk");</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>987</wp:post_id>
		<wp:post_date>2014-05-14 19:25:29</wp:post_date>
		<wp:post_date_gmt>2014-05-14 11:25:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-%e6%ad%a6%e5%99%a8%e5%88%80%e5%85%89%e7%9a%84%e5%ae%9e%e7%8e%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="away3d"><![CDATA[Away3D]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<category domain="post_tag" nicename="%e5%88%80%e5%85%89"><![CDATA[刀光]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2012年9月 至 2014年5月</title>
		<link>http://blog.as3er.com/?p=993</link>
		<pubDate>Sun, 25 May 2014 04:50:04 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=993</guid>
		<description></description>
		<content:encoded><![CDATA[<!--?xml version="1.0" encoding="UTF-8" standalone="no"?-->
<div><a href="http://blog.as3er.com/wp-content/uploads/2014/05/qrcode_for_gh_2ed000b98865_258.jpg"><img class="alignnone size-full wp-image-994" alt="qrcode_for_gh_2ed000b98865_258" src="http://blog.as3er.com/wp-content/uploads/2014/05/qrcode_for_gh_2ed000b98865_258.jpg" width="258" height="258" /></a></div>
<div>一般都会将跟技术无关的各种文放在公共号上面，供大家调侃用。但这篇文还是打算放在Blog。（扫描上图可关注我微信的公众号，虽然更新很慢，但终究会坚持写一些）</div>
<div></div>
&nbsp;
<div><b><span style="color: #39334b;">纠结后的决定</span></b></div>
<div>2012年6月份，”五分钟“解散了。这家让我获得最大最快成长的公司，也是在这家公司我收获了几位志同道合的好朋友。六月份至八月份在家照顾生病的家人。八月份回上海后面临两家公司的工作机会开始纠结，第一家公司是我喜欢的公司，技术氛围很好，管理上也很人性化，是一家真的会考虑员工成长的公司。可惜的是公司短期内没有Flash3D的项目。第二家公司是业内非常有“名气”的公司，在上海游戏圈有：“南X梦，北游族”的美誉，一周六天班，早十点晚十点的工作时间。但他们准备做的是一款Flash3D游戏。这就很纠结了，喜欢第一家公司却想做Flash3D的项目。经过反复的纠结，纠结，再纠结后决定去做Flash3D的项目，就这样进入了“南X梦”。</div>
<div></div>
&nbsp;
<div><b>技术攻坚战</b></div>
<div>可能在那些玩端游或U3D的大神看来，Flash3D可能只是个玩具。不错，真的只是个玩具。没有完善成熟的游戏引擎，没有既有的工作流，没有牛逼的性能。。。但在当时看来，插件普及率貌似是唯一的优势。后来项目上线后，才发现如今多数玩家的浏览器都已经被 360浏览器，猎豹浏览器，qq浏览器占领，但这几个浏览器都有一个蛋疼的功能：提供两种浏览模式，兼容模式和极速模式。在极速模式下，FlashPlayer是没有办法开启硬件加速的，这就导致很多玩家进游戏发现游戏卡，就直接关掉。虽然我们做了硬件加速是否开启的检测并提示玩家开启硬件加速，但这仍不能阻止玩家直接关掉游戏。这是多么痛的领悟，你们感受下。</div>
<div>在那个阳光明媚的周六，我来到了公司。讨论完大概的开发计划，我觉得我之前的心理准备是多么的不充足。但已没有退路了，开搞吧。接下来的日子一边底层一边找志同道合的小伙伴，团队直到项目进行四个月后才终得完整。</div>
<div>渲染引擎是没得选的，只能用Away3D。但它只是一个渲染引擎，用来做一款大型ARPG游戏是远远不能满足需求的。所以我们花了很大的精力来扩展和修改Away3D。</div>
<div>1.3DS模型解析：多材质</div>
<div>2.DDS贴图解析 : Dxt1,Dxt5</div>
<div>3.文件多线程解析</div>
<div>4.地形追踪</div>
<div>5.骨骼绑定</div>
<div>6.利用四元数将骨骼上限修改为58根</div>
<div>7.NavMesh寻路</div>
<div>8.NavMesh网格自动生成工具</div>
<div>9.3DMax场景导出插件</div>
<div>10.场景编辑器</div>
<div>11.粒子编辑器</div>
<div>12.各种特效：HDR,GrayScale,HeatHaze,刀光，Phantom等</div>
<div>13.3D文字</div>
<div>14.3DUI</div>
<div>这还只是列了修改和扩展的一部分，你们感受下Away3D的坑。整个开发过程就是不停的填坑，苦逼程度也就可想而知了。上面的列表中的“文件多线程解析”和 “3DMax场景导出插件”为性能和工作流效率都提高了不少。</div>
<div>文件多线程解析: 在游戏中文件和贴图都是以二进制流的方式加载，然后将数据丢到解析线程执行解析，完成后将数据再丢回主线程。很大程度上提高了解析速度并保证了主文件的帧频。</div>
<div>3DMax场景导出插件: 可参照之前的一篇Blog：<a href="http://blog.as3er.com/?p=783">http://blog.as3er.com/?p=783</a></div>
<div>填完上面的坑，接下来就是填策划的坑。他们说策划在项目组中最大的作用就是拉仇恨。我不打算在这篇文章中拉仇恨。太多策划被“策划是游戏的灵魂”“我们是最懂玩家的人”等各种主流洗脑思想的影响。但我觉得不管怎样你都要先对你的合作伙伴负责，不能总拿一些自己都看不懂的策划案给我们做开发。固然我也跟策划各种PK，但还好我们有个靠谱的制作人。修改和返工都在我们可掌控的范围，为此非常欣慰。</div>
<div></div>
&nbsp;
<div><b>政治</b></div>
<div>在稍大点的公司，项目的成败不是取决你事情做的好坏，而“政治”上是否有优势才是成败的关键。</div>
<div></div>
&nbsp;
<div><b>未来</b></div>
<div>锻炼身体，思考方向，码些自己的代码，写些想写的文。</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>993</wp:post_id>
		<wp:post_date>2014-05-25 12:50:04</wp:post_date>
		<wp:post_date_gmt>2014-05-25 04:50:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2012%e5%b9%b49%e6%9c%88-%e8%87%b3-2014%e5%b9%b45%e6%9c%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b7%a5%e4%bd%9c%e6%97%a5%e5%bf%97"><![CDATA[工作日志]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Away3D GodRays 实现</title>
		<link>http://blog.as3er.com/?p=1006</link>
		<pubDate>Sun, 01 Jun 2014 08:17:22 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=1006</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;"><strong>原创博文，转载请声明</strong></span>

上帝之光效果的stage3D实现也在国内一位网友的blog上看到过，可只有demo没有源码以及详细的讲解。既然写Blog就是想把代码共享出来，所以我把国外牛人写的Starling版修改为Away3D版本。

参考：<a href="http://blog.onebyonedesign.com/actionscript/starling-god-ray-filter/">1.Starling God Ray Filter</a> <a href="http://http.developer.nvidia.com/GPUGems3/gpugems3_ch13.html">2.GPU Gems3 - Chapter13</a>

Demo:

<a href="http://blog.as3er.com/wp-content/uploads/2014/06/GodRays.jpg"><img class="alignnone size-full wp-image-1013" alt="GodRays" src="http://blog.as3er.com/wp-content/uploads/2014/06/GodRays.jpg" width="657" height="585" /></a>

Filter3DGodRaysTask.as
<pre class="brush:as3">package copper3d.filters.tasks
{
	import flash.display3D.Context3DProgramType;
	import flash.display3D.textures.Texture;

	import away3d.cameras.Camera3D;
	import away3d.core.managers.Stage3DProxy;
	import away3d.filters.tasks.Filter3DTaskBase;

	/**
	 * GodRays Effect
	 * @author vancopper
	 * 
	 */	
	public class Filter3DGodRaysTask extends Filter3DTaskBase
	{
		private var _numSteps:int = 30;
		private var _lightPos:Vector.&lt;Number&gt; = Vector.&lt;Number&gt;([.5, .5, 1, 1]);
		private var _values1:Vector.&lt;Number&gt; = Vector.&lt;Number&gt;([1, 1, 1, 1]);//numsamples, density, numsamples*density, 1 / numsamples * density
		private var _values2:Vector.&lt;Number&gt; = Vector.&lt;Number&gt;([1, 1, 1, 1]);//weight, decay, exposure

		private var _lightX:Number = 0;
		private var _lightY:Number = 0;
		private var _weight:Number = .5;
		private var _decay:Number = .87;
		private var _exposure:Number = .35;
		private var _density:Number = 2.0;

		public function Filter3DGodRaysTask(requireDepthRender:Boolean=false)
		{
			super(requireDepthRender);
		}

		override protected function getFragmentCode():String
		{
			var code:String = "";

			// Calculate vector from pixel to light source in screen space.
			code += "sub ft0.xy, v0.xy, fc0.xy \n";

			// Divide by number of samples and scale by control factor.  
			code += "mul ft0.xy, ft0.xy, fc1.ww \n";

			// Store initial sample.  
			code += "tex ft1,  v0, fs0 &lt;2d, clamp, linear, mipnone&gt; \n";

			// Set up illumination decay factor.  
			code += "mov ft2.x, fc0.w \n";

			// Store the texcoords
			code += "mov ft4.xy, v0.xy \n";

			for (var i:int = 0; i &lt; _numSteps; i++)
			{
				// Step sample location along ray. 
				code += "sub ft4.xy, ft4.xy, ft0.xy \n";

				// Retrieve sample at new location.  
				code += "tex ft3,  ft4.xy, fs0 &lt;2d, clamp, linear, mipnone&gt; \n";

				// Apply sample attenuation scale/decay factors.  
				code += "mul ft2.y, ft2.x, fc2.x \n";
				code += "mul ft3.xyz, ft3.xyz, ft2.yyy \n";

				// Accumulate combined color.  
				code += "add ft1.xyz, ft1.xyz, ft3.xyz \n";

				// Update exponential decay factor.  
				code += "mul ft2.x, ft2.x, fc2.y \n";
			}

			// Output final color with a further scale control factor. 
			code += "mul ft1.xyz, ft1.xyz, fc2.zzz \n";
			code += "mov oc, ft1";
			return code;
		}

		override public function activate(stage3DProxy:Stage3DProxy, camera:Camera3D, depthTexture:Texture):void
		{
			// light position
			_lightPos[0] = this._lightX / stage3DProxy.width;
			_lightPos[1] = this._lightY / stage3DProxy.height;

			// numsamples, density, numsamples * density, 1 / numsamples * density
			_values1[0] = _numSteps;
			_values1[1] = this._density;
			_values1[2] = _numSteps * _values1[1];
			_values1[3] = 1 / _values1[2];

			// weight, decay, exposure
			_values2[0] = this._weight;
			_values2[1] = this._decay;
			_values2[2] = this._exposure;

			stage3DProxy.context3D.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 0, _lightPos, 1 );	
			stage3DProxy.context3D.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 1, _values1,  1 );
			stage3DProxy.context3D.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 2, _values2,  1 );

		}

		public function set lightX(value:Number):void { this._lightX = value; }
		public function get lightX():Number { return this._lightX; }

		public function set lightY(value:Number):void { this._lightY = value; }
		public function get lightY():Number { return this._lightY; }

		public function set decay(value:Number):void { this._decay = value; }
		public function get decay():Number { return this._decay; }

		public function set exposure(value:Number):void { this._exposure = value; }
		public function get exposure():Number { return this._exposure; }

		public function set weight(value:Number):void { this._weight = value; }
		public function get weight():Number { return this._weight; }

		public function set density(value:Number):void { this._density = value; }
		public function get density():Number { return this._density; }
	}
}</pre>
GodRaysFilter3D.as
<pre class="brush:as3">package copper3d.filters
{
	import away3d.filters.Filter3DBase;
	
	import copper3d.filters.tasks.Filter3DGodRaysTask;

	/**
	 * GodRays Effect
	 * @author vancopper
	 * 
	 */	
	public class GodRaysFilter3D extends Filter3DBase
	{
		
		private var _godRaysTask:Filter3DGodRaysTask;
		
		public function GodRaysFilter3D()
		{
			super();
			_godRaysTask = new Filter3DGodRaysTask();
			addTask(_godRaysTask);
		}
		
		public function set lightX(value:Number):void { _godRaysTask.lightX = value; }
		public function get lightX():Number { return _godRaysTask.lightX; }
		
		public function set lightY(value:Number):void { _godRaysTask.lightY = value; }
		public function get lightY():Number { return _godRaysTask.lightY; }
		
		public function set decay(value:Number):void { _godRaysTask.decay = value; }
		public function get decay():Number { return _godRaysTask.decay; }
		
		public function set exposure(value:Number):void { _godRaysTask.exposure = value; }
		public function get exposure():Number { return _godRaysTask.exposure; }
		
		public function set weight(value:Number):void { _godRaysTask.weight = value; }
		public function get weight():Number { return _godRaysTask.weight; }
		
		public function set density(value:Number):void { _godRaysTask.density = value; }
		public function get density():Number { return _godRaysTask.density; }
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1006</wp:post_id>
		<wp:post_date>2014-06-01 16:17:22</wp:post_date>
		<wp:post_date_gmt>2014-06-01 08:17:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>away3d-godrays-%e5%ae%9e%e7%8e%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenGL ES 3.0 Programming Guide 中文不完全版</title>
		<link>http://blog.as3er.com/?p=1023</link>
		<pubDate>Mon, 30 Jun 2014 09:31:45 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=1023</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>《OpenGL ES 3.0 Programming Guide 中文不完全版》</strong> <strong>看标题有点莫名其妙吗？其实想直接写<em>xxx中文版</em>。但由于我并没有逐字翻译和做二次校验，他顶多算是在自己的理解的基础上的二次加工。放到博客一方面是方便查阅，一方面希望能有需要的朋友提供帮助，欢迎<em>大家来找茬</em>。把错误留言给我即可，我会第一时间修正。</strong></p>

<p>另：大家勿要问我要本书英文原版PDF，需要的朋友可至http://www.opengles-book.com购买。</p>

<hr />

<h1>本书目录</h1>

<ul>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/introduction_to_opengl_es_30/README.html">OpenGL ES 3.0 简介</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/README.html">Hello Triangle: An OpenGL ES 3.0 Example</a> 

<ul>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/code_framework.html">Code Framework</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/where_to_download_the_examples.html">Where to Download the Examples</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/hello_triangle_example.html">Hello Triangle Example</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/using_the_opengl_es_30_framework.html">Using the OpenGL ES 3.0 Framework</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/creating_a_simple_vertex_and_fragment_shader.html">Creating a Simple Vertex and Fragment Shader</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/compiling_and_loading_the_shaders.html">Compiling and Loading the Shaders</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/creating_a_program_object_and_linking_the_shaders.html">Creating a Program Object and Linking the Shaders</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/setting_the_viewport_and_clearing_the_color_buffer.html">Setting the Viewport and Clearing the Color Buffer</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/loading_the_geometry_and_drawing_a_primitive.html">Loading the Geometry and Drawing a Primitive</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/hello_triangle_an_opengl_es_30_example/displaying_the_back_buffer.html">Displaying the Back Buffer</a></li>
</ul></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/README.html">An Introduction to EGL</a> 

<ul>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/communicating_with_the_windowing_system.html">Communicating with the Windowing System</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/checking_for_errors.html">Checking for Errors</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/initializing_egl.html">Initializing EGL</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/determining_the_available_surface_configurations.html">Determining the Available Surface Configurations</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/querying_eglconfig_attributes.html">Querying EGLConfig Attributes</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/letting_egl_choose_the_configuration.html">Letting EGL Choose the Configuration</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/creating_an_on-screen_rendering_area_the_egl_window.html">Creating an On-Screen Rendering Area: The EGL Window</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/creating_an_off-screen_rendering_area_egl_pbuffers.html">Creating an Off-Screen Rendering Area: EGL Pbuffers</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/creating_a_rendering_context.html">Creating a Rendering Context</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/making_an_eglcontext_current.html">Making an EGLContext Current</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/putting_all_our_egl_knowledge_together.html">Putting All Our EGL Knowledge Together</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/an_introduction_to_egl/synchronizing_rendering.html">Synchronizing Rendering</a></li>
</ul></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/shaders_and_programs/README.html">Shaders and Programs</a> 

<ul>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/shaders_and_programs/shader_and_programs.html">Shaders and Programs</a> 

<ul>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/shaders_and_programs/qq.html">Creating and Compiling a Shader</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/shaders_and_programs/creating_and_linking_a_program.html">Creating and Linking a Program</a></li>
</ul></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/shaders_and_programs/uniform_and_attributes.html">Uniform and Attributes</a> 

<ul>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/shaders_and_programs/getting_and_setting_uniforms.html">Getting and Setting Uniforms</a></li>
<li><a href="http://blog.copper3d.org/OpenGL_ES_3.0/shaders_and_programs/uniform_buffer_objects.html">Uniform Buffer Objects</a></li>
<li>[Getting and Setting Attributes]</li>
</ul></li>
<li>[Shader Compiler]</li>
<li>[Program Binaries]</li>
<li>[Summary]</li>
</ul></li>
<li>[OpenGL ES Shading Language] 

<ul>
<li>[OpenGL ES Shading Language Basics]</li>
<li>[Shader Version Specification]</li>
<li>[Variables and Variable Types]</li>
<li>[Variable Constructors]</li>
<li>[Vector and Matrix Components]</li>
<li>[Constants]</li>
<li>[Structures]</li>
<li>[Arrays]</li>
<li>[Operators]</li>
<li>[Functions]</li>
<li>[Built-In Functions]</li>
<li>[Control Flow Statements]</li>
<li>[Uniforms]</li>
<li>[Uniform Blocks]</li>
<li>[Vertex and Fragment Shader Inputs/Outputs]</li>
<li>[Interpolation Qualifiers]</li>
<li>[Preprocessor and Directives]</li>
<li>[Uniform and Interpolator Packing]</li>
<li>[Precision Qualifiers]</li>
<li>[Invariance]</li>
<li>[Summary]</li>
</ul></li>
<li>（未完）</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1023</wp:post_id>
		<wp:post_date>2014-06-30 17:31:45</wp:post_date>
		<wp:post_date_gmt>2014-06-30 09:31:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opengl-es-3-0-programming-guide-%e4%b8%ad%e6%96%87%e4%b8%8d%e5%ae%8c%e5%85%a8%e7%89%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[openGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stage3D-HelloTriangle</title>
		<link>http://blog.as3er.com/?p=1032</link>
		<pubDate>Wed, 30 Jul 2014 04:40:25 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=1032</guid>
		<description></description>
		<content:encoded><![CDATA[<p>一个可见的例子可作为很好的切入点。从这篇开始会持续更新Stage3D的博文，也会放一些在<a href="http://yuedu.baidu.com/partner/browse/profile?id=eb562d378e9951e79b892763&amp;fr=index">百度阅读</a>。如果你愿意表示支持付费阅读，可以在上面购买。不购买也没关系，上面所有的文章均可在博客中找到。</p>

<p>入正题：</p>

<p>本篇主要是通过简单例子理解相关概念以及基本的渲染流程。对于一些知识点，后面会展开讨论。</p>

<p>通过<code>Stage3D</code>来渲染，最基本的步骤如下：</p>

<ol>
<li>向<code>Stage3D</code>请求一个<code>Context3D</code>的实例</li>
<li>配置<code>Context3D</code></li>
<li>创建顶点缓冲<code>vertexBuffer</code>，索引缓冲<code>indexBuffer</code></li>
<li>将顶点数据，索引数据上传至<code>Context3D</code></li>
<li>创建顶点着色器，片段着色器</li>
<li>创建<code>Program3D</code></li>
<li>执行渲染</li>
</ol>

<p>先来解释几个概念：</p>

<p><code>Stage3D</code>:可将Stage3D理解为容器，它始终在stage下面。一共有4个可用的Stage3D层。你通过<code>Context3D</code>渲染的所有东西都会最终呈现在Stage3D层。</p>

<pre>stage.stage3Ds[0]</pre>

<p>通过上面的代码可获取对应的Stage3D。</p>

<p><code>Context3D</code>:渲染用上下文，跟显卡的所有交互都需要通过Context3D来完成。当我们获取到了Stage3D就可以对应的去请求一个Context3D。</p>

<pre>_stage3d.requestContext3D(Context3DRenderMode.AUTO, Context3DProfile.STANDARD);</pre>

<p><code>vertexBuffer</code>,<code>indexBuffer</code>:分别用来存储渲染用的顶点数据，索引数据。</p>

<p><code>Program3D</code>:着色器程序，包含了顶点着色器，片段着色器。</p>

<p>按部就班的来：</p>

<h4>1&#46;向Stage3D请求一个Context3D的实例</h4>

<pre>if(this.stage.stage3Ds.length > 0)
    {
    _stage3d = this.stage.stage3Ds[0];
    _stage3d.addEventListener(ErrorEvent.ERROR, onCreateContext3DError);
    _stage3d.addEventListener(Event.CONTEXT3D_CREATE, onContext3DCreated);
    _stage3d.requestContext3D(Context3DRenderMode.AUTO, Context3DProfile.STANDARD);
    }
</pre>

<p>这一步需要注意的是在<code>requestContext3D</code>之前一定要先监听<code>Event.CONTEXT3D_CREATE</code>事件。</p>

<h4>2&#46;配置Context3D</h4>

<pre>private function initContext3D():void
    {
    _context3d = _stage3d.context3D;
    _context3d.configureBackBuffer(700, 500, 2);
    }
</pre>

<p>在成功创建<code>Context3D</code>，通过<code>Stage3D</code>拿到实例后配置可渲染的范围以及消除锯齿的品质。</p>

<table>
<thead>
<tr>
  <th>value</th>
  <th align="center">品质</th>
</tr>
</thead>
<tbody>
<tr>
  <td>0</td>
  <td align="center">不消除锯齿</td>
</tr>
<tr>
  <td>2</td>
  <td align="center">最小消除锯齿</td>
</tr>
<tr>
  <td>4</td>
  <td align="center">高质量消除锯齿</td>
</tr>
<tr>
  <td>16</td>
  <td align="center">极高质量消除锯齿</td>
</tr>
</tbody>
</table>

<h4>3&#46; 创建顶点缓冲vertexBuffer，索引缓冲indexBuffer</h4>

<pre>var vertexData:Vector.&lt;Number> = Vector.&lt;Number>( [
                             // x, y, z, r, g, b 
                                0, 0, 0, 1, 0, 1, 
                                1, 1, 0, 1, 1, 0, 
                                1, 0, 0, 1, 0, 0 ]); 
    var indexData:Vector.&lt;uint> = Vector.&lt;uint>( [0, 1, 2]);
    
    _vertexBuffer = _context3d.createVertexBuffer(vertexData.length/6, 6);
    _indexBuffer = _context3d.createIndexBuffer(indexData.length);
</pre>

<p><code>vertexData</code>里存放的是三个顶点的数据，每行的前三个数字是坐标，后三个数字是颜色值。<code>indexData</code>里存放的索引值的先后顺序代表了你绘制三个点的顺序。 <code>_context3d.createVertexBuffer(vertexData.length/6, 6);</code>通过此方法创建顶点缓冲。第一个参数是顶点数量，第二个参数是每个顶点包含的数据个数。<code>_indexBuffer = _context3d.createIndexBuffer(indexData.length);</code> 通过此方法创建索引缓冲。参数为顶点数量。</p>

<h4>4&#46; 将顶点数据，索引数据上传至Context3D</h4>

<pre>//第一个参数为顶点数据，第二个参数为顶点开始的索引，第三个为顶点数
    _vertexBuffer.uploadFromVector(vertexData, 0, vertexData.length/6);
    //第一个参数为索引数据，第二个参数为索引数据的开始索引，第三个为数量
    _indexBuffer.uploadFromVector(indexData, 0, 3);`
</pre>

<h4>5&#46; 创建顶点着色器，片段着色器</h4>

<h4>6&#46; 创建Program3D</h4>

<pre>var vertexSrc:String = "mov op, va0\n" +
                    "mov v0, va1\n";
    var fragmentsrc:String = "mov oc, v0\n";
    var shaderAssembler:AGALMiniAssembler = new AGALMiniAssembler();
    _program3d = shaderAssembler.assemble2(_context3d, 2, vertexSrc, fragmentsrc);
    _context3d.setVertexBufferAt(0, _vertexBuffer, 0,
                    Context3DVertexBufferFormat.FLOAT_3);
    _context3d.setVertexBufferAt(1, _vertexBuffer, 3,
                    Context3DVertexBufferFormat.FLOAT_3);
    _context3d.setProgram(_program3d);
</pre>

<p>这部分是比较重要的一步，包含了顶点，片段着色器。这里我们使用的是AGAL2的版本。关于AGAL后面会详细讲解。</p>

<h4>7&#46; 执行渲染</h4>

<pre>
_context3d.clear(0, 0, 0); 
_context3d.drawTriangles(_indexBuffer);
_context3d.present();
</pre>

<p>最后一定要执行<code>_context3d.present()</code>来显示后台渲染缓冲区。</p>

<p>最终结果： <img src="http://blog.as3er.com/wp-content/uploads/2014/07/helloTriangle1.jpg" alt="" /></p>

<p>完整代码：</p>

<pre>package { 
        import com.adobe.utils.extended.AGALMiniAssembler;
        import flash.display.Sprite;
        import flash.display.Stage3D;
        import flash.display3D.Context3D;
        import flash.display3D.Context3DProfile;
        import flash.display3D.Context3DRenderMode;
        import flash.display3D.Context3DVertexBufferFormat;
        import flash.display3D.IndexBuffer3D;
        import flash.display3D.Program3D;
        import flash.display3D.VertexBuffer3D;
        import flash.events.ErrorEvent;
        import flash.events.Event;
    
        [SWF(backgroundColor="#333333", frameRate="60", width="800", height="600")]
        public class HelloTriangle extends Sprite
        {
            private var _context3d:Context3D;
            private var _stage3d:Stage3D;
    
            private var _vertexBuffer:VertexBuffer3D;
            private var _indexBuffer:IndexBuffer3D;
    
            private var _program3d:Program3D;
    
            public function HelloTriangle()
            {
                super();
                addEventListener(Event.ADDED_TO_STAGE, onAddToStage);
            }
    
            private function onAddToStage(e:Event):void
            {
                removeEventListener(Event.ADDED_TO_STAGE, onAddToStage);
                if(this.stage.stage3Ds.length > 0)
                {
                    _stage3d = this.stage.stage3Ds[0];
                    _stage3d.addEventListener(ErrorEvent.ERROR, onCreateContext3DError);
                    _stage3d.addEventListener(Event.CONTEXT3D_CREATE, onContext3DCreated);
                    _stage3d.requestContext3D(Context3DRenderMode.AUTO, Context3DProfile.STANDARD);
                }
            }
    
            private function onContext3DCreated(event:Event):void
            {
                initContext3D();
                initBuffer();
                initProgram();
    
                addEventListener(Event.ENTER_FRAME, render);
            }
    
            private function render(event:Event):void
            {
                _context3d.clear(0, 0, 0);
                _context3d.drawTriangles(_indexBuffer);
                _context3d.present();
            }
    
            private function onCreateContext3DError(event:ErrorEvent):void
            {
                trace(event.text);
            }
    
            private function initContext3D():void
            {
                _context3d = _stage3d.context3D;
                _stage3d.x = 50;
                _stage3d.y = 50;
                _context3d.configureBackBuffer(700, 500, 2);
            }
    
            private function initBuffer():void
            {
                var vertexData:Vector.&lt;Number> = Vector.&lt;Number>(
                    [
                    // x, y, z, r, g, b
                        0, 0, 0, 1, 0, 1,
                        1, 1, 0, 1, 1, 0,
                        1, 0, 0, 1, 0, 1
                    ]);
                var indexData:Vector.&lt;uint> = Vector.&lt;uint>(
                    [0, 1, 2]);
    
                _vertexBuffer = _context3d.createVertexBuffer(vertexData.length/6, 6);
                _vertexBuffer.uploadFromVector(vertexData, 0, vertexData.length/6);
    
                _indexBuffer = _context3d.createIndexBuffer(indexData.length);
                _indexBuffer.uploadFromVector(indexData, 0, 3);
            }
    
            private function initProgram():void
            {
                var vertexSrc:String = "mov op, va0\n" +
                    "mov v0, va1\n";
                var fragmentsrc:String = "mov oc, v0\n";
                var shaderAssembler:AGALMiniAssembler = new AGALMiniAssembler();
                _program3d = shaderAssembler.assemble2(_context3d, 2, vertexSrc, fragmentsrc);
                _context3d.setVertexBufferAt(0, _vertexBuffer, 0,
                    Context3DVertexBufferFormat.FLOAT_3);
                _context3d.setVertexBufferAt(1, _vertexBuffer, 3,
                    Context3DVertexBufferFormat.FLOAT_3);
                _context3d.setProgram(_program3d);

            }
    
        }
    
    
    }</pre>

<hr />

<blockquote>
  <p>原创博文，转载请注明</p>
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1032</wp:post_id>
		<wp:post_date>2014-07-30 12:40:25</wp:post_date>
		<wp:post_date_gmt>2014-07-30 04:40:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stage3d-hellotriangle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stage3D-Texture</title>
		<link>http://blog.as3er.com/?p=1069</link>
		<pubDate>Thu, 31 Jul 2014 07:18:11 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=1069</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前一篇了解了如何渲染一个颜色填充的三角形。这篇先来理解一下<strong>纹理（texture）</strong>或<strong>纹理贴图（texture map)</strong>，以及如何创建，上传以及渲染<strong>texture</strong>。</p>

<p>当我们把图像数据应用到一个几何图形上时，我们称之为<strong>texture</strong>或<strong>texture map</strong>。整过程就是将图像上的每个点对应到几何图形上的每个点。这里又会牵扯到一个新的概念<strong>UV坐标</strong>。</p>

<p><strong>UV坐标：</strong>坐标<strong>U</strong>代表纹理的水平轴，取值范围是0~1。坐标<strong>V</strong>代表纹理的垂直轴，取值范围是0~1。纹理与几何图形的对应关系如下图：</p>

<p><img src="../img/texture.png" alt="" /></p>

<p>了解完必备的知识，我们来看如何完成渲染：</p>

<ol>
<li>加载贴图</li>
<li>创建<code>Texture</code>对象</li>
<li>将纹理上传至显卡</li>
<li>设置纹理索引</li>
<li>编写对应的AGAL</li>
<li>渲染</li>
</ol>

<h4>1&#46;加载贴图</h4>

<p>贴图加载进来或者直接嵌入都可以，这里我直接嵌入在程序内</p>

<pre>[Embed(source="./assets/floor_diffuse.jpg")]
private static var TextureClass:Class;
</pre>

<p>显卡对纹理的尺寸是有要求的，即长宽必须是2的幂。所以图片尺寸会是：2，4，8，16，32，64，128，256，512......。这里我用的是宽高为512x512的图片。我们暂时不考虑<code>minmap</code>。</p>

<p>我们在实际的游戏开发中，纹理的制作均需要按照高分辨率（4096x4096）来制作，然后按照需求导出为不同的分辨率的纹理。这么做的好处是，我们可以在后期对纹理做优化。实际上只有需要近距离观察的物件才会需要用到高分辨率纹理。如果只是场景中的一个小石子，大概只需用16x16的纹理即可。</p>

<h4>2&#46;创建Texture对象</h4>

<h4>3&#46;将纹理上传至显卡</h4>

<pre>_texture = _context3d.createTexture(512, 512, Context3DTextureFormat.BGRA, true);
_texture.uploadFromBitmapData((new TextureClass() as Bitmap).bitmapData);
</pre>

<p>创建并上传纹理。</p>

<h4>4&#46;设置纹理索引</h4>

<pre>_context3d.setTextureAt(0, _texture);
</pre>

<p>这一步是给纹理设置一个可供片段着色器访问的索引。即通过<code>fs0</code>就可以访问到这张纹理。</p>

<h4>5&#46;编写对应的AGAL</h4>

<pre>var vertexSrc:String = "mov op, va0\n" +
                "mov v0, va1\n";
var fragmentsrc:String = "tex ft0, v0, fs0 &lt;2d, repeat, linear, nomip>\n" +
                "mov oc ft0\n";
var shaderAssembler:AGALMiniAssembler = new AGALMiniAssembler();
_program3d = shaderAssembler.assemble2(_context3d, 2, vertexSrc, fragmentsrc);
</pre>

<p><code>tex ft0, v0, fs0 &lt;2d, repeat, linear, nomip&gt;</code>代码中的<code>v0</code>就是我们上传的<strong>UV</strong>信息，<code>fs0</code>就是我们上传的纹理。最后根据<strong>UV</strong>将纹理进行正确的映射（即上图表达的对应）后保存在<code>ft0</code>中，然后输出。</p>

<h4>6&#46;渲染</h4>

<pre>_context3d.clear(0, 0, 0);
_context3d.drawTriangles(_indexBuffer);
_context3d.present();
</pre>

<p>最终结果： <img src="../img/textureTest.png" alt="" /></p>

<p>完整代码：</p>

<pre>package
{
import com.adobe.utils.extended.AGALMiniAssembler;

import flash.display.Bitmap;
import flash.display.BitmapData;
import flash.display.Sprite;
import flash.display.Stage3D;
import flash.display3D.Context3D;
import flash.display3D.Context3DProfile;
import flash.display3D.Context3DRenderMode;
import flash.display3D.Context3DTextureFormat;
import flash.display3D.Context3DVertexBufferFormat;
import flash.display3D.IndexBuffer3D;
import flash.display3D.Program3D;
import flash.display3D.VertexBuffer3D;
import flash.display3D.textures.Texture;
import flash.events.ErrorEvent;
import flash.events.Event;

[SWF(backgroundColor="#333333", frameRate="60", width="800", height="600")]
public class TextureTest extends Sprite
{
    private var _context3d:Context3D;
    private var _stage3d:Stage3D;

    private var _vertexBuffer:VertexBuffer3D;
    private var _indexBuffer:IndexBuffer3D;

    private var _program3d:Program3D;

    private var _texture:Texture;

    [Embed(source="./assets/floor_diffuse.jpg")]
    private static var TextureClass:Class;

    public function TextureTest()
    {
        super();
        addEventListener(Event.ADDED_TO_STAGE, onAddToStage);
    }

    private function onAddToStage(e:Event):void
    {
        removeEventListener(Event.ADDED_TO_STAGE, onAddToStage);
        if(this.stage.stage3Ds.length > 0)
        {
            _stage3d = this.stage.stage3Ds[0];
            _stage3d.addEventListener(ErrorEvent.ERROR, onCreateContext3DError);
            _stage3d.addEventListener(Event.CONTEXT3D_CREATE, onContext3DCreated);
            _stage3d.requestContext3D(Context3DRenderMode.AUTO, Context3DProfile.STANDARD);
        }
    }

    private function onContext3DCreated(event:Event):void
    {
        initContext3D();
        initBuffer();
        initTexture();
        initProgram();

        addEventListener(Event.ENTER_FRAME, render);
    }

    private function render(event:Event):void
    {
        _context3d.clear(0, 0, 0);
        _context3d.drawTriangles(_indexBuffer);
        _context3d.present();
    }

    private function onCreateContext3DError(event:ErrorEvent):void
    {
        trace(event.text);
    }

    private function initContext3D():void
    {
        _context3d = _stage3d.context3D;
        _stage3d.x = 50;
        _stage3d.y = 50;
        _context3d.configureBackBuffer(700, 500, 2);
    }

    private function initBuffer():void
    {
        var vertexData:Vector.&lt;Number> = Vector.&lt;Number>(
            [
                // x, y, z, u, v
                -0.5, 0.5, 0, 0, 0,
                0.5, 0.5, 0, 1, 0,
                0.5, -0.5, 0, 1, 1,
                -0.5, -0.5, 0, 0, 1
            ]);

        var indexData:Vector.&lt;uint> = Vector.&lt;uint>(
            [0, 1, 2, 2, 3, 0]);

        _vertexBuffer = _context3d.createVertexBuffer(vertexData.length/5, 5);
        _vertexBuffer.uploadFromVector(vertexData, 0, vertexData.length/5);

        _indexBuffer = _context3d.createIndexBuffer(indexData.length);
        _indexBuffer.uploadFromVector(indexData, 0, indexData.length);
    }

    private function initTexture():void
    {
        _texture = _context3d.createTexture(512, 512, Context3DTextureFormat.BGRA, true);
        _texture.uploadFromBitmapData((new TextureClass() as Bitmap).bitmapData);
    }

    private function initProgram():void
    {
        var vertexSrc:String = "mov op, va0\n" +
            "mov v0, va1\n";
        var fragmentsrc:String = "tex ft0, v0, fs0 &lt;2d, repeat, linear, nomip>\n" +
            "mov oc ft0\n";
        var shaderAssembler:AGALMiniAssembler = new AGALMiniAssembler();
        _program3d = shaderAssembler.assemble2(_context3d, 2, vertexSrc, fragmentsrc);

        _context3d.setVertexBufferAt(0, _vertexBuffer, 0,
            Context3DVertexBufferFormat.FLOAT_3);
        _context3d.setVertexBufferAt(1, _vertexBuffer, 3,
            Context3DVertexBufferFormat.FLOAT_2);
        _context3d.setTextureAt(0, _texture);
        _context3d.setProgram(_program3d);

    }

}
}
</pre>

<hr />

<blockquote>
  <p>原创博文，转载请注明</p>
  
  <p>作者：vanCopper</p>
  
  <p>Blog: http://blog.as3er.com http://blog.copper3d.org</p>
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1069</wp:post_id>
		<wp:post_date>2014-07-31 15:18:11</wp:post_date>
		<wp:post_date_gmt>2014-07-31 07:18:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stage3d-texture</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stage3D-AGAL</title>
		<link>http://blog.as3er.com/?p=1078</link>
		<pubDate>Fri, 01 Aug 2014 07:12:02 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=1078</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前两篇涉及到AGAL的地方，都直接略过了。这里详细理解一下。</p>

<p><strong>AGAL(Adobe Graphics Assembly Language)</strong>Adobe 图形汇编语言</p>

<p>AGAL是用来编写着色器的，着色器是和显卡交互的程序。所以就可以理解为如果想让显卡对顶点和像素进行操作就要通过编写对应的AGAL代码来实现。</p>

<p>理解AGAL主要是以下几点：</p>

<ol>
<li>语法</li>
<li>寄存器</li>
<li>寄存器分类和操作</li>
</ol>

<h4>1.语法</h4>

<p><code>&lt;opcode&gt; &lt;destination&gt; &lt;source 1&gt; &lt;source 2&gt;</code></p>

<p><code>opcode</code>是指要执行的指令，如：<code>add</code>,<code>div</code>,<code>mov...</code>。<code>destination</code>保存指令执行的结果。<code>source 1</code>,<code>source 2</code>是要参与运算的源数据。例如：</p>

<p><code>mov v0, va1</code>：表示将<code>va1</code>的值复制到<code>v0</code>中。</p>

<p><code>mul ft0,ft1,fc1</code>：表示将<code>ft1</code>与<code>fc1</code>相乘的结果存放在<code>ft0</code>中。</p>

<p><code>opcode</code>大约有30个，具体可以参考这里<a href="http://www.adobe.com/cn/devnet/flashplayer/articles/what-is-agal/_jcr_content/articlecontentAdobe/viewlarger.content.html">opcode1</a>,<a href="http://www.adobe.com/cn/devnet/flashplayer/articles/what-is-agal/_jcr_content/articlecontentAdobe/viewlarger_0.content.html">opcode2</a>。</p>

<h4>2.寄存器</h4>

<p><code>&lt;opcode&gt; &lt;destination&gt; &lt;source 1&gt; &lt;source 2&gt;</code>中的<code>destination</code>和<code>source</code>称作<strong>寄存器</strong>。可以将<strong>寄存器</strong>理解为变量，它是GPU中的小型内存区域，AGAL程序（着色器）可在执行期间使用它们。每个寄存器占128位，即可存放4个浮点数。4个浮点数称作寄存器的分量，通过<code>xyzw</code>或<code>rgba</code>进行存取操作。例如访问寄存器<code>v0</code>的第一个分量：</p>

<pre> v0.x 或者 v0.r</pre>

<p>我们一般在顶点着色器中访问分量使用<code>xyzw</code>，在片段着色器中使用<code>rgba</code>。</p>

<h4>3.寄存器分类和操作</h4>

<p>寄存器分为三类：顶点着色器使用的寄存器，片段着色器使用的寄存器，两者为交换数据共用的寄存器。参考下表：</p>

<table>
<thead>
<tr>
  <th>顶点着色器使用的寄存器</th>
  <th>共用的寄存器</th>
  <th>片段着色器使用的寄存器</th>
</tr>
</thead>
<tbody>
<tr>
  <td>va:顶点属性寄存器</td>
  <td>v:变量寄存器</td>
  <td>fc:常量寄存器</td>
</tr>
<tr>
  <td>vc:常量寄存器</td>
  <td></td>
  <td>ft:临时寄存器</td>
</tr>
<tr>
  <td>vt:临时寄存器</td>
  <td></td>
  <td>fs:纹理采样寄存器</td>
</tr>
<tr>
  <td>op:输出寄存器</td>
  <td></td>
  <td>oc:输出寄存器</td>
</tr>
</tbody>
</table>

<h5>顶点属性寄存器：va0-va7</h5>

<p><code>0-7</code>表示索引，共8个可用。也就是说每个顶点均有8个可用的寄存器，那么也就意味着每个顶点有32个数字可以用来存储数据。比如：x,y,z位置数据，UV数据，法线数据等。回想Texture的例子：</p>

<pre>
var vertexData:Vector.<Number> = Vector.<Number>(
[
    // x, y, z, u, v
    -0.5, 0.5, 0, 0, 0,
    0.5, 0.5, 0, 1, 0,
    0.5, -0.5, 0, 1, 1,
    -0.5, -0.5, 0, 0, 1
]);

_context3d.setVertexBufferAt(0, _vertexBuffer, 0,
    Context3DVertexBufferFormat.FLOAT_3);
_context3d.setVertexBufferAt(1, _vertexBuffer, 3,
    Context3DVertexBufferFormat.FLOAT_2);
</pre>

<p>从代码里可以知道，每个顶点包含 x, y, z, u, v六个数据。因为每个顶点属性寄存器只能保存4个数字，所以我们需要把数据分别保存在两个不同的属性寄存器中。<code>_context3d.setVertexBufferAt(0, _vertexBuffer, 0,Context3DVertexBufferFormat.FLOAT_3);</code>就表示将x, y, z坐标信息保存在<code>va0</code>中。<code>_context3d.setVertexBufferAt(1, _vertexBuffer, 3,Context3DVertexBufferFormat.FLOAT_2);</code>就表示将u,v保存在<code>va1</code>中。</p>

<h5>常量寄存器：vc0-vc249 &amp; fc0-fc63</h5>

<p>AGAL1的版本里vc是128个，fc是28个，AGAL2的版本里vc和fc就分别增加到250个和64个。通过<code>_context3d.setProgramConstantsFromVector</code>方法将需要的数据上传至<code>vc</code>或<code>fc</code>。</p>

<h5>临时寄存器：vt0-vt25 &amp; ft0-ft15</h5>

<p>AGAL1的版本里vt和ft均为8个，AGAL2的版本里vt有26个，ft有16个。可以将临时寄存器理解为局部变量，用来临时存储计算结果等数据的。</p>

<h5>变量寄存器：v0-v9</h5>

<p>AGAL1的版本里v有8个，AGAL2版本里v增加至10个。这些寄存器用于将数据从顶点着色器传递到像素着色器。传递的数据由GPU恰当地插入，使像素着色器能够收到被处理的像素的正确值。比如Texture例子中将UV信息传入<code>v0</code>,随后被片段着色器使用：
<code>mov v0, va1</code>。</p>

<h5>纹理采样寄存器：fs0-fs7</h5>

<p>纹理采样器寄存器用于基于<code>UV</code>坐标，从纹理挑选颜色值。</p>

<p>要使用的纹理通过调用 <code>Context3D::setTextureAt()</code> 来指定。</p>

<p>使用纹理采样器的语法为：<code>fs&lt;n&gt; &lt;flags&gt;</code> ，其中 <code>&lt;n&gt;</code> 是采样器索引，<code>&lt;flags&gt;</code> 是一个或多个指定应该如何采样的标志。</p>

<p><code>&lt;flags&gt;</code> 是一个逗号分隔的字符串集，定义：</p>

<p>纹理维度。选项：2d、cube
mip 映射。选项：nomip （或 mipnone，它们是相同的）、mipnearest、miplinear
纹理过滤。选项：nearest、linear
纹理重复。选项：repeat、wrap、clamp
例如Texture的例子里:</p>

<pre>tex ft0, v0, fs0 <2d, repeat, linear, nomip></pre>

<hr />

<blockquote>
  <p>原创博文，转载请注明</p>
  
  <p>作者：vanCopper</p>
  
  <p>Blog: http://blog.as3er.com http://blog.copper3d.org</p>
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1078</wp:post_id>
		<wp:post_date>2014-08-01 15:12:02</wp:post_date>
		<wp:post_date_gmt>2014-08-01 07:12:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stage3d-agal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stage3D-3D世界</title>
		<link>http://blog.as3er.com/?p=1083</link>
		<pubDate>Tue, 05 Aug 2014 08:24:11 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=1083</guid>
		<description></description>
		<content:encoded><![CDATA[<p>先来理解一个重要的概念<strong>矩阵</strong>。 ActionScript3中提供了<strong>矩阵</strong>的类：<a href="http://help.adobe.com/zh_CN/FlashPlatform/reference/actionscript/3/flash/geom/Matrix3D.html">Matrix3D</a></p>

<blockquote>
  <p>Matrix3D 类表示一个转换矩阵，该矩阵确定三维 (3D) 显示对象的位置和方向。该矩阵可以执行转换功能，包括平移（沿 x、y 和 z 轴重新定位）、旋转和缩放（调整大小）。Matrix3D 类还可以执行透视投影，这会将 3D 坐标空间中的点映射到二维 (2D) 视图。 <img src="../img/Matrix3Delements.jpg" alt="" /></p>
</blockquote>

<p>既然<strong>矩阵</strong>可以用来控制3D显示对象的位置等，我们就把<strong>Texture</strong>的例子修改一下。用<strong>矩阵</strong>来让显示对象动起来。 可以先预览<a href="../img/TextureTest.html">Demo</a></p>

<p>需要修改部分代码来实现上面的效果：</p>

<ul>
<li>首先我们要有一个<code>矩阵</code>来对应3D的显示对象。</li>
</ul>

<pre>private var _modelMatrix:Matrix3D = new Matrix3D();
//在render方法中 将矩阵上传至 vc0
if(_t > .5) _speed = -.02;
if(_t &lt; -.5) _speed = .02;
_t += _speed;
_modelMatrix.identity();
_modelMatrix.appendTranslation(_t, 0, 0);
_context3d.setProgramConstantsFromMatrix(Context3DProgramType.VERTEX, 0, _modelMatrix, true);
</pre>

<ul>
<li>其次对AGAL代码进行对应的修改。</li>
</ul>

<pre>var vertexSrc:String = "m44 op, va0, vc0\n" +
    "mov v0, va1\n";
</pre>

<p><code>m44 op, va0, vc0</code>这句代码就是将顶点矩阵与变换矩阵进行乘法操作。这样一来显示对象就会叠加上变换矩阵，进行了平移，旋转，缩放操作。</p>

<p>进入正题，构建一个3D场景我们需要利用矩阵进行一些几何变换。这些几何变换按照执行顺序依次是：</p>

<ol>
<li>视图变换</li>
<li>模型变换</li>
<li>投影变换</li>
<li>视口变换</li>
</ol>

<h5>1&#46;视图变换</h5>

<p><strong>视图变换</strong>是我们应用的第一个变换，它主要是用来确定观察点位置，也可以理解为摄像机位置。需要注意的是，在进行其他任何变换之前必须先指定视图变换。</p>

<h5>2&#46;模型变换</h5>

<p><strong>模型变换</strong>主要是对3D对象本身进行的移动，旋转，缩放操作。</p>

<h5>3&#46;投影变换</h5>

<p><strong>投影变换</strong>建立了一个裁剪平面，用于确定哪些3D显示对象可以被看到。投影又分为：<strong>正投影（平行投影）</strong>和<strong>透视投影</strong>。</p>

<h6>正投影：几何图形会以指定的大小直接被映射到2D屏幕上，也就是没有近大远小的效果。</h6>

<h6>透视投影：通过透视投影，场景会显示的更接近现实情况。即有近大远小的效果。</h6>

<p>我们这里只讨论<strong>透视投影</strong>。使用<strong>平截头体</strong>来定义<strong>透视投影</strong>。<strong>平截头体</strong>最终会转化为<strong>投影矩阵</strong>,具体推导算法我们不在这里讨论。我们大概理解一下<strong>平截头体</strong>是什么样子，如何定义它。</p>

<p><strong>平截头体</strong>示意图：</p>

<p><img src="../img/perspective.gif" alt="" /></p>

<p><code>fovy:</code> 定义了 camera 在 y 方向上的视线角度（介于 0 ~ 180 之间）</p>

<p><code>aspect:</code> 定义了近裁剪面的宽高比 aspect = w/h</p>

<p><code>zNear, zFar:</code> 定义了从 Camera/Viewer 到远近两个裁剪面的距离(正值)。 在Adobe官方提供的工具类中，可通过<code>PerspectiveMatrix3D.perspectiveFieldOfViewRH()</code>来创建平截头体。</p>

<pre>_projectionmatrix = new PerspectiveMatrix3D();
// 45 degrees FOV, 700/500 aspect ratio, 0.1=near, 100=far
_projectionmatrix.perspectiveFieldOfViewRH(45.0, 700 / 500, 0.01, 100.0);
</pre>

<h5>4&#46;视口变换</h5>

<p><strong>视口变换</strong>就是将最终变换后的结果映射到窗口上。这步操作，不需要我们去关注细节。</p>

<p>所以我们为了显示3D场景，最终需要做的事情就是执行下面的这个几何变换：</p>

<p><strong>投影矩阵 × 视图矩阵 × 模型矩阵（左乘矩阵，变换效果是按从右向左）</strong> 反应在代码里就是：</p>

<pre>_viewMatrix.identity();
_viewMatrix.append(_modelMatrix);
_viewMatrix.append(_cameraMatrix);
_viewMatrix.append(_projectionmatrix);
</pre>

<p>我们继续修改<strong>Texture</strong>的例子，让矩形自身绕Y轴旋转，让镜头绕Z轴旋转。 执行完整代码即可观察到效果：</p>

<pre>package
{
import com.adobe.utils.PerspectiveMatrix3D;
import com.adobe.utils.extended.AGALMiniAssembler;

import flash.display.Bitmap;
import flash.display.Sprite;
import flash.display.Stage3D;
import flash.display3D.Context3D;
import flash.display3D.Context3DProfile;
import flash.display3D.Context3DProgramType;
import flash.display3D.Context3DRenderMode;
import flash.display3D.Context3DTextureFormat;
import flash.display3D.Context3DVertexBufferFormat;
import flash.display3D.IndexBuffer3D;
import flash.display3D.Program3D;
import flash.display3D.VertexBuffer3D;
import flash.display3D.textures.Texture;
import flash.events.ErrorEvent;
import flash.events.Event;
import flash.geom.Matrix3D;
import flash.geom.Vector3D;

[SWF(backgroundColor="#333333", frameRate="60", width="800", height="600")]
public class TextureTest extends Sprite
{
private var _context3d:Context3D;
private var _stage3d:Stage3D;
private var _modelMatrix:Matrix3D = new Matrix3D();
private var _projectionmatrix:PerspectiveMatrix3D;
private var _cameraMatrix:Matrix3D;
private var _viewMatrix:Matrix3D;

private var _vertexBuffer:VertexBuffer3D;
private var _indexBuffer:IndexBuffer3D;

private var _program3d:Program3D;

private var _texture:Texture;

[Embed(source="./assets/floor_diffuse.jpg")]
private static var TextureClass:Class;

public function TextureTest()
{
    super();
    addEventListener(Event.ADDED_TO_STAGE, onAddToStage);
}

private function onAddToStage(e:Event):void
{
    removeEventListener(Event.ADDED_TO_STAGE, onAddToStage);
    if(this.stage.stage3Ds.length > 0)
    {
        _stage3d = this.stage.stage3Ds[0];
        _stage3d.addEventListener(ErrorEvent.ERROR, onCreateContext3DError);
        _stage3d.addEventListener(Event.CONTEXT3D_CREATE, onContext3DCreated);
        _stage3d.requestContext3D(Context3DRenderMode.AUTO, Context3DProfile.STANDARD);
    }
}

private function onContext3DCreated(event:Event):void
{
    initContext3D();
    initBuffer();
    initTexture();
    initProgram();

    addEventListener(Event.ENTER_FRAME, render);
}

private var _t:Number = 0;
private var _speed:Number = .02;
private var _degrees:Number = 0;
private function render(event:Event):void
{
    if(_t > .5) _speed = -.02;
    if(_t &lt; -.5) _speed = .02;

    _t += _speed;
    _degrees += 2.0;
    _modelMatrix.identity();
//          _modelMatrix.appendTranslation(_t, 0, 1);
    _modelMatrix.appendRotation(_degrees*1.0, Vector3D.Y_AXIS);

    _cameraMatrix.identity();
    _cameraMatrix.appendTranslation(0, 0, -5);
    _cameraMatrix.appendRotation(_degrees, Vector3D.Z_AXIS);

    _viewMatrix.identity();
    _viewMatrix.append(_modelMatrix);
    _viewMatrix.append(_cameraMatrix);
    _viewMatrix.append(_projectionmatrix);

    _context3d.setProgramConstantsFromMatrix(Context3DProgramType.VERTEX, 0, _viewMatrix, true);

    _context3d.clear(0, 0, 0);
    _context3d.drawTriangles(_indexBuffer);
    _context3d.present();
}

private function onCreateContext3DError(event:ErrorEvent):void
{
    trace(event.text);
}

private function initContext3D():void
{
    _context3d = _stage3d.context3D;
    _stage3d.x = 50;
    _stage3d.y = 50;
    _context3d.configureBackBuffer(700, 500, 2);

    _projectionmatrix = new PerspectiveMatrix3D();
    // 45 degrees FOV, 700/500 aspect ratio, 0.1=near, 100=far
    _projectionmatrix.perspectiveFieldOfViewRH(45.0, 700 / 500, 0.01, 100.0);

    _cameraMatrix = new Matrix3D();
    _cameraMatrix.appendTranslation(0, 0, -5);

    _viewMatrix = new Matrix3D();
}

private function initBuffer():void
{
    var vertexData:Vector.&lt;Number> = Vector.&lt;Number>(
        [
            // x, y, z, u, v
            -0.5, 0.5, 0, 0, 0,
            0.5, 0.5, 0, 1, 0,
            0.5, -0.5, 0, 1, 1,
            -0.5, -0.5, 0, 0, 1
        ]);

    var indexData:Vector.&lt;uint> = Vector.&lt;uint>(
        [0, 1, 2, 2, 3, 0]);

    _vertexBuffer = _context3d.createVertexBuffer(vertexData.length/5, 5);
    _vertexBuffer.uploadFromVector(vertexData, 0, vertexData.length/5);

    _indexBuffer = _context3d.createIndexBuffer(indexData.length);
    _indexBuffer.uploadFromVector(indexData, 0, indexData.length);
}

private function initTexture():void
{
    _texture = _context3d.createTexture(512, 512, Context3DTextureFormat.BGRA, true);
    _texture.uploadFromBitmapData((new TextureClass() as Bitmap).bitmapData);
}

private function initProgram():void
{
    var vertexSrc:String = "m44 op, va0, vc0\n" +
        "mov v0, va1\n";
    var fragmentsrc:String = "tex ft0, v0, fs0 &lt;2d, repeat, linear, nomip>\n" +
        "mov oc ft0\n";
    var shaderAssembler:AGALMiniAssembler = new AGALMiniAssembler();
    _program3d = shaderAssembler.assemble2(_context3d, 2, vertexSrc, fragmentsrc);

    _context3d.setVertexBufferAt(0, _vertexBuffer, 0,
        Context3DVertexBufferFormat.FLOAT_3);
    _context3d.setVertexBufferAt(1, _vertexBuffer, 3,
        Context3DVertexBufferFormat.FLOAT_2);
    _context3d.setTextureAt(0, _texture);
    _context3d.setProgram(_program3d);

}

}
}
</pre>

<hr />

<blockquote>
  <p>原创博文，转载请注明</p>
  
  <p>作者：vanCopper</p>
  
  <p>Blog: http://blog.as3er.com http://blog.copper3d.org</p>
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1083</wp:post_id>
		<wp:post_date>2014-08-05 16:24:11</wp:post_date>
		<wp:post_date_gmt>2014-08-05 08:24:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stage3d-3d%e4%b8%96%e7%95%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stage3D-3D光照</title>
		<link>http://blog.as3er.com/?p=1091</link>
		<pubDate>Wed, 13 Aug 2014 07:44:37 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=1091</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>光特性</h3>

<p>参考OpenGL的光照模型，把光分成4种独立的成分：</p>

<ol>
<li>环境光</li>
<li>散射光</li>
<li>镜面光</li>
<li>发散光</li>
</ol>

<h5>1.环境光：ambient light</h5>

<p>环境光是那些在环境中进行了充分的散射，无法分辨其方向的光。它会均匀的照亮物体。</p>

<h5>2.漫反射光：diffuse light</h5>

<p>漫反射光来自某个方向，但在物体表面上向各个方向上反射，无论在何处观察，散射光看上去亮度都相同。我们之所以能看到物体，就是因为物体将入射的光向各个方向反射（所以称之为漫反射）</p>

<h5>3.镜面光：specular light</h5>

<p>镜面光来自一个特定的方向，并在物体表面以特定的方向反射出去。所以镜面光会让物体看起来有光泽，如金属表面的光泽。</p>

<h5>4.发射光：emission light</h5>

<p>发射光是由物体本身发射的光。</p>

<h3>材质属性</h3>

<p>光分成了4种成分，那么对应的材质也有对着4种光成分的反射率。物体最终呈现的颜色就是物体表面（材质）对不同光成分反射后所得到的颜色。</p>

<ol>
<li>环境光材质</li>
<li>漫反射光材质</li>
<li>镜面光材质</li>
<li>发射光材质</li>
</ol>

<h5>1.环境光材质</h5>

<p>环境光材质的反射率影响物体的整体颜色，并且反射率不受观察点影响。</p>

<h5>2.漫反射光材质</h5>

<p>漫反射光材质的反射率同样影响物体颜色。对颜色的影响取决于漫反射光的颜色以及与法线的夹角的影响，而不受观察点位置的影响。</p>

<h5>3.镜面光材质</h5>

<p>物体对光的镜面反射材质属性决定了光泽的颜色、大小和亮度。镜面反射光的强度还取决于观察点的位置，当观察点正好处于入射光的反射光线上，亮斑的亮度到达最大值。</p>

<h5>4.发射光材质</h5>

<p>前面提到的三种材质都是被动地反射来自外界的光线，而有些物体本身可以发射光。</p>

<h3>光照计算</h3>

<p>光照效果是由发射光，环境光，漫反射光以及镜面高光四部分组成，这四部分各自独立计算，然后再累加起来得到最终的光照效果。
对于光照着色有<strong>高洛德着色（Gouraud Shading）</strong>与<strong>冯氏着色（Phong Shading）</strong>。</p>

<ul>
<li>高洛德着色：也被称为Per-Vertex着色，它是在顶点着色阶段对顶点进行颜色计算，然后在光栅化阶段对这些顶点颜色进行线性插值形成片段的颜色。</li>
<li>冯氏着色：也被称为Per-Pixel像素着色，它是在片段着色阶段对每一个片段（像素）进行颜色计算。</li>
</ul>

<p><strong>冯氏着色</strong>得到效果更好。</p>

<pre>
光照最终颜色 = 发射颜色 + 环境颜色 + 漫反射颜色 + 镜面反射颜色
</pre>

<p>我只实现了<strong>环境颜色</strong>和<strong>漫反射颜色</strong>，其他同理。</p>

<h5>漫反射颜色</h5>

<pre>
diffuseColor = MaterialDiffuseColor * LightColor * cos(Θ)
</pre>

<p><strong>MaterialDiffuseColor:</strong> 我们直接取材质颜色。</p>

<p><strong>cos(Θ):</strong> 是表面法向与灯光方向的夹角。
公式在AGAL中即：</p>

<pre>
//纹理采样
"tex ft0, v1, fs0<2d, linear, repeat>\n" +
//法线纹理
"tex ft1, v1, fs1<2d, linear, repeat>\n" +
//法线转换到世界空间
"m44 ft2 ft1 fc0\n"+
"nrm ft2.xyz ft2.xyz\n"+
//求法线和灯光的角度
"dp3 ft2.w ft2.xyz fc3.xyz\n"+
//取出大于0的部分
"max ft2.w ft2.w fc4.w\n"+
//diffuseColor = ft2.w * lightDiffuseColor;
"mul ft3.xyzw ft2.wwwww fc1.xyzw\n"+
//混合漫反射光
"mul ft3 ft0 ft3\n"
</pre>

<h5>环境颜色</h5>

<pre>
ambientColor = ambientLightColor * ambientMaterialColor
</pre>

<p><strong>ambientMaterialColor:</strong>直接使用贴图颜色</p>

<pre>
//混合环境光 ft0:贴图 fc2:环境光颜色
"mul ft4 ft0 fc2\n"
</pre>

<p>最后将颜色叠加：</p>

<pre>
"add oc ft3 ft4\n"
</pre>

<p>直接运行<a href="../img/LightTest.html">Demo</a>,源码在下面的Github链接中。</p>

<hr />

<blockquote>
  <p>原创博文，转载请注明</p>
  
  <p>作者：vanCopper</p>
  
  <p>Blog: http://blog.as3er.com http://blog.copper3d.org</p>
  
  <p>GitHub:https://github.com/vanCopper/Stage3DGuide</p>
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1091</wp:post_id>
		<wp:post_date>2014-08-13 15:44:37</wp:post_date>
		<wp:post_date_gmt>2014-08-13 07:44:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stage3d-3d%e5%85%89%e7%85%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>426</wp:comment_id>
			<wp:comment_author><![CDATA[feng]]></wp:comment_author>
			<wp:comment_author_email>908087098@qq.com</wp:comment_author_email>
			<wp:comment_author_url>http://feng3d.me</wp:comment_author_url>
			<wp:comment_author_IP>61.152.123.145</wp:comment_author_IP>
			<wp:comment_date>2014-08-18 16:39:15</wp:comment_date>
			<wp:comment_date_gmt>2014-08-18 08:39:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>这个文章很不错，简单清晰地阐述了灯光制作。特别是在github上给出了简单的实例，这样我就不用去away3d去找相关代码或者更轻松地去看懂away3d的灯光代码了。
感谢楼主分享！</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1408351155.1045589;s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1408586588.8750529;s:7:"message";s:40:"vanCopper 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:9:"vanCopper";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Stage3D in Brief (译文)</title>
		<link>http://blog.as3er.com/?p=1102</link>
		<pubDate>Wed, 08 Oct 2014 08:01:21 +0000</pubDate>
		<dc:creator>vanCopper</dc:creator>
		<guid isPermaLink="false">http://blog.as3er.com/?p=1102</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>并非逐字翻译，感兴趣的朋友可直接访问下方的原文。</p>
</blockquote>

<p>hi，各位。本文是我在使用Stage3D的基础上，总结的一些使用经验。虽然很都是很小的细节，但很重要的。</p>

<p><strong><em>Stage3D API</em></strong>是在Flash Player11.2，Adobe AIR 3.2之后提供的一套新的API。它建立在OpenGL和Direct3D APIS的基础上，为使用者提供了一套跨平台的GPU编程方案。
Stage3D API 支持：OpengGL,Direct3D9,Direct3D11。这意味着每次对GPU的调用，都会将当前的shader编译为当前硬件支持的字节码。Stage3D类提供了<code>Context3D</code>接口来执行渲染。</p>

<h4>如何执行渲染</h4>

<p>你不能直接实例化<code>Context3D</code>来获得<code>Context3D</code>的实例。通过Stage3D实例的<code>context3d</code>属性得到<code>Context3D</code>的实例。</p>

<p>渲染流程：</p>

<ul>
<li>通过<code>Stage3D</code>的实例方法<code>requestContext3D()</code>来请求获取<code>Context3D</code>的实例</li>
<li>通过<code>configureBackBuffer()</code>方法配置缓冲区</li>
<li>调用<code>Context3D</code>的一系列方法来创建需要上传至显卡的资源：<code>createCubeTexture</code>, <code>createIndexBuffer</code>, <code>createProgram</code>, <code>createRectangleTexture</code>, <code>createTexture</code>, <code>createVertexBuffer</code>。</li>
</ul>

<p>每帧执行：
1. 调用<code>Context3D.clear</code>清除缓冲区
2. 设置渲染状态，为下一步<code>drawTriangles</code>做准备。例如：设置<code>blendMode</code>，绑定材质，绑定<code>shaders</code>，为绑定常量数据，设置深度测试等。
3. 调用<code>drawTriangles()</code>方法绘制。
4. 重复执行直到当前场景无可绘制的对象。
5. 调用<code>present()</code>方法呈现后台缓冲区至舞台。</p>

<h4>分层</h4>

<p>Flash Player运行时存在三个分层，由远至近分别为：StageVideo->Stage3D->Stage。其中<code>StageVideo</code>和<code>Stage3D</code>层是不支持透明的。</p>

<h4>Context3D.enableErrorChecking</h4>

<p>Flash运行时有两个线程，第一个为主线程，第二个线程则是执行GPU渲染。<code>drawTriangles</code>方法执行后，会将当前渲染对象推入一个列表，渲染线程会按照顺序验证渲染列表中的项并执行渲染。所以如果你想在主线程中得到渲染线程中出现的错误就需要设置<code>Context3D.enableErrorChecking = true</code>以便得到错误信息。
<img src="../img/multi.png" alt="" /></p>

<p>调用<code>present()</code>方法后，主线程和GPU渲染线程就需要立刻执行同步。这时候要特别注意的是帧频问题，不管是主线程执行时间长还是GPU线程执行时间长都会导致帧频下降。因为两个线程会互相等待。</p>

<h4>Context3D Profiles</h4>

<p>请求获取<code>Context3D</code>的时候可以指定<code>Context3D</code>的<code>Profiles</code>。
* <code>Context3DProfile.BASELINE</code>-使用默认的profile
* <code>Context3DProfile.BASELINE_CONSTRAINED</code>-使用受限功能支持配置文件面向更早期的 GPU。此配置文件主要用于这样的设备，它们仅支持类似 Intel GMA 9xx 系列的 PS_2.0 级着色器。使用此profile时，性能更高。
* <code>Context3DProfile.BASELINE_EXTENDED</code> - 使用一个扩展功能支持配置文件以支持更新的 GPU，后者支持更大的纹理。此配置文件将 2D 纹理和矩形纹理的大小增加到最大 4096x4096
* <code>Context3DProfile.STANDARD</code>- 针对支持 MRT、AGAL2 和浮点纹理的 GPU，使用标准配置文件。</p>

<h4>Textures</h4>

<p>GPU内存是非常有限的。所以，你必须经常考虑材质的大小。Stage3D支持有限的材质类型以及材质格式</p>

<p>Texture Formats:
* <code>Context3DTextureFormat.BGRA</code>- 每个颜色通道占8位，每个像素占32位。
* <code>Context3DTextureFormat.BGRA_PACKED</code>- 每个颜色通道占4位，每个像素占16位。
* <code>Context3DTextureFormat.BGR_PACKED</code>- 每个像素占16位，通道比 为 5:6:5
* <code>Context3DTextureFormat.COMPRESSED</code>- 每个像素占4位
* <code>Context3DTextureFormat.COMPRESSED_ALPHA</code>-每个像素占8位</p>

<p>在桌面和web平台，Stage3D都支持材质的实时压缩。所以你可以从<code>BitmapData</code>或者<code>ByteArray</code>中上传单通道8位的图像数据。
<strong><em>WARNING!</em></strong> 需要谨慎使用透明像素，如果你从BitmapData或者BitmapData.getPixels()上传数据，需要在shader中重置或者选用合适的BlendMode.</p>

<p>使用<code>COMPRESSED</code>和<code>COMPRESSED_ALPHA</code>格式的材质，将获得最佳性能。另外贴图大小必须是2的N次方。访问<a href="http://www.adobe.com/devnet/flashruntimes/articles/atf-users-guide.html">Adobe Texture Format</a>了解如何利用ATF SDK 创建 ATF类型材质。</p>

<h4>Texture types</h4>

<ul>
<li>2D</li>
</ul>

<p><img src="../img/texture2d.png" alt="" /></p>

<ul>
<li>Cube</li>
</ul>

<p><img src="../img/texture3d.png" alt="" /></p>

<ul>
<li>Rectangle Texture
此类型材质只能在Adobe AIR上使用，并且不限制尺寸。唯一的限制就是不能使用<code>COMPRESSED</code>和<code>COMPRESSED_ALPHA</code>格式。</li>
</ul>

<h4>渲染至纹理</h4>

<p><code>Render Targets</code>允许将后台缓冲区渲染至任何类型的纹理。如果想对整个场景做后期效果，可以按照以下流程执行操作：</p>

<ul>
<li>清除backbuffer。</li>
<li>调用<code>Context3D.setRenderToTexture(texture)</code>方法，将渲染目标渲染至指定纹理。</li>
<li>执行drawcall。</li>
<li>调用<code>Context3D.setRenderToBackBuffer</code>方法，恢复正常渲染。</li>
<li>在第二步中得到纹理，就可以通过编写对应的shader来实现后期效果。</li>
<li>调用<code>Context3D.present()</code>呈现。</li>
</ul>

<p><strong><em>WARNING!</em></strong> 只可以使用<code>Context3DTextureFormat.BGRA</code>格式的纹理作为RT（Render Target）纹理。并且调用<code>createTexture</code>, <code>createCubeTexture</code>, <code>createRectangleTexture</code>创建该类型纹理时需要讲<code>optimizeForRenderToTexture</code>设置为<code>true</code>。</p>

<h4>Backbuffer</h4>

<p>缓冲区包含两个纹理：
1. 颜色纹理，单通道8位，每个颜色值占32位
2. 深度缓冲和模板缓冲，24位存储深度值，8位用来存储模板值。</p>

<p>Stage3D使用的是双缓冲。意思是主线程需要等后台缓冲绘制完成后，再将后台缓冲整个交换或复制到帧缓冲用于呈现。更多内容可以<a href="http://en.wikipedia.org/wiki/Multiple_buffering">点这里</a>。</p>

<p>关于优化屏幕抖动可参考这里<a href="http://en.wikipedia.org/wiki/Flicker_(screen)">image flickering</a>。</p>

<h4>Vsync 垂直同步</h4>

<p>垂直同步是显卡的一项功能，它解决了<a href="http://en.wikipedia.org/wiki/Vertical_blanking_interval">vertical blanking interval(垂直回扫期)</a>问题。如果没有垂直同步，就会出现画面不连续的问题。垂直同步虽然可以解决画面不连续问题，但同时会限制FPS。因为显卡刷新画面时，必须等显示器刷新完当前帧，并发出同步消息才可以执行下一帧画面的刷新。</p>

<p>原文解释的有点复杂，其实可以简单的理解一下：由于垂直同步的限制，游戏运行的最高帧速是没有办法超过显示器的刷新频率的。但实际的游戏中的FPS还受到FlashPlayer中运行的代码效率和显卡执行的效率的影响。</p>

<h4>Programs, VertexBuffer and IndexBuffer</h4>

<p><code>Program3D</code>是运行在GPU上的程序，它包括<code>vertex shader</code>和<code>fragment shader</code>两部分。<code>vertex shader</code>可以访问并操作存储在<code>VertexBuffer3D</code>中的数据，并负责将顶点投影至投影空间和提供<code>fragment shader</code>所需的数据。<code>vertex shader</code>为每个顶点执行一次，<code>fragment shader</code>为每个像素执行一次。通过<code>varying variables(va0-va7)</code>可将数据从<code>vertex shader</code>中传递到<code>fragment shader</code>。同时也可以上传 <code>Constants</code>数据至shader中。</p>

<p>每次<code>drawcall</code>都需要设置一个<code>IndexBuffer3D</code>。它定义了顶点绘制的顺序。顶点数据包括很多顶点属性。这些顶点数据又可以绑定在多个<code>Vertex Buffer</code>中提供给<code>vertex shader</code>访问和使用。这个机制是非常有用的，如果你的顶点数据中包括了静态(UV)或者动态数据(postion)，就可以将他们分别存储在两个<code>Vertex Buffer</code>中，并在创建<code>Vertex Buffer</code>是指定<code>Context3DBufferUsage</code>类型。这在很大程度上可优化你的程序执行效率。 关于<code>Context3DBufferUsage</code>参见<a href="http://help.adobe.com/zh_CN/FlashPlatform/reference/actionscript/3/flash/display3D/Context3DBufferUsage.html">这里</a></p>

<h4>Depth Buffer</h4>

<p>在默认状态下，深度测试是开启的。像素着色器程序的源像素输出的深度将与深度缓冲区中的当前值进行比较。如果比较计算结果为 false，则丢弃源像素。如果为 true，则呈现管道中的下一步“印模测试”将处理源像素。此外，只要 depthMask 参数设置为 true，就会使用源像素的深度更新深度缓冲区。</p>

<h4>Stencil Buffer</h4>

<p>你同样可以通过模板测试来确定需要丢弃的源像素。你需要为模板缓冲设置一个8-bits的参考值来每次渲染的时候执行模板测试。执行渲染时，会将参考值和当前模板缓冲区中的值进行对比测试。模板测试的结果决定了像素的颜色值是否要被写入到渲染目标，像素的深度值是否要被写入深度缓冲。</p>

<p>在像素渲染过程中，首先执行深度测试。如果深度测试失败，则模板测试也将无法正确执行。如果深度测试通过，则紧接着执行模板测试。模板测试的参考值可通过<code>setStencilReferenceValue()</code>进行设置。对于遮罩，模板测试是非常有用的。也可以利用模板测试实现阴影（Stencil Shadows）。</p>

<p>当然你也可以使用<a href="http://help.adobe.com/zh_CN/FlashPlatform/reference/actionscript/3/flash/display3D/Context3D.html#setScissorRectangle()">裁剪矩形</a>来绘制遮罩。</p>

<h4>Mobile Rendering</h4>

<p>这部分请参照原文吧，没做个相关的东西。怕是翻不正确。</p>

<hr />

<blockquote>
  <p>译者：vanCopper</p>
  
  <p>原文链接：http://gonchar.me/blog/goncharposts/2287</p>
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1102</wp:post_id>
		<wp:post_date>2014-10-08 16:01:21</wp:post_date>
		<wp:post_date_gmt>2014-10-08 08:01:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stage3d-in-brief-%e8%af%91%e6%96%87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="category" nicename="stage3d-game-programming"><![CDATA[Stage3D Game Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
